id: Microsoft.CodeAnalysis.AnnotationExtensions
yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
href: api/Microsoft.CodeAnalysis.AnnotationExtensions
name:
  CSharp: AnnotationExtensions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.AnnotationExtensions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
  startLine: 10
syntax:
  content:
    CSharp: public static class AnnotationExtensions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])
  yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api/Microsoft.CodeAnalysis.AnnotationExtensions
  name:
    CSharp: WithAdditionalAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
    startLine: 17
  summary: >+
    Creates a new node identical to this node with the specified annotations attached.

  syntax:
    content:
      CSharp: 'public static TNode WithAdditionalAnnotations<TNode>(this TNode node, params SyntaxAnnotation[] annotations)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
      description: Original node.
    - id: annotations
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Annotations to be added to the new node.
    return:
      id: TNode
- id: Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api/Microsoft.CodeAnalysis.AnnotationExtensions
  name:
    CSharp: WithAdditionalAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
    startLine: 28
  summary: >+
    Creates a new node identical to this node with the specified annotations attached.

  syntax:
    content:
      CSharp: 'public static TNode WithAdditionalAnnotations<TNode>(this TNode node, IEnumerable<SyntaxAnnotation> annotations)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
      description: Original node.
    - id: annotations
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        isExternal: true
      description: Annotations to be added to the new node.
    return:
      id: TNode
- id: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])
  yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api/Microsoft.CodeAnalysis.AnnotationExtensions
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
    startLine: 39
  summary: >+
    Creates a new node identical to this node with the specified annotations removed.

  syntax:
    content:
      CSharp: 'public static TNode WithoutAnnotations<TNode>(this TNode node, params SyntaxAnnotation[] annotations)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
      description: Original node.
    - id: annotations
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Annotations to be removed from the new node.
    return:
      id: TNode
- id: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api/Microsoft.CodeAnalysis.AnnotationExtensions
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
    startLine: 50
  summary: >+
    Creates a new node identical to this node with the specified annotations removed.

  syntax:
    content:
      CSharp: 'public static TNode WithoutAnnotations<TNode>(this TNode node, IEnumerable<SyntaxAnnotation> annotations)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
      description: Original node.
    - id: annotations
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        isExternal: true
      description: Annotations to be removed from the new node.
    return:
      id: TNode
- id: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.String)
  yaml: api/Microsoft.CodeAnalysis.AnnotationExtensions.yaml
  href: api/Microsoft.CodeAnalysis.AnnotationExtensions
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/AnnotationExtensions.cs
    startLine: 61
  summary: >+
    Creates a new node identical to this node with the annotions of the specified kind removed.

  syntax:
    content:
      CSharp: 'public static TNode WithoutAnnotations<TNode>(this TNode node, string annotationKind)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
      description: Original node.
    - id: annotationKind
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The kind of annotation to remove.
    return:
      id: TNode
