id: Microsoft.CodeAnalysis.AssemblyIdentity
yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
href: api/Microsoft.CodeAnalysis.AssemblyIdentity
name:
  CSharp: AssemblyIdentity
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.AssemblyIdentity
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
  startLine: 18
summary: >+
  Represents an identity of an assembly as defined by CLI metadata specification.

syntax:
  content:
    CSharp: public sealed partial class AssemblyIdentity
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.AssemblyIdentity.#ctor(System.String,System.Version,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Boolean,System.Boolean,System.Reflection.AssemblyContentType)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: AssemblyIdentity(System.String,System.Version,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Boolean,System.Boolean,System.Reflection.AssemblyContentType)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.AssemblyIdentity(System.String,System.Version,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Boolean,System.Boolean,System.Reflection.AssemblyContentType)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 68
  summary: >+
    Constructs an [Microsoft.CodeAnalysis.AssemblyIdentity](#/api/Microsoft.CodeAnalysis.AssemblyIdentity) from its constituent parts.

  syntax:
    content:
      CSharp: public AssemblyIdentity(string name, Version version = null, string cultureName = null, ImmutableArray<byte> publicKeyOrToken = default (ImmutableArray<byte>), bool hasPublicKey = false, bool isRetargetable = false, AssemblyContentType contentType = AssemblyContentType.Default)
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The simple name of the assembly.
    - id: version
      type:
        id: System.Version
        name: System.Version
        isExternal: true
      description: The version of the assembly.
    - id: cultureName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the culture to associate with the assembly.
    - id: publicKeyOrToken
      type:
        id: System.Collections.Immutable.ImmutableArray{System.Byte}
        name: System.Collections.Immutable.ImmutableArray{System.Byte}
        isExternal: true
      description: The public key or public key token of the assembly.
    - id: hasPublicKey
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: Indicates whether  represents a public key.
    - id: isRetargetable
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: Indicates whether the assembly is retargetable.
    - id: contentType
      type:
        id: System.Reflection.AssemblyContentType
        name: System.Reflection.AssemblyContentType
        isExternal: true
      description: Specifies the binding model for how this object will be treated in comparisons.
- id: Microsoft.CodeAnalysis.AssemblyIdentity.Name
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: Name
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.Name
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 222
  summary: >+
    The simple name of the assembly.

  syntax:
    content:
      CSharp: public string Name
    parameters:
    - id: Name
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_Name
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_Name
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_Name
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 222
- id: Microsoft.CodeAnalysis.AssemblyIdentity.Version
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: Version
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.Version
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 227
  summary: >+
    The version of the assembly.

  syntax:
    content:
      CSharp: public Version Version
    parameters:
    - id: Version
      type:
        id: System.Version
        name: System.Version
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_Version
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_Version
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_Version
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 227
- id: Microsoft.CodeAnalysis.AssemblyIdentity.CultureName
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: CultureName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.CultureName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 232
  summary: >+
    The culture name of the assembly, or empty if the culture is neutral.

  syntax:
    content:
      CSharp: public string CultureName
    parameters:
    - id: CultureName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_CultureName
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_CultureName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_CultureName
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 232
- id: Microsoft.CodeAnalysis.AssemblyIdentity.Flags
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: Flags
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.Flags
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 237
  summary: >+
    The AssemblyNameFlags.

  syntax:
    content:
      CSharp: public AssemblyNameFlags Flags
    parameters:
    - id: Flags
      type:
        id: System.Reflection.AssemblyNameFlags
        name: System.Reflection.AssemblyNameFlags
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_Flags
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_Flags
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_Flags
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 239
- id: Microsoft.CodeAnalysis.AssemblyIdentity.ContentType
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: ContentType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.ContentType
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 250
  summary: >+
    Specifies assembly binding model for the assembly definition or reference;

    that is how assembly references are matched to assembly definitions.

  syntax:
    content:
      CSharp: public AssemblyContentType ContentType
    parameters:
    - id: ContentType
      type:
        id: System.Reflection.AssemblyContentType
        name: System.Reflection.AssemblyContentType
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_ContentType
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_ContentType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_ContentType
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 252
- id: Microsoft.CodeAnalysis.AssemblyIdentity.HasPublicKey
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: HasPublicKey
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.HasPublicKey
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 258
  summary: >+
    True if the assembly identity includes full public key.

  syntax:
    content:
      CSharp: public bool HasPublicKey
    parameters:
    - id: HasPublicKey
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_HasPublicKey
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_HasPublicKey
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_HasPublicKey
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 260
- id: Microsoft.CodeAnalysis.AssemblyIdentity.PublicKey
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: PublicKey
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.PublicKey
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 266
  summary: >+
    Full public key or empty.

  syntax:
    content:
      CSharp: public ImmutableArray<byte> PublicKey
    parameters:
    - id: PublicKey
      type:
        id: System.Collections.Immutable.ImmutableArray{System.Byte}
        name: System.Collections.Immutable.ImmutableArray{System.Byte}
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_PublicKey
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_PublicKey
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_PublicKey
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 268
- id: Microsoft.CodeAnalysis.AssemblyIdentity.PublicKeyToken
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: PublicKeyToken
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.PublicKeyToken
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 274
  summary: >+
    Low 8 bytes of SHA1 hash of the public key, or empty.

  syntax:
    content:
      CSharp: public ImmutableArray<byte> PublicKeyToken
    parameters:
    - id: PublicKeyToken
      type:
        id: System.Collections.Immutable.ImmutableArray{System.Byte}
        name: System.Collections.Immutable.ImmutableArray{System.Byte}
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_PublicKeyToken
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_PublicKeyToken
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_PublicKeyToken
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 276
- id: Microsoft.CodeAnalysis.AssemblyIdentity.IsStrongName
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: IsStrongName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.IsStrongName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 290
  summary: >+
    True if the assembly identity has a strong name, ie. either a full public key or a token.

  syntax:
    content:
      CSharp: public bool IsStrongName
    parameters:
    - id: IsStrongName
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_IsStrongName
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_IsStrongName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_IsStrongName
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 292
- id: Microsoft.CodeAnalysis.AssemblyIdentity.IsRetargetable
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: IsRetargetable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.IsRetargetable
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 304
  summary: >+
    Gets the value which specifies if the assembly is retargetable.

  syntax:
    content:
      CSharp: public bool IsRetargetable
    parameters:
    - id: IsRetargetable
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.AssemblyIdentity.get_IsRetargetable
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: get_IsRetargetable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.get_IsRetargetable
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 306
- id: Microsoft.CodeAnalysis.AssemblyIdentity.op_Equality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.op_Equality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 322
  summary: >+
    Determines whether two [Microsoft.CodeAnalysis.AssemblyIdentity](#/api/Microsoft.CodeAnalysis.AssemblyIdentity) instances are equal.

- id: Microsoft.CodeAnalysis.AssemblyIdentity.op_Inequality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.op_Inequality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 332
  summary: >+
    Determines whether two [Microsoft.CodeAnalysis.AssemblyIdentity](#/api/Microsoft.CodeAnalysis.AssemblyIdentity) instances are not equal.

- id: Microsoft.CodeAnalysis.AssemblyIdentity.Equals(Microsoft.CodeAnalysis.AssemblyIdentity)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.Equals(Microsoft.CodeAnalysis.AssemblyIdentity)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 341
  summary: >+
    Determines whether the specified instance is equal to the current instance.

  syntax:
    content:
      CSharp: public bool Equals(AssemblyIdentity obj)
    parameters:
    - id: obj
      type:
        id: Microsoft.CodeAnalysis.AssemblyIdentity
        name: AssemblyIdentity
        href: api/Microsoft.CodeAnalysis.AssemblyIdentity
      description: The object to be compared with the current instance.
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.AssemblyIdentity.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 352
  summary: >+
    Determines whether the specified instance is equal to the current instance.

  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The object to be compared with the current instance.
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.AssemblyIdentity.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 361
  summary: >+
    Returns the hash code for the current instance.

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.AssemblyIdentity.FromAssemblyDefinition(System.Reflection.Assembly)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: FromAssemblyDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.FromAssemblyDefinition(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.cs
    startLine: 463
  summary: >+
    Retrieves assembly definition identity from given runtime assembly.

  syntax:
    content:
      CSharp: public static AssemblyIdentity FromAssemblyDefinition(Assembly assembly)
    parameters:
    - id: assembly
      type:
        id: System.Reflection.Assembly
        name: System.Reflection.Assembly
        isExternal: true
      description: The runtime assembly.
    return:
      id: AssemblyIdentity
      description: Assembly definition identity.
- id: Microsoft.CodeAnalysis.AssemblyIdentity.GetDisplayName(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: GetDisplayName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.GetDisplayName(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.DisplayName.cs
    startLine: 34
  summary: >+
    Returns the display name of the assembly identity.

  syntax:
    content:
      CSharp: public string GetDisplayName(bool fullKey = false)
    parameters:
    - id: fullKey
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: True if the full public key should be included in the name. Otherwise public key token is used.
    return:
      id: String
      description: The display name.
- id: Microsoft.CodeAnalysis.AssemblyIdentity.ToString
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.DisplayName.cs
    startLine: 52
  summary: >+
    Returns the display name of the current instance.

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: TryParseDisplayName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.DisplayName.cs
    startLine: 129
  syntax:
    content:
      CSharp: public static bool TryParseDisplayName(string displayName, out AssemblyIdentity identity)
    parameters:
    - id: displayName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: identity
      type:
        id: Microsoft.CodeAnalysis.AssemblyIdentity
        name: AssemblyIdentity
        href: api/Microsoft.CodeAnalysis.AssemblyIdentity
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@,Microsoft.CodeAnalysis.AssemblyIdentityParts@)
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentity.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentity
  name:
    CSharp: TryParseDisplayName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@,Microsoft.CodeAnalysis.AssemblyIdentityParts@)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentity.DisplayName.cs
    startLine: 157
  summary: >+
    Parses display name filling defaults for any basic properties that are missing.

  syntax:
    content:
      CSharp: public static bool TryParseDisplayName(string displayName, out AssemblyIdentity identity, out AssemblyIdentityParts parts)
    parameters:
    - id: displayName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: Display name.
    - id: identity
      type:
        id: Microsoft.CodeAnalysis.AssemblyIdentity
        name: AssemblyIdentity
        href: api/Microsoft.CodeAnalysis.AssemblyIdentity
      description: A full assembly identity.
    - id: parts
      type:
        id: Microsoft.CodeAnalysis.AssemblyIdentityParts
        name: AssemblyIdentityParts
        href: api/Microsoft.CodeAnalysis.AssemblyIdentityParts
      description: "Parts of the assembly identity that were specified in the display name, \r\n    or 0 if the parsing failed."
    return:
      id: Boolean
      description: True if display name parsed correctly.
