id: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
yaml: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.yaml
href: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
name:
  CSharp: ComparisonResult
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentityComparer.cs
  startLine: 32
summary: >+
  A set of possible outcomes of [Microsoft.CodeAnalysis.AssemblyIdentity](#/api/Microsoft.CodeAnalysis.AssemblyIdentity) comparison.

syntax:
  content:
    CSharp: public enum ComparisonResult
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
  name:
    CSharp: NotEquivalent
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentityComparer.cs
    startLine: 37
  summary: >+
    Reference doesn't match definition.

  syntax:
    content:
      CSharp: NotEquivalent = 0
- id: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
  name:
    CSharp: Equivalent
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentityComparer.cs
    startLine: 43
  summary: >+
    Strongly named reference matches strongly named definition (strong identity is identity with public key or token),

    Or weak reference matches weak definition.

  syntax:
    content:
      CSharp: Equivalent = 1
- id: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion
  yaml: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.yaml
  href: api/Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult
  name:
    CSharp: EquivalentIgnoringVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/MetadataReference/AssemblyIdentityComparer.cs
    startLine: 48
  summary: >+
    Reference matches definition except for version (reference version is lower or higher than definition version).

  syntax:
    content:
      CSharp: EquivalentIgnoringVersion = 2
