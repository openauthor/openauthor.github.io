id: Microsoft.CodeAnalysis.CandidateReason
yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
href: api/Microsoft.CodeAnalysis.CandidateReason
name:
  CSharp: CandidateReason
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.CandidateReason
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
  startLine: 12
summary: >+
  Indicates the reasons why a candidate (or set of candidate) symbols were not considered

  correct in SemanticInfo. Higher values take precedence over lower values, so if, for

  example, there a symbol with a given name that was inaccessible, and other with the wrong

  arity, only the inaccessible one would be reported in the SemanticInfo.

syntax:
  content:
    CSharp: public enum CandidateReason
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CandidateReason.None
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.None
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 17
  summary: >+
    No CandidateSymbols.

  syntax:
    content:
      CSharp: None = 0
- id: Microsoft.CodeAnalysis.CandidateReason.NotATypeOrNamespace
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotATypeOrNamespace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotATypeOrNamespace
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 23
  summary: >+
    Only a type or namespace was valid in the given location, but the candidate symbols was

    of the wrong kind.

  syntax:
    content:
      CSharp: NotATypeOrNamespace = 1
- id: Microsoft.CodeAnalysis.CandidateReason.NotAnEvent
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotAnEvent
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotAnEvent
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 29
  summary: >+
    Only an event was valid in the given location, but the candidate symbols was

    of the wrong kind.

  syntax:
    content:
      CSharp: NotAnEvent = 2
- id: Microsoft.CodeAnalysis.CandidateReason.NotAWithEventsMember
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotAWithEventsMember
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotAWithEventsMember
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 34
  summary: >+
    The candidate symbol must be a WithEvents member, but it was not.

  syntax:
    content:
      CSharp: NotAWithEventsMember = 3
- id: Microsoft.CodeAnalysis.CandidateReason.NotAnAttributeType
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotAnAttributeType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotAnAttributeType
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 40
  summary: >+
    Only an attribute type was valid in the given location, but the candidate symbol was

    of the wrong kind.

  syntax:
    content:
      CSharp: NotAnAttributeType = 4
- id: Microsoft.CodeAnalysis.CandidateReason.WrongArity
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: WrongArity
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.WrongArity
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 45
  summary: >+
    The candidate symbol takes a different number of type parameters that was required.

  syntax:
    content:
      CSharp: WrongArity = 5
- id: Microsoft.CodeAnalysis.CandidateReason.NotCreatable
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotCreatable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotCreatable
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 51
  summary: >+
    The candidate symbol existed, but was not allowed to be created in a new expression.

    For example, interfaces, static classes, and unconstrained type parameters.

  syntax:
    content:
      CSharp: NotCreatable = 6
- id: Microsoft.CodeAnalysis.CandidateReason.NotReferencable
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotReferencable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotReferencable
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 60
  summary: >+
    The candidate symbol existed, but was not allowed to be referenced. For example, the

    "get_XXX" method used to implement a property named "XXX" may not be directly

    referenced. Similarly, the type "System.Void" can not be directly referenced.

    Also occurs if "this" is used in a context (static method or field initializer)

    where "this" is not available.

  syntax:
    content:
      CSharp: NotReferencable = 7
- id: Microsoft.CodeAnalysis.CandidateReason.Inaccessible
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: Inaccessible
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.Inaccessible
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 66
  summary: >+
    The candidate symbol had an accessibility modifier (private, protected, ...) that made

    it inaccessible.

  syntax:
    content:
      CSharp: Inaccessible = 8
- id: Microsoft.CodeAnalysis.CandidateReason.NotAValue
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotAValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotAValue
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 72
  summary: >+
    The candidate symbol was in a place where a value was required, but was not a value

    (e.g., was a type or namespace).

  syntax:
    content:
      CSharp: NotAValue = 9
- id: Microsoft.CodeAnalysis.CandidateReason.NotAVariable
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotAVariable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotAVariable
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 79
  summary: >+
    The candidate symbol was in a place where a variable (or sometimes, a property) was

    required, but was not allowed there because it isn't a symbol that can be assigned to.

    For example, the left hand side of an assignment, or a ref or out parameter.

  syntax:
    content:
      CSharp: NotAVariable = 10
- id: Microsoft.CodeAnalysis.CandidateReason.NotInvocable
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: NotInvocable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.NotInvocable
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 85
  summary: >+
    The candidate symbol was used in a way that an invocable member (method, or variable of

    delegate type) was required, but the candidate symbol was not invocable.

  syntax:
    content:
      CSharp: NotInvocable = 11
- id: Microsoft.CodeAnalysis.CandidateReason.StaticInstanceMismatch
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: StaticInstanceMismatch
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.StaticInstanceMismatch
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 91
  summary: >+
    The candidate symbol must be an instance variable, but was used as static, or the

    reverse.

  syntax:
    content:
      CSharp: StaticInstanceMismatch = 12
- id: Microsoft.CodeAnalysis.CandidateReason.OverloadResolutionFailure
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: OverloadResolutionFailure
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.OverloadResolutionFailure
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 97
  summary: >+
    Overload resolution did not choose a method. The candidate symbols are the methods there

    were considered during overload resolution (which may or may not be applicable methods).

  syntax:
    content:
      CSharp: OverloadResolutionFailure = 13
- id: Microsoft.CodeAnalysis.CandidateReason.LateBound
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: LateBound
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.LateBound
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 104
  summary: >+
    Method could not be selected statically.

    The candidate symbols are the methods there were considered during overload resolution

    (which may or may not be applicable methods).

  syntax:
    content:
      CSharp: LateBound = 14
- id: Microsoft.CodeAnalysis.CandidateReason.Ambiguous
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: Ambiguous
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.Ambiguous
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 112
  summary: >+
    Multiple ambiguous symbols were available with the same name. This can occur if "using"

    statements bring multiple namespaces into scope, and the same type is available in

    multiple. This can also occur if multiple properties of the same name are available in a

    multiple interface inheritance situation.

  syntax:
    content:
      CSharp: Ambiguous = 15
- id: Microsoft.CodeAnalysis.CandidateReason.MemberGroup
  yaml: api/Microsoft.CodeAnalysis.CandidateReason.yaml
  href: api/Microsoft.CodeAnalysis.CandidateReason
  name:
    CSharp: MemberGroup
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CandidateReason.MemberGroup
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Compilation/CandidateReason.cs
    startLine: 118
  summary: >+
    CandidateSymbols are members of a group of results. This is used when there isn't a problem,

    but there is more than one result, for example nameof(int.ToString).

  syntax:
    content:
      CSharp: MemberGroup = 16
