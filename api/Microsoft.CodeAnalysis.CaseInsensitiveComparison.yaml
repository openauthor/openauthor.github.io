id: Microsoft.CodeAnalysis.CaseInsensitiveComparison
yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
name:
  CSharp: CaseInsensitiveComparison
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
  startLine: 14
summary: >+
  Case-insensitive operations (mostly comparison) on unicode strings.

syntax:
  content:
    CSharp: public static class CaseInsensitiveComparison
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Comparer
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: Comparer
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Comparer
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 185
  summary: >+
    Returns a StringComparer that compares strings according the VB identifier comparison rules.

  syntax:
    content:
      CSharp: public static StringComparer Comparer
    parameters:
    - id: Comparer
      type:
        id: System.StringComparer
        name: System.StringComparer
        isExternal: true
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.get_Comparer
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: get_Comparer
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.get_Comparer
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 187
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Equals(System.String,System.String)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Equals(System.String,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 196
  summary: >+
    Determines if two VB identifiers are equal according to the VB identifier comparison rules.

  syntax:
    content:
      CSharp: public static bool Equals(string left, string right)
    parameters:
    - id: left
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: First identifier to compare
    - id: right
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: Second identifier to compare
    return:
      id: Boolean
      description: true if the identifiers should be considered the same.
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.EndsWith(System.String,System.String)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: EndsWith
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.EndsWith(System.String,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 207
  summary: >+
    Determines if the string 'value' end with string 'possibleEnd'.

  syntax:
    content:
      CSharp: public static bool EndsWith(string value, string possibleEnd)
    parameters:
    - id: value
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: possibleEnd
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Compare(System.String,System.String)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: Compare
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.Compare(System.String,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 218
  summary: >+
    Compares two VB identifiers according to the VB identifier comparison rules.

  syntax:
    content:
      CSharp: public static int Compare(string left, string right)
    parameters:
    - id: left
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: First identifier to compare
    - id: right
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: Second identifier to compare
    return:
      id: Int32
      description: -1 if  < , 1 if  > , 0 if they are equal.
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.GetHashCode(System.String)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.GetHashCode(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 228
  summary: >+
    Gets a case-insensitive hash code for VB identifiers.

  syntax:
    content:
      CSharp: public static int GetHashCode(string value)
    parameters:
    - id: value
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: identifier to get the hash code for
    return:
      id: Int32
      description: The hash code for the given identifier
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.String)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: ToLower
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 240
  summary: >+
    Convert a string to lower case in culture invariant way

  syntax:
    content:
      CSharp: public static string ToLower(string value)
    parameters:
    - id: value
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: String
- id: Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Text.StringBuilder)
  yaml: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison.yaml
  href: api/Microsoft.CodeAnalysis.CaseInsensitiveComparison
  name:
    CSharp: ToLower
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/CaseInsensitiveComparison.cs
    startLine: 261
  summary: >+
    In-place convert string in StringBuilder to lower case in culture invariant way

  syntax:
    content:
      CSharp: public static void ToLower(StringBuilder builder)
    parameters:
    - id: builder
      type:
        id: System.Text.StringBuilder
        name: System.Text.StringBuilder
        isExternal: true
    return:
      id: Void
