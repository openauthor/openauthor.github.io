id: Microsoft.CodeAnalysis.ChildSyntaxList
yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
href: api/Microsoft.CodeAnalysis.ChildSyntaxList
name:
  CSharp: ChildSyntaxList
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.ChildSyntaxList
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
  startLine: 12
syntax:
  content:
    CSharp: public partial struct ChildSyntaxList
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Count
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Count
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Count
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 26
  summary: >+
    Gets the number of children contained in the [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList).

  syntax:
    content:
      CSharp: public int Count
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.ChildSyntaxList.get_Count
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: get_Count
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.get_Count
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 28
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Item(System.Int32)
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 61
  summary: >+
    Gets the child at the specified index.

- id: Microsoft.CodeAnalysis.ChildSyntaxList.get_Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: get_Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.get_Item(System.Int32)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 63
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Any
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Any
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Any
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 281
  syntax:
    content:
      CSharp: public bool Any()
    parameters: []
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.ChildSyntaxList.First
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: First
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.First
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 291
  summary: >+
    Returns the first child in the list.

  syntax:
    content:
      CSharp: public SyntaxNodeOrToken First()
    parameters: []
    return:
      id: SyntaxNodeOrToken
      description: The first child in the list.
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Last
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Last
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Last
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 306
  summary: >+
    Returns the last child in the list.

  syntax:
    content:
      CSharp: public SyntaxNodeOrToken Last()
    parameters: []
    return:
      id: SyntaxNodeOrToken
      description: The last child in the list.
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Reverse
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Reverse
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Reverse
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 320
  summary: >+
    Returns a list which contains all children of [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) in reversed order.

  syntax:
    content:
      CSharp: public Reversed Reverse()
    parameters: []
    return:
      id: Reversed
      description: '[Microsoft.CodeAnalysis.ChildSyntaxList.Reversed](#/api/Microsoft.CodeAnalysis.ChildSyntaxList.Reversed) which contains all children of [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) in reversed order'
- id: Microsoft.CodeAnalysis.ChildSyntaxList.GetEnumerator
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: GetEnumerator
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.GetEnumerator
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 327
  summary: >+
    Returns an enumerator that iterates through the [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList).

  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
      description: A [Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator](#/api/Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator) for the [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList).
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 360
  summary: >+
    Determines whether the specified object is equal to the current instance.

  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The object to be compared with the current instance.
    return:
      id: Boolean
      description: true if the specified object is a [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structure and is equal to the current instance; otherwise, false.
- id: Microsoft.CodeAnalysis.ChildSyntaxList.Equals(Microsoft.CodeAnalysis.ChildSyntaxList)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.Equals(Microsoft.CodeAnalysis.ChildSyntaxList)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 368
  summary: >+
    Determines whether the specified [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structure is equal to the current instance.

  syntax:
    content:
      CSharp: public bool Equals(ChildSyntaxList other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.ChildSyntaxList
        name: ChildSyntaxList
        href: api/Microsoft.CodeAnalysis.ChildSyntaxList
      description: The [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structure to be compared with the current instance.
    return:
      id: Boolean
      description: true if the specified [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structure is equal to the current instance; otherwise, false.
- id: Microsoft.CodeAnalysis.ChildSyntaxList.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 375
  summary: >+
    Returns the hash code for the current instance.

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      description: A 32-bit signed integer hash code.
- id: Microsoft.CodeAnalysis.ChildSyntaxList.op_Equality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.op_Equality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 384
  summary: >+
    Indicates whether two [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structures are equal.

- id: Microsoft.CodeAnalysis.ChildSyntaxList.op_Inequality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)
  yaml: api/Microsoft.CodeAnalysis.ChildSyntaxList.yaml
  href: api/Microsoft.CodeAnalysis.ChildSyntaxList
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ChildSyntaxList.op_Inequality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/ChildSyntaxList.cs
    startLine: 393
  summary: >+
    Indicates whether two [Microsoft.CodeAnalysis.ChildSyntaxList](#/api/Microsoft.CodeAnalysis.ChildSyntaxList) structures are unequal.

