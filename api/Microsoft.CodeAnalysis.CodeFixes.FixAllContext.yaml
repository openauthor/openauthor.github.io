id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext
yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
name:
  CSharp: FixAllContext
qualifiedName:
  CSharp: FixAllContext
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
  startLine: 16
summary: >+
  Context for "Fix all occurrences" code fixes provided by an [Microsoft.CodeAnalysis.CodeFixes.FixAllProvider](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllProvider).

syntax:
  content:
    CSharp: public class FixAllContext
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: Solution
  qualifiedName:
    CSharp: Solution
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 24
  summary: >+
    Solution to fix all occurrences.

  syntax:
    content:
      CSharp: public Solution Solution
    parameters:
    - id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: api\Microsoft.CodeAnalysis.Solution
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_Solution
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_Solution
  qualifiedName:
    CSharp: get_Solution
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 24
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: Project
  qualifiedName:
    CSharp: Project
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 29
  summary: >+
    Project within which fix all occurrences was triggered.

  syntax:
    content:
      CSharp: public Project Project
    parameters:
    - id: Project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: api\Microsoft.CodeAnalysis.Project
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_Project
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_Project
  qualifiedName:
    CSharp: get_Project
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 29
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: Document
  qualifiedName:
    CSharp: Document
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 34
  summary: >+
    Document within which fix all occurrences was triggered.

  syntax:
    content:
      CSharp: public Document Document
    parameters:
    - id: Document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: api\Microsoft.CodeAnalysis.Document
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_Document
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_Document
  qualifiedName:
    CSharp: get_Document
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 34
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: CodeFixProvider
  qualifiedName:
    CSharp: CodeFixProvider
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 39
  summary: >+
    Underlying [Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider](#/api\Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider) which triggered this fix all.

  syntax:
    content:
      CSharp: public CodeFixProvider CodeFixProvider
    parameters:
    - id: CodeFixProvider
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider
        name: CodeFixProvider
        href: api\Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_CodeFixProvider
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_CodeFixProvider
  qualifiedName:
    CSharp: get_CodeFixProvider
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 39
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: Scope
  qualifiedName:
    CSharp: Scope
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 44
  summary: >+
    FixAllScope to fix all occurrences.

  syntax:
    content:
      CSharp: public FixAllScope Scope
    parameters:
    - id: Scope
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.FixAllScope
        name: FixAllScope
        href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllScope
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_Scope
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_Scope
  qualifiedName:
    CSharp: get_Scope
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 44
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: DiagnosticIds
  qualifiedName:
    CSharp: DiagnosticIds
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 51
  summary: >+
    Diagnostic Ids to fix.

    Note that [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext), [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext) and [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext) methods

    return only diagnostics whose IDs are contained in this set of Ids.

  syntax:
    content:
      CSharp: public ImmutableHashSet<string> DiagnosticIds
    parameters:
    - id: DiagnosticIds
      type:
        id: System.Collections.Immutable.ImmutableHashSet{System.String}
        name: System.Collections.Immutable.ImmutableHashSet{System.String}
        isExternal: true
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_DiagnosticIds
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_DiagnosticIds
  qualifiedName:
    CSharp: get_DiagnosticIds
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: CodeActionEquivalenceKey
  qualifiedName:
    CSharp: CodeActionEquivalenceKey
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 56
  summary: >+
    The [Microsoft.CodeAnalysis.CodeActions.CodeAction.EquivalenceKey](#/api\Microsoft.CodeAnalysis.CodeActions.CodeAction) value expected of a [Microsoft.CodeAnalysis.CodeActions.CodeAction](#/api\Microsoft.CodeAnalysis.CodeActions.CodeAction) participating in this fix all.

  syntax:
    content:
      CSharp: public string CodeActionEquivalenceKey
    parameters:
    - id: CodeActionEquivalenceKey
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_CodeActionEquivalenceKey
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_CodeActionEquivalenceKey
  qualifiedName:
    CSharp: get_CodeActionEquivalenceKey
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 56
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: CancellationToken
  qualifiedName:
    CSharp: CancellationToken
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 61
  summary: >+
    CancellationToken for fix all session.

  syntax:
    content:
      CSharp: public CancellationToken CancellationToken
    parameters:
    - id: CancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.get_CancellationToken
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: get_CancellationToken
  qualifiedName:
    CSharp: get_CancellationToken
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 61
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: GetDocumentDiagnosticsAsync
  qualifiedName:
    CSharp: GetDocumentDiagnosticsAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 114
  summary: >+
    Gets all the diagnostics in the given document filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext).

  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetDocumentDiagnosticsAsync(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: api\Microsoft.CodeAnalysis.Document
    return:
      id: Task
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: GetProjectDiagnosticsAsync
  qualifiedName:
    CSharp: GetProjectDiagnosticsAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 131
  summary: >+
    Gets all the project-level diagnostics, i.e. diagnostics with no source location, in the given project filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext).

  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetProjectDiagnosticsAsync(Project project)
    parameters:
    - id: project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: api\Microsoft.CodeAnalysis.Project
    return:
      id: Task
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: GetAllDiagnosticsAsync
  qualifiedName:
    CSharp: GetAllDiagnosticsAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 140
  summary: >+
    Gets all the diagnostics in the given project filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext).

    This includes both document-level diagnostics for all documents in the given project and project-level diagnostics, i.e. diagnostics with no source location, in the given project.

  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetAllDiagnosticsAsync(Project project)
    parameters:
    - id: project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: api\Microsoft.CodeAnalysis.Project
    return:
      id: Task
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  name:
    CSharp: WithCancellationToken
  qualifiedName:
    CSharp: WithCancellationToken
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\CodeFixes\FixAllOccurrences\FixAllContext.cs
    startLine: 167
  summary: >+
    Gets a new [Microsoft.CodeAnalysis.CodeFixes.FixAllContext](#/api\Microsoft.CodeAnalysis.CodeFixes.FixAllContext) with the given cancellationToken.

  syntax:
    content:
      CSharp: public FixAllContext WithCancellationToken(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: FixAllContext
