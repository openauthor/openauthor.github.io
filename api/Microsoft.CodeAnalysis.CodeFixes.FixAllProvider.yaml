id: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
yaml: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.yaml
href: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
name:
  CSharp: FixAllProvider
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
  path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllProvider.cs
  startLine: 13
summary: >+
  Implement this abstract type to provide fix all/multiple occurrences code fixes for source code problems.

  Alternatively, you can use any of the well known fix all providers from [Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders](#/api/Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders).

syntax:
  content:
    CSharp: public abstract class FixAllProvider
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllScopes
  yaml: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.yaml
  href: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
  name:
    CSharp: GetSupportedFixAllScopes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllScopes
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllProvider.cs
    startLine: 22
  summary: >+
    Gets the supported scopes for fixing all occurrences of a diagnostic.

    By default, it returns the following scopes:

    (a) [Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Document](#/api/Microsoft.CodeAnalysis.CodeFixes.FixAllScope)

    (b) [Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Project](#/api/Microsoft.CodeAnalysis.CodeFixes.FixAllScope) and

    (c) [Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Solution](#/api/Microsoft.CodeAnalysis.CodeFixes.FixAllScope)

  syntax:
    content:
      CSharp: public virtual IEnumerable<FixAllScope> GetSupportedFixAllScopes()
    parameters: []
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllDiagnosticIds(Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider)
  yaml: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.yaml
  href: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
  name:
    CSharp: GetSupportedFixAllDiagnosticIds
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllDiagnosticIds(Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllProvider.cs
    startLine: 32
  summary: >+
    Gets the diagnostic IDs for which fix all occurrences is supported.

    By default, it returns [Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.FixableDiagnosticIds](#/api/Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider) for the given .

  syntax:
    content:
      CSharp: public virtual IEnumerable<string> GetSupportedFixAllDiagnosticIds(CodeFixProvider originalCodeFixProvider)
    parameters:
    - id: originalCodeFixProvider
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider
        name: CodeFixProvider
        href: api/Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider
      description: Original code fix provider that returned this fix all provider from [Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.GetFixAllProvider](#/api/Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider) method.
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetFixAsync(Microsoft.CodeAnalysis.CodeFixes.FixAllContext)
  yaml: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.yaml
  href: api/Microsoft.CodeAnalysis.CodeFixes.FixAllProvider
  name:
    CSharp: GetFixAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetFixAsync(Microsoft.CodeAnalysis.CodeFixes.FixAllContext)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllProvider.cs
    startLine: 40
  summary: >+
    Gets fix all occurrences fix for the given fixAllContext.

  syntax:
    content:
      CSharp: public abstract Task<CodeAction> GetFixAsync(FixAllContext fixAllContext);
    parameters:
    - id: fixAllContext
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext
        name: FixAllContext
        href: api/Microsoft.CodeAnalysis.CodeFixes.FixAllContext
    return:
      id: Task
