id: Microsoft.CodeAnalysis.CodeRefactorings
yaml: api\Microsoft.CodeAnalysis.CodeRefactorings.yaml
href: api\Microsoft.CodeAnalysis.CodeRefactorings
name:
  CSharp: CodeRefactorings
qualifiedName:
  CSharp: CodeRefactorings
type: Namespace
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\CodeRefactorings\CodeRefactoringContext.cs
  startLine: 7
items:
- id: Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext
  yaml: api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.yaml
  href: api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext
  type: Struct
  summary: >+
    Context for code refactorings provided by an [Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider](#/api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider).

- id: Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider
  yaml: api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider.yaml
  href: api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider
  type: Class
  summary: >+
    Inherit this type to provide source code refactorings.

    Remember to use [Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute](#/api\Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute) so the host environment can offer your refactorings in a UI.

- id: Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute
  yaml: api\Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.yaml
  href: api\Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute
  type: Class
  summary: >+
    Use this attribute to declare a [Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider](#/api\Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider) implementation so that it can be discovered by the host.

