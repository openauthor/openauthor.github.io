id: Microsoft.CodeAnalysis.CompilationReference
yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
href: api/Microsoft.CodeAnalysis.CompilationReference
name:
  CSharp: CompilationReference
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.CompilationReference
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
  startLine: 12
summary: >+
  Reference to another C# or VB compilation.

syntax:
  content:
    CSharp: public abstract class CompilationReference
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: Microsoft.CodeAnalysis.MetadataReference
  name: MetadataReference
  href: api/Microsoft.CodeAnalysis.MetadataReference
items:
- id: Microsoft.CodeAnalysis.CompilationReference.Compilation
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: Compilation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.Compilation
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 14
  syntax:
    content:
      CSharp: public Compilation Compilation
    parameters:
    - id: Compilation
      type:
        id: Microsoft.CodeAnalysis.Compilation
        name: Compilation
        href: api/Microsoft.CodeAnalysis.Compilation
- id: Microsoft.CodeAnalysis.CompilationReference.get_Compilation
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: get_Compilation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.get_Compilation
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 14
- id: Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: WithAliases
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 48
  summary: >+
    Returns an instance of the reference with specified aliases.

  syntax:
    content:
      CSharp: public new CompilationReference WithAliases(IEnumerable<string> aliases)
    parameters:
    - id: aliases
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: System.Collections.Generic.IEnumerable{System.String}
        isExternal: true
      description: The new aliases for the reference.
    return:
      id: CompilationReference
- id: Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: WithAliases
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 58
  summary: >+
    Returns an instance of the reference with specified aliases.

  syntax:
    content:
      CSharp: public new CompilationReference WithAliases(ImmutableArray<string> aliases)
    parameters:
    - id: aliases
      type:
        id: System.Collections.Immutable.ImmutableArray{System.String}
        name: System.Collections.Immutable.ImmutableArray{System.String}
        isExternal: true
      description: The new aliases for the reference.
    return:
      id: CompilationReference
- id: Microsoft.CodeAnalysis.CompilationReference.WithEmbedInteropTypes(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: WithEmbedInteropTypes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.WithEmbedInteropTypes(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 68
  summary: >+
    Returns an instance of the reference with specified interop types embedding.

  syntax:
    content:
      CSharp: public new CompilationReference WithEmbedInteropTypes(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: The new value for [Microsoft.CodeAnalysis.MetadataReferenceProperties.EmbedInteropTypes](#/api/Microsoft.CodeAnalysis.MetadataReferenceProperties).
    return:
      id: CompilationReference
- id: Microsoft.CodeAnalysis.CompilationReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: WithProperties
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 78
  summary: >+
    Returns an instance of the reference with specified properties, or this instance if properties haven't changed.

  syntax:
    content:
      CSharp: public new CompilationReference WithProperties(MetadataReferenceProperties properties)
    parameters:
    - id: properties
      type:
        id: Microsoft.CodeAnalysis.MetadataReferenceProperties
        name: MetadataReferenceProperties
        href: api/Microsoft.CodeAnalysis.MetadataReferenceProperties
      description: The new properties for the reference.
    return:
      id: CompilationReference
- id: Microsoft.CodeAnalysis.CompilationReference.Display
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: Display
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.Display
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 105
  syntax:
    content:
      CSharp: public override string Display
    parameters:
    - id: Display
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.CompilationReference.get_Display
  yaml: api/Microsoft.CodeAnalysis.CompilationReference.yaml
  href: api/Microsoft.CodeAnalysis.CompilationReference
  name:
    CSharp: get_Display
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CompilationReference.get_Display
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/CompilationReference.cs
    startLine: 107
