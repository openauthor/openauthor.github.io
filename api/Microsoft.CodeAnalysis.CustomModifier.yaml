id: Microsoft.CodeAnalysis.CustomModifier
yaml: api/Microsoft.CodeAnalysis.CustomModifier.yaml
href: api/Microsoft.CodeAnalysis.CustomModifier
name:
  CSharp: CustomModifier
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.CustomModifier
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/CustomModifer.cs
  startLine: 7
syntax:
  content:
    CSharp: public abstract class CustomModifier
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.CustomModifier.IsOptional
  yaml: api/Microsoft.CodeAnalysis.CustomModifier.yaml
  href: api/Microsoft.CodeAnalysis.CustomModifier
  name:
    CSharp: IsOptional
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CustomModifier.IsOptional
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/CustomModifer.cs
    startLine: 13
  summary: >+
    If true, a language may use the modified storage location without

    being aware of the meaning of the modification, modopt vs. modreq.

  syntax:
    content:
      CSharp: public abstract bool IsOptional
    parameters:
    - id: IsOptional
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.CustomModifier.get_IsOptional
  yaml: api/Microsoft.CodeAnalysis.CustomModifier.yaml
  href: api/Microsoft.CodeAnalysis.CustomModifier
  name:
    CSharp: get_IsOptional
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CustomModifier.get_IsOptional
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/CustomModifer.cs
    startLine: 13
- id: Microsoft.CodeAnalysis.CustomModifier.Modifier
  yaml: api/Microsoft.CodeAnalysis.CustomModifier.yaml
  href: api/Microsoft.CodeAnalysis.CustomModifier
  name:
    CSharp: Modifier
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CustomModifier.Modifier
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/CustomModifer.cs
    startLine: 18
  summary: >+
    A type used as a tag that indicates which type of modification applies.

  syntax:
    content:
      CSharp: public abstract INamedTypeSymbol Modifier
    parameters:
    - id: Modifier
      type:
        id: Microsoft.CodeAnalysis.INamedTypeSymbol
        name: INamedTypeSymbol
        href: api/Microsoft.CodeAnalysis.INamedTypeSymbol
- id: Microsoft.CodeAnalysis.CustomModifier.get_Modifier
  yaml: api/Microsoft.CodeAnalysis.CustomModifier.yaml
  href: api/Microsoft.CodeAnalysis.CustomModifier
  name:
    CSharp: get_Modifier
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.CustomModifier.get_Modifier
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/CustomModifer.cs
    startLine: 18
