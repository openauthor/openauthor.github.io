id: Microsoft.CodeAnalysis.DiagnosticDescriptor
yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
name:
  CSharp: DiagnosticDescriptor
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
  startLine: 13
summary: >+
  Provides a description about a [Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic)

syntax:
  content:
    CSharp: public class DiagnosticDescriptor
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Id
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Id
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Id
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 18
  summary: >+
    An unique identifier for the diagnostic.

  syntax:
    content:
      CSharp: public string Id
    parameters:
    - id: Id
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Id
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_Id
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Id
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Title
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Title
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Title
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 23
  summary: >+
    A short localizable title describing the diagnostic.

  syntax:
    content:
      CSharp: public LocalizableString Title
    parameters:
    - id: Title
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Title
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_Title
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Title
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 23
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Description
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Description
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Description
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 28
  summary: >+
    An optional longer localizable description for the diagnostic.

  syntax:
    content:
      CSharp: public LocalizableString Description
    parameters:
    - id: Description
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Description
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_Description
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Description
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 28
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: HelpLinkUri
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 33
  summary: >+
    An optional hyperlink that provides more detailed information regarding the diagnostic.

  syntax:
    content:
      CSharp: public string HelpLinkUri
    parameters:
    - id: HelpLinkUri
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_HelpLinkUri
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_HelpLinkUri
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_HelpLinkUri
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 33
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.MessageFormat
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: MessageFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.MessageFormat
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 39
  summary: >+
    A localizable format message string, which can be passed as the first argument to [System.String.Format(System.String,System.Object[])](#) when creating the diagnostic message with this descriptor.

  syntax:
    content:
      CSharp: public LocalizableString MessageFormat
    parameters:
    - id: MessageFormat
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_MessageFormat
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_MessageFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_MessageFormat
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 39
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Category
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Category
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Category
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 44
  summary: >+
    The category of the diagnostic (like Design, Naming etc.)

  syntax:
    content:
      CSharp: public string Category
    parameters:
    - id: Category
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Category
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_Category
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_Category
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 44
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: DefaultSeverity
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 49
  summary: >+
    The default severity of the diagnostic.

  syntax:
    content:
      CSharp: public DiagnosticSeverity DefaultSeverity
    parameters:
    - id: DefaultSeverity
      type:
        id: Microsoft.CodeAnalysis.DiagnosticSeverity
        name: DiagnosticSeverity
        href: api/Microsoft.CodeAnalysis.DiagnosticSeverity
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_DefaultSeverity
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_DefaultSeverity
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_DefaultSeverity
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 49
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: IsEnabledByDefault
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 54
  summary: >+
    Returns true if the diagnostic is enabled by default.

  syntax:
    content:
      CSharp: public bool IsEnabledByDefault
    parameters:
    - id: IsEnabledByDefault
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_IsEnabledByDefault
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_IsEnabledByDefault
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_IsEnabledByDefault
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 54
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.CustomTags
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: CustomTags
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.CustomTags
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 59
  summary: >+
    Custom tags for the diagnostic.

  syntax:
    content:
      CSharp: public IEnumerable<string> CustomTags
    parameters:
    - id: CustomTags
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: System.Collections.Generic.IEnumerable{System.String}
        isExternal: true
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_CustomTags
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: get_CustomTags
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.get_CustomTags
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 59
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.String,System.String,System.String[])
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: DiagnosticDescriptor(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.String,System.String,System.String[])
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.String,System.String,System.String[])
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 76
  summary: >+
    Create a DiagnosticDescriptor, which provides description about a [Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic).

    NOTE: For localizable ,  and/or ,

    use constructor overload [Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])](#/api/Microsoft.CodeAnalysis.DiagnosticDescriptor).

  syntax:
    content:
      CSharp: 'public DiagnosticDescriptor(string id, string title, string messageFormat, string category, DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, string description = null, string helpLinkUri = null, params string[] customTags): this (id, title, messageFormat, category, defaultSeverity, isEnabledByDefault, description, helpLinkUri, customTags.AsImmutableOrEmpty())'
    parameters:
    - id: id
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: A unique identifier for the diagnostic. For example, code analysis diagnostic ID "CA1001".
    - id: title
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: 'A short title describing the diagnostic. For example, for CA1001: "Types that own disposable fields should be disposable".'
    - id: messageFormat
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: >-
        A format message string, which can be passed as the first argument to [System.String.Format(System.String,System.Object[])](#) when creating the diagnostic message with this descriptor.

            For example, for CA1001: "Implement IDisposable on '{0}' because it creates members of the following IDisposable types: '{1}'."
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: 'The category of the diagnostic (like Design, Naming etc.). For example, for CA1001: "Microsoft.Design".'
    - id: defaultSeverity
      type:
        id: Microsoft.CodeAnalysis.DiagnosticSeverity
        name: DiagnosticSeverity
        href: api/Microsoft.CodeAnalysis.DiagnosticSeverity
      description: Default severity of the diagnostic.
    - id: isEnabledByDefault
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: True if the diagnostic is enabled by default.
    - id: description
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: An optional longer description of the diagnostic.
    - id: helpLinkUri
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: An optional hyperlink that provides a more detailed description regarding the diagnostic.
    - id: customTags
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Optional custom tags for the diagnostic. See [Microsoft.CodeAnalysis.WellKnownDiagnosticTags](#/api/Microsoft.CodeAnalysis.WellKnownDiagnosticTags) for some well known tags.
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: DiagnosticDescriptor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.DiagnosticDescriptor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 113
  summary: >+
    Create a DiagnosticDescriptor, which provides description about a [Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic).

  syntax:
    content:
      CSharp: 'public DiagnosticDescriptor(string id, LocalizableString title, LocalizableString messageFormat, string category, DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, LocalizableString description = null, string helpLinkUri = null, params string[] customTags): this (id, title, messageFormat, category, defaultSeverity, isEnabledByDefault, description, helpLinkUri, customTags.AsImmutableOrEmpty())'
    parameters:
    - id: id
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: A unique identifier for the diagnostic. For example, code analysis diagnostic ID "CA1001".
    - id: title
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
      description: 'A short localizable title describing the diagnostic. For example, for CA1001: "Types that own disposable fields should be disposable".'
    - id: messageFormat
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
      description: >-
        A localizable format message string, which can be passed as the first argument to [System.String.Format(System.String,System.Object[])](#) when creating the diagnostic message with this descriptor.

            For example, for CA1001: "Implement IDisposable on '{0}' because it creates members of the following IDisposable types: '{1}'."
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: 'The category of the diagnostic (like Design, Naming etc.). For example, for CA1001: "Microsoft.Design".'
    - id: defaultSeverity
      type:
        id: Microsoft.CodeAnalysis.DiagnosticSeverity
        name: DiagnosticSeverity
        href: api/Microsoft.CodeAnalysis.DiagnosticSeverity
      description: Default severity of the diagnostic.
    - id: isEnabledByDefault
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: True if the diagnostic is enabled by default.
    - id: description
      type:
        id: Microsoft.CodeAnalysis.LocalizableString
        name: LocalizableString
        href: api/Microsoft.CodeAnalysis.LocalizableString
      description: An optional longer localizable description of the diagnostic.
    - id: helpLinkUri
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: An optional hyperlink that provides a more detailed description regarding the diagnostic.
    - id: customTags
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Optional custom tags for the diagnostic. See [Microsoft.CodeAnalysis.WellKnownDiagnosticTags](#/api/Microsoft.CodeAnalysis.WellKnownDiagnosticTags) for some well known tags.
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 169
  syntax:
    content:
      CSharp: public bool Equals(DiagnosticDescriptor other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.DiagnosticDescriptor
        name: DiagnosticDescriptor
        href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 183
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.DiagnosticDescriptor.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.DiagnosticDescriptor.yaml
  href: api/Microsoft.CodeAnalysis.DiagnosticDescriptor
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DiagnosticDescriptor.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/DiagnosticDescriptor.cs
    startLine: 188
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
