id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.yaml
href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
name:
  CSharp: DiagnosticAnalyzerAttribute
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerAttribute.cs
  startLine: 10
summary: >+
  Place this attribute onto a type to cause it to be considered a diagnostic analyzer.

syntax:
  content:
    CSharp: public sealed class DiagnosticAnalyzerAttribute
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.Attribute
  name: System.Attribute
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.Languages
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
  name:
    CSharp: Languages
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.Languages
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerAttribute.cs
    startLine: 16
  summary: >+
    The source languages to which this analyzer applies.  See [Microsoft.CodeAnalysis.LanguageNames](#/api/Microsoft.CodeAnalysis.LanguageNames).

  syntax:
    content:
      CSharp: public string[] Languages
    parameters:
    - id: Languages
      type:
        id: System.Array
        name: System.Array
        isExternal: true
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.get_Languages
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
  name:
    CSharp: get_Languages
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.get_Languages
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerAttribute.cs
    startLine: 16
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.#ctor(System.String,System.String[])
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute
  name:
    CSharp: DiagnosticAnalyzerAttribute(System.String,System.String[])
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.DiagnosticAnalyzerAttribute(System.String,System.String[])
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerAttribute.cs
    startLine: 23
  summary: >+
    Attribute constructor used to specify automatic application of a diagnostic analyzer.

  syntax:
    content:
      CSharp: public DiagnosticAnalyzerAttribute(string firstLanguage, params string[] additionalLanguages)
    parameters:
    - id: firstLanguage
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: One language to which the analyzer applies.
    - id: additionalLanguages
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Additional languages to which the analyzer applies. See [Microsoft.CodeAnalysis.LanguageNames](#/api/Microsoft.CodeAnalysis.LanguageNames).
