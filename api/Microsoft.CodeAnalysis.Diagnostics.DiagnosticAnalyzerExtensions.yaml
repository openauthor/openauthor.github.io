id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.yaml
href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
name:
  CSharp: DiagnosticAnalyzerExtensions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerExtensions.cs
  startLine: 7
syntax:
  content:
    CSharp: public static class DiagnosticAnalyzerExtensions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions
  name:
    CSharp: WithAnalyzers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalyzerExtensions.cs
    startLine: 16
  summary: >+
    Returns a new compilation with attached diagnostic analyzers.

  syntax:
    content:
      CSharp: public static CompilationWithAnalyzers WithAnalyzers(this Compilation compilation, ImmutableArray<DiagnosticAnalyzer> analyzers, AnalyzerOptions options = null, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: compilation
      type:
        id: Microsoft.CodeAnalysis.Compilation
        name: Compilation
        href: api/Microsoft.CodeAnalysis.Compilation
      description: Compilation to which analyzers are to be added.
    - id: analyzers
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer}
        isExternal: true
      description: The set of analyzers to include in future analyses.
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
        name: AnalyzerOptions
        href: api/Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
      description: Options that are passed to analyzers.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: A cancellation token that can be used to abort analysis.
    return:
      id: CompilationWithAnalyzers
