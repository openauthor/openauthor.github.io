id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
name:
  CSharp: SyntaxTreeAnalysisContext
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
  startLine: 566
summary: >+
  Context for a syntax tree action.

  A syntax tree action can use a [Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext](#/api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext) to report [Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic)s about a [Microsoft.CodeAnalysis.SyntaxTree](#/api/Microsoft.CodeAnalysis.SyntaxTree) for a code document.

syntax:
  content:
    CSharp: public struct SyntaxTreeAnalysisContext
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Tree
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: Tree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Tree
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 576
  summary: >+
    [Microsoft.CodeAnalysis.SyntaxTree](#/api/Microsoft.CodeAnalysis.SyntaxTree) that is the subject of the analysis.

  syntax:
    content:
      CSharp: public SyntaxTree Tree
    parameters:
    - id: Tree
      type:
        id: Microsoft.CodeAnalysis.SyntaxTree
        name: SyntaxTree
        href: api/Microsoft.CodeAnalysis.SyntaxTree
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_Tree
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: get_Tree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_Tree
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 576
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Options
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: Options
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Options
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 581
  summary: >+
    Options specified for the analysis.

  syntax:
    content:
      CSharp: public AnalyzerOptions Options
    parameters:
    - id: Options
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
        name: AnalyzerOptions
        href: api/Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_Options
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: get_Options
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_Options
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 581
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CancellationToken
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: CancellationToken
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CancellationToken
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 586
  summary: >+
    Token to check for requested cancellation of the analysis.

  syntax:
    content:
      CSharp: public CancellationToken CancellationToken
    parameters:
    - id: CancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_CancellationToken
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: get_CancellationToken
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.get_CancellationToken
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 586
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: SyntaxTreeAnalysisContext(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Threading.CancellationToken)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.SyntaxTreeAnalysisContext(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 588
  syntax:
    content:
      CSharp: public SyntaxTreeAnalysisContext(SyntaxTree tree, AnalyzerOptions options, Action<Diagnostic> reportDiagnostic, CancellationToken cancellationToken)
    parameters:
    - id: tree
      type:
        id: Microsoft.CodeAnalysis.SyntaxTree
        name: SyntaxTree
        href: api/Microsoft.CodeAnalysis.SyntaxTree
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
        name: AnalyzerOptions
        href: api/Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions
    - id: reportDiagnostic
      type:
        id: System.Action{Microsoft.CodeAnalysis.Diagnostic}
        name: System.Action{Microsoft.CodeAnalysis.Diagnostic}
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
- id: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)
  yaml: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.yaml
  href: api/Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext
  name:
    CSharp: ReportDiagnostic
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/DiagnosticAnalyzer/DiagnosticAnalysisContext.cs
    startLine: 600
  summary: >+
    Report a [Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic) about a [Microsoft.CodeAnalysis.SyntaxTree](#/api/Microsoft.CodeAnalysis.SyntaxTree).

  syntax:
    content:
      CSharp: public void ReportDiagnostic(Diagnostic diagnostic)
    parameters:
    - id: diagnostic
      type:
        id: Microsoft.CodeAnalysis.Diagnostic
        name: Diagnostic
        href: api/Microsoft.CodeAnalysis.Diagnostic
      description: '[Microsoft.CodeAnalysis.Diagnostic](#/api/Microsoft.CodeAnalysis.Diagnostic) to be reported.'
    return:
      id: Void
