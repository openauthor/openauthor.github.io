id: Microsoft.CodeAnalysis.DllImportData
yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
href: api/Microsoft.CodeAnalysis.DllImportData
name:
  CSharp: DllImportData
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.DllImportData
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
  startLine: 12
summary: >+
  Information that describes how a method from the underlying Platform is to be invoked.

syntax:
  content:
    CSharp: public sealed class DllImportData
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.DllImportData.ModuleName
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: ModuleName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.ModuleName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 28
  summary: >+
    Module name. Null if value specified in the attribute is not valid.

  syntax:
    content:
      CSharp: public string ModuleName
    parameters:
    - id: ModuleName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_ModuleName
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_ModuleName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_ModuleName
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 30
- id: Microsoft.CodeAnalysis.DllImportData.EntryPointName
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: EntryPointName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.EntryPointName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 36
  summary: >+
    Name of the native entry point or null if not specified (the effective name is the same as the name of the target method).

  syntax:
    content:
      CSharp: public string EntryPointName
    parameters:
    - id: EntryPointName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_EntryPointName
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_EntryPointName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_EntryPointName
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 38
- id: Microsoft.CodeAnalysis.DllImportData.ExactSpelling
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: ExactSpelling
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.ExactSpelling
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 50
  summary: >+
    Controls whether the [Microsoft.CodeAnalysis.DllImportData.CharacterSet](#/api/Microsoft.CodeAnalysis.DllImportData) field causes the common language runtime

    to search an unmanaged DLL for entry-point names other than the one specified.

  syntax:
    content:
      CSharp: public bool ExactSpelling
    parameters:
    - id: ExactSpelling
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_ExactSpelling
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_ExactSpelling
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_ExactSpelling
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 52
- id: Microsoft.CodeAnalysis.DllImportData.CharacterSet
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: CharacterSet
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.CharacterSet
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 61
  summary: >+
    Indicates how to marshal string parameters and controls name mangling.

  syntax:
    content:
      CSharp: public CharSet CharacterSet
    parameters:
    - id: CharacterSet
      type:
        id: System.Runtime.InteropServices.CharSet
        name: System.Runtime.InteropServices.CharSet
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_CharacterSet
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_CharacterSet
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_CharacterSet
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 63
- id: Microsoft.CodeAnalysis.DllImportData.SetLastError
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: SetLastError
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.SetLastError
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 87
  summary: >+
    Indicates whether the callee calls the SetLastError Win32 API function before returning from the attributed method.

  syntax:
    content:
      CSharp: public bool SetLastError
    parameters:
    - id: SetLastError
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_SetLastError
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_SetLastError
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_SetLastError
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 89
- id: Microsoft.CodeAnalysis.DllImportData.CallingConvention
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: CallingConvention
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.CallingConvention
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 98
  summary: >+
    Indicates the calling convention of an entry point.

  syntax:
    content:
      CSharp: public CallingConvention CallingConvention
    parameters:
    - id: CallingConvention
      type:
        id: System.Runtime.InteropServices.CallingConvention
        name: System.Runtime.InteropServices.CallingConvention
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_CallingConvention
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_CallingConvention
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_CallingConvention
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 100
- id: Microsoft.CodeAnalysis.DllImportData.BestFitMapping
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: BestFitMapping
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.BestFitMapping
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 127
  summary: >+
    Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.

    Null if not specified (the setting for the containing type or assembly should be used, [System.Runtime.InteropServices.BestFitMappingAttribute](#)).

  syntax:
    content:
      CSharp: public bool ? BestFitMapping
    parameters:
    - id: BestFitMapping
      type:
        id: System.Nullable{System.Boolean}
        name: System.Nullable{System.Boolean}
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_BestFitMapping
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_BestFitMapping
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_BestFitMapping
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 129
- id: Microsoft.CodeAnalysis.DllImportData.ThrowOnUnmappableCharacter
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: ThrowOnUnmappableCharacter
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.ThrowOnUnmappableCharacter
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 149
  summary: >+
    Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.

    Null if not specified.

  syntax:
    content:
      CSharp: public bool ? ThrowOnUnmappableCharacter
    parameters:
    - id: ThrowOnUnmappableCharacter
      type:
        id: System.Nullable{System.Boolean}
        name: System.Nullable{System.Boolean}
        isExternal: true
- id: Microsoft.CodeAnalysis.DllImportData.get_ThrowOnUnmappableCharacter
  yaml: api/Microsoft.CodeAnalysis.DllImportData.yaml
  href: api/Microsoft.CodeAnalysis.DllImportData
  name:
    CSharp: get_ThrowOnUnmappableCharacter
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.DllImportData.get_ThrowOnUnmappableCharacter
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/PlatformInvokeInformation.cs
    startLine: 151
