id: Microsoft.CodeAnalysis.Editing.SymbolEditor
yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
name:
  CSharp: SymbolEditor
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
  path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
  startLine: 16
summary: >+
  An editor for making changes to symbol source declarations.

syntax:
  content:
    CSharp: public sealed class SymbolEditor
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Solution)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: Create
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Solution)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 30
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Editing.SymbolEditor](#/api/Microsoft.CodeAnalysis.Editing.SymbolEditor) instance.

  syntax:
    content:
      CSharp: public static SymbolEditor Create(Solution solution)
    parameters:
    - id: solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: api/Microsoft.CodeAnalysis.Solution
    return:
      id: SymbolEditor
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Document)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: Create
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 43
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Editing.SymbolEditor](#/api/Microsoft.CodeAnalysis.Editing.SymbolEditor) instance.

  syntax:
    content:
      CSharp: public static SymbolEditor Create(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: api/Microsoft.CodeAnalysis.Document
    return:
      id: SymbolEditor
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.OriginalSolution
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: OriginalSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.OriginalSolution
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 56
  summary: >+
    The original solution.

  syntax:
    content:
      CSharp: public Solution OriginalSolution
    parameters:
    - id: OriginalSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: api/Microsoft.CodeAnalysis.Solution
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.get_OriginalSolution
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: get_OriginalSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.get_OriginalSolution
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 58
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.ChangedSolution
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: ChangedSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.ChangedSolution
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 64
  summary: >+
    The solution with the edits applied.

  syntax:
    content:
      CSharp: public Solution ChangedSolution
    parameters:
    - id: ChangedSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: api/Microsoft.CodeAnalysis.Solution
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.get_ChangedSolution
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: get_ChangedSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.get_ChangedSolution
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 66
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetChangedDocuments
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: GetChangedDocuments
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetChangedDocuments
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 72
  summary: >+
    The documents changed since the [Microsoft.CodeAnalysis.Editing.SymbolEditor](#/api/Microsoft.CodeAnalysis.Editing.SymbolEditor) was constructed.

  syntax:
    content:
      CSharp: public IEnumerable<Document> GetChangedDocuments()
    parameters: []
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentSymbolAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: GetCurrentSymbolAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentSymbolAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 101
  summary: >+
    Gets the current symbol for a source symbol.

  syntax:
    content:
      CSharp: public async Task<ISymbol> GetCurrentSymbolAsync(ISymbol symbol, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: GetCurrentDeclarationsAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 183
  summary: >+
    Gets the current declarations for the specified symbol.

  syntax:
    content:
      CSharp: public async Task<IReadOnlyList<SyntaxNode>> GetCurrentDeclarationsAsync(ISymbol symbol, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 234
  summary: >+
    Enables editting the definition of one of the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public async Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, AsyncDeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
        name: AsyncDeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 260
  summary: >+
    Enables editting the definition of one of the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, DeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
        name: DeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 323
  summary: >+
    Enables editting the definition of one of the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public async Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, Location location, AsyncDeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: location
      type:
        id: Microsoft.CodeAnalysis.Location
        name: Location
        href: Microsoft.CodeAnalysis.Location
      description: A location within one of the symbol's declarations.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
        name: AsyncDeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 355
  summary: >+
    Enables editting the definition of one of the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, Location location, DeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: location
      type:
        id: Microsoft.CodeAnalysis.Location
        name: Location
        href: Microsoft.CodeAnalysis.Location
      description: A location within one of the symbol's declarations.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
        name: DeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 405
  summary: >+
    Enables editting the symbol's declaration where the member is also declared.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public async Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, ISymbol member, AsyncDeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: member
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: A symbol whose declaration is contained within one of the primary symbol's declarations.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
        name: AsyncDeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditOneDeclarationAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 438
  summary: >+
    Enables editting the symbol's declaration where the member is also declared.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public Task<ISymbol> EditOneDeclarationAsync(ISymbol symbol, ISymbol member, DeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to edit.
    - id: member
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: A symbol whose declaration is contained within one of the primary symbol's declarations.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
        name: DeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditAllDeclarationsAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 463
  summary: >+
    Enables editting all the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public async Task<ISymbol> EditAllDeclarationsAsync(ISymbol symbol, AsyncDeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to be editted.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
        name: AsyncDeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
- id: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.yaml
  href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor
  name:
    CSharp: EditAllDeclarationsAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Editing/SymbolEditor.cs
    startLine: 521
  summary: >+
    Enables editting all the symbol's declarations.

    Partial types and methods may have more than one declaration.

  syntax:
    content:
      CSharp: public Task<ISymbol> EditAllDeclarationsAsync(ISymbol symbol, DeclarationEditAction editAction, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: Microsoft.CodeAnalysis.ISymbol
      description: The symbol to be editted.
    - id: editAction
      type:
        id: Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
        name: DeclarationEditAction
        href: api/Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction
      description: The action that makes edits to the declaration.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
      description: An optional [System.Threading.CancellationToken](#).
    return:
      id: Task
      description: The new symbol including the changes.
