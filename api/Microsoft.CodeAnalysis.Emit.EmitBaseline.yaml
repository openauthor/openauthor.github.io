id: Microsoft.CodeAnalysis.Emit.EmitBaseline
yaml: api/Microsoft.CodeAnalysis.Emit.EmitBaseline.yaml
href: api/Microsoft.CodeAnalysis.Emit.EmitBaseline
name:
  CSharp: EmitBaseline
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Emit.EmitBaseline
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
  startLine: 54
summary: >+
  Represents a module from a previous compilation. Used in Edit and Continue

  to emit the differences in a subsequent compilation.

syntax:
  content:
    CSharp: public sealed class EmitBaseline
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitBaseline.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitBaseline
  name:
    CSharp: CreateInitialBaseline
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
    startLine: 83
  summary: >+
    Creates an [Microsoft.CodeAnalysis.Emit.EmitBaseline](#/api/Microsoft.CodeAnalysis.Emit.EmitBaseline) from the metadata of the module before editing

    and from a function that maps from a method to an array of local names.

  syntax:
    content:
      CSharp: public static EmitBaseline CreateInitialBaseline(ModuleMetadata module, Func<MethodDefinitionHandle, EditAndContinueMethodDebugInformation> debugInformationProvider)
    parameters:
    - id: module
      type:
        id: Microsoft.CodeAnalysis.ModuleMetadata
        name: ModuleMetadata
        href: api/Microsoft.CodeAnalysis.ModuleMetadata
      description: The metadata of the module before editing.
    - id: debugInformationProvider
      type:
        id: System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation}
        name: System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation}
        isExternal: true
      description: A function that for a method handle returns Edit and Continue debug information emitted by the compiler into the PDB.
    return:
      id: EmitBaseline
      description: An [Microsoft.CodeAnalysis.Emit.EmitBaseline](#/api/Microsoft.CodeAnalysis.Emit.EmitBaseline) for the module.
- id: Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitBaseline.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitBaseline
  name:
    CSharp: OriginalMetadata
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Emit/EditAndContinue/EmitBaseline.cs
    startLine: 135
  summary: >+
    The original metadata of the module.

