id: Microsoft.CodeAnalysis.Emit.EmitOptions
yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
name:
  CSharp: EmitOptions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
  startLine: 10
summary: >+
  Represents compilation emit options.

syntax:
  content:
    CSharp: public sealed class EmitOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: EmitMetadataOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 17
  summary: >+
    True to emit an assembly excluding executable code such as method bodies.

  syntax:
    content:
      CSharp: public bool EmitMetadataOnly
    parameters:
    - id: EmitMetadataOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_EmitMetadataOnly
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_EmitMetadataOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_EmitMetadataOnly
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 17
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: TolerateErrors
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 22
  summary: >+
    Tolerate errors, producing a PE stream and a success result even in the presence of (some) errors.

  syntax:
    content:
      CSharp: public bool TolerateErrors
    parameters:
    - id: TolerateErrors
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_TolerateErrors
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_TolerateErrors
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_TolerateErrors
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 22
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: IncludePrivateMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 31
  summary: >+
    Unless set (private) members that don't affect the language semantics of the resulting assembly will be excluded

    when emitting with [Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly](#/api/Microsoft.CodeAnalysis.Emit.EmitOptions) on.

  syntax:
    content:
      CSharp: public bool IncludePrivateMembers
    parameters:
    - id: IncludePrivateMembers
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_IncludePrivateMembers
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_IncludePrivateMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_IncludePrivateMembers
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 31
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: SubsystemVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 36
  summary: >+
    Subsystem version

  syntax:
    content:
      CSharp: public SubsystemVersion SubsystemVersion
    parameters:
    - id: SubsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: api/Microsoft.CodeAnalysis.SubsystemVersion
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_SubsystemVersion
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_SubsystemVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_SubsystemVersion
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: FileAlignment
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 45
  summary: >+
    Specifies the size of sections in the output file.

  syntax:
    content:
      CSharp: public int FileAlignment
    parameters:
    - id: FileAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_FileAlignment
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_FileAlignment
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_FileAlignment
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 45
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: HighEntropyVirtualAddressSpace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 50
  summary: >+
    True to enable high entropy virtual address space for the output binary.

  syntax:
    content:
      CSharp: public bool HighEntropyVirtualAddressSpace
    parameters:
    - id: HighEntropyVirtualAddressSpace
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_HighEntropyVirtualAddressSpace
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_HighEntropyVirtualAddressSpace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_HighEntropyVirtualAddressSpace
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 50
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: BaseAddress
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 55
  summary: >+
    Specifies the preferred base address at which to load the output DLL.

  syntax:
    content:
      CSharp: public ulong BaseAddress
    parameters:
    - id: BaseAddress
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_BaseAddress
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_BaseAddress
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_BaseAddress
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 55
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: DebugInformationFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 60
  summary: >+
    Debug information format.

  syntax:
    content:
      CSharp: public DebugInformationFormat DebugInformationFormat
    parameters:
    - id: DebugInformationFormat
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: api/Microsoft.CodeAnalysis.Emit.DebugInformationFormat
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_DebugInformationFormat
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_DebugInformationFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_DebugInformationFormat
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 60
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: OutputNameOverride
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 73
  summary: >+
    Assembly name override - file name and extension. If not specified the the compilation name is used.

  syntax:
    content:
      CSharp: public string OutputNameOverride
    parameters:
    - id: OutputNameOverride
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_OutputNameOverride
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_OutputNameOverride
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_OutputNameOverride
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 73
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: PdbFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 81
  summary: >+
    The name of the PDB file to be embedded in the PE image, or null to use the default.

  syntax:
    content:
      CSharp: public string PdbFilePath
    parameters:
    - id: PdbFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_PdbFilePath
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_PdbFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_PdbFilePath
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 81
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: RuntimeMetadataVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 86
  summary: >+
    Runtime metadata version.

  syntax:
    content:
      CSharp: public string RuntimeMetadataVersion
    parameters:
    - id: RuntimeMetadataVersion
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.get_RuntimeMetadataVersion
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: get_RuntimeMetadataVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.get_RuntimeMetadataVersion
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 86
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: EmitOptions(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.EmitOptions(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 88
  syntax:
    content:
      CSharp: public EmitOptions(bool metadataOnly = false, DebugInformationFormat debugInformationFormat = 0, string pdbFilePath = null, string outputNameOverride = null, int fileAlignment = 0, ulong baseAddress = 0, bool highEntropyVirtualAddressSpace = false, SubsystemVersion subsystemVersion = default (SubsystemVersion), string runtimeMetadataVersion = null, bool tolerateErrors = false, bool includePrivateMembers = false)
    parameters:
    - id: metadataOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: debugInformationFormat
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: api/Microsoft.CodeAnalysis.Emit.DebugInformationFormat
    - id: pdbFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: outputNameOverride
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: fileAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: baseAddress
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
    - id: highEntropyVirtualAddressSpace
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: subsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: api/Microsoft.CodeAnalysis.SubsystemVersion
    - id: runtimeMetadataVersion
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: tolerateErrors
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: includePrivateMembers
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 129
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 134
  syntax:
    content:
      CSharp: public bool Equals(EmitOptions other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Emit.EmitOptions
        name: EmitOptions
        href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 155
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Equality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Equality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 170
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 175
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithEmitMetadataOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 223
  syntax:
    content:
      CSharp: public EmitOptions WithEmitMetadataOnly(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(System.String)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithPdbFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 233
  syntax:
    content:
      CSharp: public EmitOptions WithPdbFilePath(string path)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(System.String)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithOutputNameOverride
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 243
  syntax:
    content:
      CSharp: public EmitOptions WithOutputNameOverride(string outputName)
    parameters:
    - id: outputName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithDebugInformationFormat
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 253
  syntax:
    content:
      CSharp: public EmitOptions WithDebugInformationFormat(DebugInformationFormat format)
    parameters:
    - id: format
      type:
        id: Microsoft.CodeAnalysis.Emit.DebugInformationFormat
        name: DebugInformationFormat
        href: api/Microsoft.CodeAnalysis.Emit.DebugInformationFormat
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithFileAlignment
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 267
  summary: >+
    Sets the byte alignment for portable executable file sections.

  syntax:
    content:
      CSharp: public EmitOptions WithFileAlignment(int value)
    parameters:
    - id: value
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: 'Can be one of the following values: 0, 512, 1024, 2048, 4096, 8192'
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(System.UInt64)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithBaseAddress
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(System.UInt64)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 277
  syntax:
    content:
      CSharp: public EmitOptions WithBaseAddress(ulong value)
    parameters:
    - id: value
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithHighEntropyVirtualAddressSpace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 287
  syntax:
    content:
      CSharp: public EmitOptions WithHighEntropyVirtualAddressSpace(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithSubsystemVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 297
  syntax:
    content:
      CSharp: public EmitOptions WithSubsystemVersion(SubsystemVersion subsystemVersion)
    parameters:
    - id: subsystemVersion
      type:
        id: Microsoft.CodeAnalysis.SubsystemVersion
        name: SubsystemVersion
        href: api/Microsoft.CodeAnalysis.SubsystemVersion
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(System.String)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithRuntimeMetadataVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 307
  syntax:
    content:
      CSharp: public EmitOptions WithRuntimeMetadataVersion(string version)
    parameters:
    - id: version
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithTolerateErrors
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 317
  syntax:
    content:
      CSharp: public EmitOptions WithTolerateErrors(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
- id: Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.Emit.EmitOptions.yaml
  href: api/Microsoft.CodeAnalysis.Emit.EmitOptions
  name:
    CSharp: WithIncludePrivateMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Emit/EmitOptions.cs
    startLine: 327
  syntax:
    content:
      CSharp: public EmitOptions WithIncludePrivateMembers(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: EmitOptions
