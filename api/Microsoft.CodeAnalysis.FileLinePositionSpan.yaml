id: Microsoft.CodeAnalysis.FileLinePositionSpan
yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
name:
  CSharp: FileLinePositionSpan
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
  startLine: 12
summary: >+
  Represents a span of text in a source code file in terms of file name, line number, and offset within line.

  However, the file is actually whatever was passed in when asked to parse; there may not really be a file.

syntax:
  content:
    CSharp: public struct FileLinePositionSpan
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.Path
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: Path
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.Path
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 24
  summary: >+
    Path, or null if the span represents an invalid value.

  syntax:
    content:
      CSharp: public string Path
    parameters:
    - id: Path
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_Path
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_Path
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_Path
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 24
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.HasMappedPath
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: HasMappedPath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.HasMappedPath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 32
  summary: >+
    True if the [Microsoft.CodeAnalysis.FileLinePositionSpan.Path](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan) is a mapped path.

  syntax:
    content:
      CSharp: public bool HasMappedPath
    parameters:
    - id: HasMappedPath
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_HasMappedPath
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_HasMappedPath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_HasMappedPath
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 32
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.StartLinePosition
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: StartLinePosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.StartLinePosition
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 38
  summary: >+
    Gets the [Microsoft.CodeAnalysis.Text.LinePosition](#/api/Microsoft.CodeAnalysis.Text.LinePosition) of the start of the span.

  syntax:
    content:
      CSharp: public LinePosition StartLinePosition
    parameters:
    - id: StartLinePosition
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_StartLinePosition
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_StartLinePosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_StartLinePosition
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 38
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.EndLinePosition
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: EndLinePosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.EndLinePosition
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 44
  summary: >+
    Gets the [Microsoft.CodeAnalysis.Text.LinePosition](#/api/Microsoft.CodeAnalysis.Text.LinePosition) of the end of the span.

  syntax:
    content:
      CSharp: public LinePosition EndLinePosition
    parameters:
    - id: EndLinePosition
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_EndLinePosition
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_EndLinePosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_EndLinePosition
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 44
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.Span
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.Span
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 49
  summary: >+
    Gets the span.

  syntax:
    content:
      CSharp: public LinePositionSpan Span
    parameters:
    - id: Span
      type:
        id: Microsoft.CodeAnalysis.Text.LinePositionSpan
        name: LinePositionSpan
        href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_Span
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_Span
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: FileLinePositionSpan(System.String,Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(System.String,Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 64
  summary: >+
    Initializes the [Microsoft.CodeAnalysis.FileLinePositionSpan](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan) instance.

  syntax:
    content:
      CSharp: 'public FileLinePositionSpan(string path, LinePosition start, LinePosition end): this (path, new LinePositionSpan(start, end))'
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The file identifier - typically a relative or absolute path.
    - id: start
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
      description: The start line position.
    - id: end
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
      description: The end line position.
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: FileLinePositionSpan(System.String,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.FileLinePositionSpan(System.String,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 75
  summary: >+
    Initializes the [Microsoft.CodeAnalysis.FileLinePositionSpan](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan) instance.

  syntax:
    content:
      CSharp: public FileLinePositionSpan(string path, LinePositionSpan span)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The file identifier - typically a relative or absolute path.
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.LinePositionSpan
        name: LinePositionSpan
        href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
      description: The span.
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: IsValid
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 97
  summary: >+
    Returns true if the span represents a valid location.

  syntax:
    content:
      CSharp: public bool IsValid
    parameters:
    - id: IsValid
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.get_IsValid
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: get_IsValid
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.get_IsValid
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 99
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(Microsoft.CodeAnalysis.FileLinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(Microsoft.CodeAnalysis.FileLinePositionSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 112
  summary: >+
    Determines if two FileLinePositionSpan objects are equal.

  syntax:
    content:
      CSharp: public bool Equals(FileLinePositionSpan other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.FileLinePositionSpan
        name: FileLinePositionSpan
        href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 122
  summary: >+
    Determines if two FileLinePositionSpan objects are equal.

  syntax:
    content:
      CSharp: public override bool Equals(object other)
    parameters:
    - id: other
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 134
  summary: >+
    Serves as a hash function for FileLinePositionSpan.

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      description: The hash code.
- id: Microsoft.CodeAnalysis.FileLinePositionSpan.ToString
  yaml: api/Microsoft.CodeAnalysis.FileLinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.FileLinePositionSpan
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FileLinePositionSpan.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/FileLinePositionSpan.cs
    startLine: 144
  summary: >+
    Returns a [System.String](#) that represents FileLinePositionSpan.

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      description: The string representation of FileLinePositionSpan.
