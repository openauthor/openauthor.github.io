id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
name:
  CSharp: ReferenceLocation
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
  path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
  startLine: 12
summary: >+
  Information about a reference to a symbol.

syntax:
  content:
    CSharp: public struct ReferenceLocation
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: Document
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 18
  summary: >+
    The document that the reference was found in.

  syntax:
    content:
      CSharp: public Document Document
    parameters:
    - id: Document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: api/Microsoft.CodeAnalysis.Document
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Document
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_Document
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Document
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: Alias
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 23
  summary: >+
    If the symbol was bound through an alias, then this is the alias that was used.

  syntax:
    content:
      CSharp: public IAliasSymbol Alias
    parameters:
    - id: Alias
      type:
        id: Microsoft.CodeAnalysis.IAliasSymbol
        name: IAliasSymbol
        href: Microsoft.CodeAnalysis.IAliasSymbol
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Alias
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_Alias
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Alias
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 23
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: Location
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 28
  summary: >+
    The actual source location for a given symbol.

  syntax:
    content:
      CSharp: public Location Location
    parameters:
    - id: Location
      type:
        id: Microsoft.CodeAnalysis.Location
        name: Location
        href: Microsoft.CodeAnalysis.Location
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Location
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_Location
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_Location
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 28
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: IsImplicit
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 36
  summary: >+
    Indicates if this is an implicit reference to the definition.  i.e. the definition wasn't

    explicitly stated in the source code at this position, but it was still referenced. For

    example, this can happen with special methods like GetEnumerator that are used

    implicitly by a 'for each' statement.

  syntax:
    content:
      CSharp: public bool IsImplicit
    parameters:
    - id: IsImplicit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_IsImplicit
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_IsImplicit
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_IsImplicit
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: CandidateReason
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 38
  syntax:
    content:
      CSharp: public CandidateReason CandidateReason
    parameters:
    - id: CandidateReason
      type:
        id: Microsoft.CodeAnalysis.CandidateReason
        name: CandidateReason
        href: Microsoft.CodeAnalysis.CandidateReason
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_CandidateReason
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_CandidateReason
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_CandidateReason
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 38
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: IsCandidateLocation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 56
  summary: >+
    Indicates if this was not an exact reference to a location, but was instead a possible

    location that was found through error tolerance.  For example, a call to a method like

    "Foo()" could show up as an error tolerance location to a method "Foo(int i)" if no

    actual "Foo()" method existed.

  syntax:
    content:
      CSharp: public bool IsCandidateLocation
    parameters:
    - id: IsCandidateLocation
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_IsCandidateLocation
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: get_IsCandidateLocation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.get_IsCandidateLocation
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 58
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 64
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 69
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 74
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 80
  syntax:
    content:
      CSharp: public bool Equals(ReferenceLocation other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 90
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  yaml: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yaml
  href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  name:
    CSharp: CompareTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 99
  syntax:
    content:
      CSharp: public int CompareTo(ReferenceLocation other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: api/Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
    return:
      id: Int32
