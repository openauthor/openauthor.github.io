id: Microsoft.CodeAnalysis.Host.HostLanguageServices
yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
name:
  CSharp: HostLanguageServices
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
  path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
  startLine: 9
summary: >+
  Per language services provided by the host environment.

syntax:
  content:
    CSharp: public abstract class HostLanguageServices
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.WorkspaceServices
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: WorkspaceServices
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.WorkspaceServices
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 14
  summary: >+
    The [Microsoft.CodeAnalysis.Host.HostWorkspaceServices](#/api/Microsoft.CodeAnalysis.Host.HostWorkspaceServices) that originated this language service.

  syntax:
    content:
      CSharp: public abstract HostWorkspaceServices WorkspaceServices
    parameters:
    - id: WorkspaceServices
      type:
        id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices
        name: HostWorkspaceServices
        href: api/Microsoft.CodeAnalysis.Host.HostWorkspaceServices
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_WorkspaceServices
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: get_WorkspaceServices
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_WorkspaceServices
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 14
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.Language
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.Language
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 19
  summary: >+
    The name of the language

  syntax:
    content:
      CSharp: public abstract string Language
    parameters:
    - id: Language
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_Language
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: get_Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_Language
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 19
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.GetService``1
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: GetService
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.GetService``1
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 25
  summary: >+
    Gets a language specific service provided by the host identified by the service type.

    If the host does not provide the service, this method returns null.

  syntax:
    content:
      CSharp: 'public abstract TLanguageService GetService<TLanguageService>()where TLanguageService : ILanguageService;'
    parameters: []
    return:
      id: TLanguageService
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.GetRequiredService``1
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: GetRequiredService
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.GetRequiredService``1
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 31
  summary: >+
    Gets a language specific service provided by the host identified by the service type.

    If the host does not provide the service, this method returns throws [System.InvalidOperationException](#).

  syntax:
    content:
      CSharp: 'public TLanguageService GetRequiredService<TLanguageService>()where TLanguageService : ILanguageService'
    parameters: []
    return:
      id: TLanguageService
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.CompilationFactory
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: CompilationFactory
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.CompilationFactory
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 47
  summary: >+
    A factory for creating compilations instances.

  syntax:
    content:
      CSharp: public virtual ICompilationFactoryService CompilationFactory
    parameters:
    - id: CompilationFactory
      type:
        id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService
        name: ICompilationFactoryService
        href: api/Microsoft.CodeAnalysis.Host.ICompilationFactoryService
- id: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_CompilationFactory
  yaml: api/Microsoft.CodeAnalysis.Host.HostLanguageServices.yaml
  href: api/Microsoft.CodeAnalysis.Host.HostLanguageServices
  name:
    CSharp: get_CompilationFactory
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Host.HostLanguageServices.get_CompilationFactory
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: 8c49d3e937ebadb974cebab7db31e1800918265d
    path: src/Workspaces/Core/Portable/Workspace/Host/HostLanguageServices.cs
    startLine: 49
