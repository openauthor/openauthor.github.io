id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices
yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
name:
  CSharp: HostWorkspaceServices
qualifiedName:
  CSharp: HostWorkspaceServices
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
  startLine: 12
summary: >+
  Per workspace services provided by the host environment.

syntax:
  content:
    CSharp: public abstract class HostWorkspaceServices
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.HostServices
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: HostServices
  qualifiedName:
    CSharp: HostServices
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 18
  summary: >+
    The host services this workspace services originated from.

  syntax:
    content:
      CSharp: public abstract HostServices HostServices
    parameters:
    - id: HostServices
      type:
        id: Microsoft.CodeAnalysis.Host.HostServices
        name: HostServices
        href: api\Microsoft.CodeAnalysis.Host.HostServices
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.get_HostServices
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: get_HostServices
  qualifiedName:
    CSharp: get_HostServices
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.Workspace
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: Workspace
  qualifiedName:
    CSharp: Workspace
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 23
  summary: >+
    The workspace corresponding to this workspace services instantiation

  syntax:
    content:
      CSharp: public abstract Workspace Workspace
    parameters:
    - id: Workspace
      type:
        id: Microsoft.CodeAnalysis.Workspace
        name: Workspace
        href: api\Microsoft.CodeAnalysis.Workspace
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.get_Workspace
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: get_Workspace
  qualifiedName:
    CSharp: get_Workspace
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 23
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetService``1
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: GetService
  qualifiedName:
    CSharp: GetService
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 29
  summary: >+
    Gets a workspace specific service provided by the host identified by the service type.

    If the host does not provide the service, this method returns null.

  syntax:
    content:
      CSharp: 'public abstract TWorkspaceService GetService<TWorkspaceService>()where TWorkspaceService : IWorkspaceService;'
    parameters: []
    return:
      id: TWorkspaceService
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetRequiredService``1
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: GetRequiredService
  qualifiedName:
    CSharp: GetRequiredService
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 35
  summary: >+
    Gets a workspace specific service provided by the host identified by the service type.

    If the host does not provide the service, this method returns [System.InvalidOperationException](#).

  syntax:
    content:
      CSharp: 'public TWorkspaceService GetRequiredService<TWorkspaceService>()where TWorkspaceService : IWorkspaceService'
    parameters: []
    return:
      id: TWorkspaceService
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.PersistentStorage
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: PersistentStorage
  qualifiedName:
    CSharp: PersistentStorage
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 49
  summary: >+
    A service for storing information across that can be retrieved in a separate process.

  syntax:
    content:
      CSharp: public virtual IPersistentStorageService PersistentStorage
    parameters:
    - id: PersistentStorage
      type:
        id: Microsoft.CodeAnalysis.Host.IPersistentStorageService
        name: IPersistentStorageService
        href: api\Microsoft.CodeAnalysis.Host.IPersistentStorageService
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.get_PersistentStorage
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: get_PersistentStorage
  qualifiedName:
    CSharp: get_PersistentStorage
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.TemporaryStorage
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: TemporaryStorage
  qualifiedName:
    CSharp: TemporaryStorage
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 57
  summary: >+
    A service for storing information in a temporary location that only lasts for the duration of the process.

  syntax:
    content:
      CSharp: public virtual ITemporaryStorageService TemporaryStorage
    parameters:
    - id: TemporaryStorage
      type:
        id: Microsoft.CodeAnalysis.Host.ITemporaryStorageService
        name: ITemporaryStorageService
        href: api\Microsoft.CodeAnalysis.Host.ITemporaryStorageService
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.get_TemporaryStorage
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: get_TemporaryStorage
  qualifiedName:
    CSharp: get_TemporaryStorage
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 59
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.SupportedLanguages
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: SupportedLanguages
  qualifiedName:
    CSharp: SupportedLanguages
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 73
  summary: >+
    A list of language names for supported language services.

  syntax:
    content:
      CSharp: public virtual IEnumerable<string> SupportedLanguages
    parameters:
    - id: SupportedLanguages
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: System.Collections.Generic.IEnumerable{System.String}
        isExternal: true
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.get_SupportedLanguages
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: get_SupportedLanguages
  qualifiedName:
    CSharp: get_SupportedLanguages
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 75
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.IsSupported(System.String)
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: IsSupported
  qualifiedName:
    CSharp: IsSupported
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 81
  summary: >+
    Returns true if the language is supported.

  syntax:
    content:
      CSharp: public virtual bool IsSupported(string languageName)
    parameters:
    - id: languageName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetLanguageServices(System.String)
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: GetLanguageServices
  qualifiedName:
    CSharp: GetLanguageServices
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 89
  summary: >+
    Gets the [Microsoft.CodeAnalysis.Host.HostLanguageServices](#/api\Microsoft.CodeAnalysis.Host.HostLanguageServices) for the language name.

  syntax:
    content:
      CSharp: public virtual HostLanguageServices GetLanguageServices(string languageName)
    parameters:
    - id: languageName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: HostLanguageServices
- id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.FindLanguageServices``1(Microsoft.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter)
  yaml: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yaml
  href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices
  name:
    CSharp: FindLanguageServices
  qualifiedName:
    CSharp: FindLanguageServices
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\HostWorkspaceServices.cs
    startLine: 99
  summary: >+
    Finds all language services of the corresponding type across all supported languages that match the filter criteria.

  syntax:
    content:
      CSharp: public abstract IEnumerable<TLanguageService> FindLanguageServices<TLanguageService>(MetadataFilter filter);
    parameters:
    - id: filter
      type:
        id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter
        name: MetadataFilter
        href: api\Microsoft.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter
    return:
      id: IEnumerable
