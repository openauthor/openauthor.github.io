id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService
yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
name:
  CSharp: ICompilationFactoryService
qualifiedName:
  CSharp: ICompilationFactoryService
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
  startLine: 6
syntax:
  content:
    CSharp: public interface ICompilationFactoryService
items:
- id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService.CreateCompilation(System.String,Microsoft.CodeAnalysis.CompilationOptions)
  yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
  href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
  name:
    CSharp: CreateCompilation
  qualifiedName:
    CSharp: CreateCompilation
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
    startLine: 8
  syntax:
    content:
      CSharp: Compilation CreateCompilation(string assemblyName, CompilationOptions options);
    parameters:
    - id: assemblyName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: options
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
    return:
      id: Compilation
- id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService.CreateSubmissionCompilation(System.String,Microsoft.CodeAnalysis.CompilationOptions,System.Type)
  yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
  href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
  name:
    CSharp: CreateSubmissionCompilation
  qualifiedName:
    CSharp: CreateSubmissionCompilation
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
    startLine: 9
  syntax:
    content:
      CSharp: Compilation CreateSubmissionCompilation(string assemblyName, CompilationOptions options, Type hostObjectType);
    parameters:
    - id: assemblyName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: options
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
    - id: hostObjectType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    return:
      id: Compilation
- id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService.GetCompilationFromCompilationReference(Microsoft.CodeAnalysis.MetadataReference)
  yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
  href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
  name:
    CSharp: GetCompilationFromCompilationReference
  qualifiedName:
    CSharp: GetCompilationFromCompilationReference
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
    startLine: 10
  syntax:
    content:
      CSharp: Compilation GetCompilationFromCompilationReference(MetadataReference reference);
    parameters:
    - id: reference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
    return:
      id: Compilation
- id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService.IsCompilationReference(Microsoft.CodeAnalysis.MetadataReference)
  yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
  href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
  name:
    CSharp: IsCompilationReference
  qualifiedName:
    CSharp: IsCompilationReference
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
    startLine: 11
  syntax:
    content:
      CSharp: bool IsCompilationReference(MetadataReference reference);
    parameters:
    - id: reference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Host.ICompilationFactoryService.GetDefaultCompilationOptions
  yaml: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService.yaml
  href: api\Microsoft.CodeAnalysis.Host.ICompilationFactoryService
  name:
    CSharp: GetDefaultCompilationOptions
  qualifiedName:
    CSharp: GetDefaultCompilationOptions
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\CompilationFactory\ICompilationFactoryService.cs
    startLine: 12
  syntax:
    content:
      CSharp: CompilationOptions GetDefaultCompilationOptions();
    parameters: []
    return:
      id: CompilationOptions
