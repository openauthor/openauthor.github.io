id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
yaml: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yaml
href: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
name:
  CSharp: ITemporaryTextStorage
qualifiedName:
  CSharp: ITemporaryTextStorage
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\Workspace\Host\TemporaryStorage\ITemporaryStorage.cs
  startLine: 13
summary: >+
  TemporaryStorage can be used to read and write text to a temporary storage location.

syntax:
  content:
    CSharp: public interface ITemporaryTextStorage
items:
- id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  name:
    CSharp: ReadText
  qualifiedName:
    CSharp: ReadText
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\TemporaryStorage\ITemporaryStorage.cs
    startLine: 15
  syntax:
    content:
      CSharp: SourceText ReadText(CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  name:
    CSharp: ReadTextAsync
  qualifiedName:
    CSharp: ReadTextAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\TemporaryStorage\ITemporaryStorage.cs
    startLine: 16
  syntax:
    content:
      CSharp: Task<SourceText> ReadTextAsync(CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  name:
    CSharp: WriteText
  qualifiedName:
    CSharp: WriteText
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\TemporaryStorage\ITemporaryStorage.cs
    startLine: 17
  syntax:
    content:
      CSharp: void WriteText(SourceText text, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.yaml
  href: api\Microsoft.CodeAnalysis.Host.ITemporaryTextStorage
  name:
    CSharp: WriteTextAsync
  qualifiedName:
    CSharp: WriteTextAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Host\TemporaryStorage\ITemporaryStorage.cs
    startLine: 18
  syntax:
    content:
      CSharp: Task WriteTextAsync(SourceText text, CancellationToken cancellationToken = default (CancellationToken));
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
