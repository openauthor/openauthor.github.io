id: Microsoft.CodeAnalysis.IErrorTypeSymbol
yaml: api/Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
href: api/Microsoft.CodeAnalysis.IErrorTypeSymbol
name:
  CSharp: IErrorTypeSymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.IErrorTypeSymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/IErrorTypeSymbol.cs
  startLine: 13
summary: >+
  An IErrorTypeSymbol is used when the compiler cannot determine a symbol object to return because

  of an error. For example, if a field is declared "Foo x;", and the type "Foo" cannot be

  found, an IErrorTypeSymbol is returned when asking the field "x" what it's type is.

syntax:
  content:
    CSharp: public interface IErrorTypeSymbol
items:
- id: Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateSymbols
  yaml: api/Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IErrorTypeSymbol
  name:
    CSharp: CandidateSymbols
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateSymbols
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IErrorTypeSymbol.cs
    startLine: 26
  summary: >+
    When constructing this type, there may have been symbols that seemed to

    be what the user intended, but were unsuitable. For example, a type might have been

    inaccessible, or ambiguous. This property returns the possible symbols that the user

    might have intended. It will return no symbols if no possible symbols were found.

    See the CandidateReason property to understand why the symbols were unsuitable.

  syntax:
    content:
      CSharp: ImmutableArray<ISymbol> CandidateSymbols
    parameters:
    - id: CandidateSymbols
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ISymbol}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ISymbol}
        isExternal: true
- id: Microsoft.CodeAnalysis.IErrorTypeSymbol.get_CandidateSymbols
  yaml: api/Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IErrorTypeSymbol
  name:
    CSharp: get_CandidateSymbols
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IErrorTypeSymbol.get_CandidateSymbols
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IErrorTypeSymbol.cs
    startLine: 26
- id: Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateReason
  yaml: api/Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IErrorTypeSymbol
  name:
    CSharp: CandidateReason
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateReason
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IErrorTypeSymbol.cs
    startLine: 32
  summary: >+
    If CandidateSymbols returns one or more symbols, returns the reason that those

    symbols were not chosen. Otherwise, returns None.

  syntax:
    content:
      CSharp: CandidateReason CandidateReason
    parameters:
    - id: CandidateReason
      type:
        id: Microsoft.CodeAnalysis.CandidateReason
        name: CandidateReason
        href: api/Microsoft.CodeAnalysis.CandidateReason
- id: Microsoft.CodeAnalysis.IErrorTypeSymbol.get_CandidateReason
  yaml: api/Microsoft.CodeAnalysis.IErrorTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IErrorTypeSymbol
  name:
    CSharp: get_CandidateReason
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IErrorTypeSymbol.get_CandidateReason
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IErrorTypeSymbol.cs
    startLine: 32
