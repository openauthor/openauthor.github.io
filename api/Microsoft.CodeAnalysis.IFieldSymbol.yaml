id: Microsoft.CodeAnalysis.IFieldSymbol
yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
href: api/Microsoft.CodeAnalysis.IFieldSymbol
name:
  CSharp: IFieldSymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.IFieldSymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
  startLine: 10
summary: >+
  Represents a field in a class, struct or enum.

syntax:
  content:
    CSharp: public interface IFieldSymbol
items:
- id: Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: AssociatedSymbol
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 19
  summary: >+
    If this field serves as a backing variable for an automatically generated

    property or a field-like event, returns that

    property/event. Otherwise returns null.

    Note, the set of possible associated symbols might be expanded in the future to

    reflect changes in the languages.

  syntax:
    content:
      CSharp: ISymbol AssociatedSymbol
    parameters:
    - id: AssociatedSymbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: api/Microsoft.CodeAnalysis.ISymbol
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_AssociatedSymbol
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_AssociatedSymbol
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_AssociatedSymbol
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 19
- id: Microsoft.CodeAnalysis.IFieldSymbol.IsConst
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: IsConst
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.IsConst
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 25
  summary: >+
    Returns true if this field was declared as "const" (i.e. is a constant declaration).

    Also returns true for an enum member.

  syntax:
    content:
      CSharp: bool IsConst
    parameters:
    - id: IsConst
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_IsConst
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_IsConst
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_IsConst
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 25
- id: Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: IsReadOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 30
  summary: >+
    Returns true if this field was declared as "readonly".

  syntax:
    content:
      CSharp: bool IsReadOnly
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_IsReadOnly
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_IsReadOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_IsReadOnly
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 30
- id: Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: IsVolatile
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 35
  summary: >+
    Returns true if this field was declared as "volatile".

  syntax:
    content:
      CSharp: bool IsVolatile
    parameters:
    - id: IsVolatile
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_IsVolatile
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_IsVolatile
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_IsVolatile
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 35
- id: Microsoft.CodeAnalysis.IFieldSymbol.Type
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.Type
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 40
  summary: >+
    Gets the type of this field.

  syntax:
    content:
      CSharp: ITypeSymbol Type
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.ITypeSymbol
        name: ITypeSymbol
        href: api/Microsoft.CodeAnalysis.ITypeSymbol
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_Type
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_Type
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 40
- id: Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: HasConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 46
  summary: >+
    Returns false if the field wasn't declared as "const", or constant value was omitted or errorneous.

    True otherwise.

  syntax:
    content:
      CSharp: bool HasConstantValue
    parameters:
    - id: HasConstantValue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_HasConstantValue
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_HasConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_HasConstantValue
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 46
- id: Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: ConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 51
  summary: >+
    Gets the constant value of this field

  syntax:
    content:
      CSharp: object ConstantValue
    parameters:
    - id: ConstantValue
      type:
        id: System.Object
        name: System.Object
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_ConstantValue
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_ConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_ConstantValue
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: CustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 56
  summary: >+
    Gets the list of custom modifiers, if any, associated with the field.

  syntax:
    content:
      CSharp: ImmutableArray<CustomModifier> CustomModifiers
    parameters:
    - id: CustomModifiers
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        isExternal: true
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_CustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_CustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_CustomModifiers
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 56
- id: Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 63
  summary: >+
    Get the original definition of this symbol. If this symbol is derived from another

    symbol by (say) type substitution, this gets the original symbol, as it was defined in

    source or metadata.

  syntax:
    content:
      CSharp: new IFieldSymbol OriginalDefinition
    parameters:
    - id: OriginalDefinition
      type:
        id: Microsoft.CodeAnalysis.IFieldSymbol
        name: IFieldSymbol
        href: api/Microsoft.CodeAnalysis.IFieldSymbol
- id: Microsoft.CodeAnalysis.IFieldSymbol.get_OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IFieldSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IFieldSymbol
  name:
    CSharp: get_OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IFieldSymbol.get_OriginalDefinition
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IFieldSymbol.cs
    startLine: 63
