id: Microsoft.CodeAnalysis.ILocalSymbol
yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
href: api/Microsoft.CodeAnalysis.ILocalSymbol
name:
  CSharp: ILocalSymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.ILocalSymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
  startLine: 7
summary: >+
  Represents a local variable in method body.

syntax:
  content:
    CSharp: public interface ILocalSymbol
items:
- id: Microsoft.CodeAnalysis.ILocalSymbol.Type
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.Type
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 12
  summary: >+
    Gets the type of this local variable.

  syntax:
    content:
      CSharp: ITypeSymbol Type
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.ITypeSymbol
        name: ITypeSymbol
        href: api/Microsoft.CodeAnalysis.ITypeSymbol
- id: Microsoft.CodeAnalysis.ILocalSymbol.get_Type
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: get_Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.get_Type
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 12
- id: Microsoft.CodeAnalysis.ILocalSymbol.IsConst
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: IsConst
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.IsConst
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 18
  summary: >+
    Returns true if this local variable was declared as "const" (i.e. is a constant declaration).

    Also returns true for an enum member.

  syntax:
    content:
      CSharp: bool IsConst
    parameters:
    - id: IsConst
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.ILocalSymbol.get_IsConst
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: get_IsConst
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.get_IsConst
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: HasConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 24
  summary: >+
    Returns false if the local variable wasn't declared as "const", or constant value was omitted or erroneous.

    True otherwise.

  syntax:
    content:
      CSharp: bool HasConstantValue
    parameters:
    - id: HasConstantValue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.ILocalSymbol.get_HasConstantValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: get_HasConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.get_HasConstantValue
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 24
- id: Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: ConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 29
  summary: >+
    Gets the constant value of this local variable.

  syntax:
    content:
      CSharp: object ConstantValue
    parameters:
    - id: ConstantValue
      type:
        id: System.Object
        name: System.Object
        isExternal: true
- id: Microsoft.CodeAnalysis.ILocalSymbol.get_ConstantValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: get_ConstantValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.get_ConstantValue
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 29
- id: Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: IsFunctionValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 32
  syntax:
    content:
      CSharp: bool IsFunctionValue
    parameters:
    - id: IsFunctionValue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.ILocalSymbol.get_IsFunctionValue
  yaml: api/Microsoft.CodeAnalysis.ILocalSymbol.yaml
  href: api/Microsoft.CodeAnalysis.ILocalSymbol
  name:
    CSharp: get_IsFunctionValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ILocalSymbol.get_IsFunctionValue
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/ILocalSymbol.cs
    startLine: 32
