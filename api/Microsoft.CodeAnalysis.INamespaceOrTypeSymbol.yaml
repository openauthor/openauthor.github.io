id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
name:
  CSharp: INamespaceOrTypeSymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
  startLine: 11
summary: >+
  Represents either a namespace or a type.

syntax:
  content:
    CSharp: public interface INamespaceOrTypeSymbol
items:
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: GetMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 18
  summary: >+
    Get all the members of this symbol.

  syntax:
    content:
      CSharp: ImmutableArray<ISymbol> GetMembers();
    parameters: []
    return:
      id: ImmutableArray
      description: >-
        An ImmutableArray containing all the members of this symbol. If this symbol has no members,

            returns an empty ImmutableArray. Never returns Null.
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(System.String)
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: GetMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 25
  summary: >+
    Get all the members of this symbol that have a particular name.

  syntax:
    content:
      CSharp: ImmutableArray<ISymbol> GetMembers(string name);
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ImmutableArray
      description: >-
        An ImmutableArray containing all the members of this symbol with the given name. If there are

            no members with this name, returns an empty ImmutableArray. Never returns Null.
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: GetTypeMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 32
  summary: >+
    Get all the members of this symbol that are types.

  syntax:
    content:
      CSharp: ImmutableArray<INamedTypeSymbol> GetTypeMembers();
    parameters: []
    return:
      id: ImmutableArray
      description: >-
        An ImmutableArray containing all the types that are members of this symbol. If this symbol has no type members,

            returns an empty ImmutableArray. Never returns null.
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String)
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: GetTypeMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 40
  summary: >+
    Get all the members of this symbol that are types that have a particular name, of any arity.

  syntax:
    content:
      CSharp: ImmutableArray<INamedTypeSymbol> GetTypeMembers(string name);
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ImmutableArray
      description: >-
        An ImmutableArray containing all the types that are members of this symbol with the given name.

            If this symbol has no type members with this name,

            returns an empty ImmutableArray. Never returns null.
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String,System.Int32)
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: GetTypeMembers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String,System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 48
  summary: >+
    Get all the members of this symbol that are types that have a particular name and arity

  syntax:
    content:
      CSharp: ImmutableArray<INamedTypeSymbol> GetTypeMembers(string name, int arity);
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: arity
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: ImmutableArray
      description: >-
        An ImmutableArray containing all the types that are members of this symbol with the given name and arity.

            If this symbol has no type members with this name and arity,

            returns an empty ImmutableArray. Never returns null.
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsNamespace
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: IsNamespace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsNamespace
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 53
  summary: >+
    Returns true if this symbol is a namespace. If it is not a namespace, it must be a type.

  syntax:
    content:
      CSharp: bool IsNamespace
    parameters:
    - id: IsNamespace
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.get_IsNamespace
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: get_IsNamespace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.get_IsNamespace
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 53
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsType
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: IsType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsType
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 58
  summary: >+
    Returns true if this symbols is a type. If it is not a type, it must be a namespace.

  syntax:
    content:
      CSharp: bool IsType
    parameters:
    - id: IsType
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.get_IsType
  yaml: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.yaml
  href: api/Microsoft.CodeAnalysis.INamespaceOrTypeSymbol
  name:
    CSharp: get_IsType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.get_IsType
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/INamespaceOrTypeSymbol.cs
    startLine: 58
