id: Microsoft.CodeAnalysis.IParameterSymbol
yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
href: api/Microsoft.CodeAnalysis.IParameterSymbol
name:
  CSharp: IParameterSymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.IParameterSymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
  startLine: 11
summary: >+
  Represents a parameter of a method or property.

syntax:
  content:
    CSharp: public interface IParameterSymbol
items:
- id: Microsoft.CodeAnalysis.IParameterSymbol.RefKind
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: RefKind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.RefKind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 16
  summary: >+
    Whether the parameter passed by value or by reference.

  syntax:
    content:
      CSharp: RefKind RefKind
    parameters:
    - id: RefKind
      type:
        id: Microsoft.CodeAnalysis.RefKind
        name: RefKind
        href: api/Microsoft.CodeAnalysis.RefKind
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_RefKind
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_RefKind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_RefKind
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 16
- id: Microsoft.CodeAnalysis.IParameterSymbol.IsParams
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: IsParams
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.IsParams
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 21
  summary: >+
    Returns true if the parameter was declared as a parameter array.

  syntax:
    content:
      CSharp: bool IsParams
    parameters:
    - id: IsParams
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_IsParams
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_IsParams
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_IsParams
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 21
- id: Microsoft.CodeAnalysis.IParameterSymbol.IsOptional
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: IsOptional
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.IsOptional
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 26
  summary: >+
    Returns true if the parameter is optional.

  syntax:
    content:
      CSharp: bool IsOptional
    parameters:
    - id: IsOptional
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_IsOptional
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_IsOptional
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_IsOptional
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 26
- id: Microsoft.CodeAnalysis.IParameterSymbol.IsThis
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: IsThis
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.IsThis
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 31
  summary: >+
    Returns true if the parameter is the hidden 'this' ('Me' in Visual Basic) parameter.

  syntax:
    content:
      CSharp: bool IsThis
    parameters:
    - id: IsThis
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_IsThis
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_IsThis
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_IsThis
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 31
- id: Microsoft.CodeAnalysis.IParameterSymbol.Type
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.Type
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 36
  summary: >+
    Gets the type of the parameter.

  syntax:
    content:
      CSharp: ITypeSymbol Type
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.ITypeSymbol
        name: ITypeSymbol
        href: api/Microsoft.CodeAnalysis.ITypeSymbol
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_Type
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_Type
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: CustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 41
  summary: >+
    The list of custom modifiers, if any, associated with the parameter.

  syntax:
    content:
      CSharp: ImmutableArray<CustomModifier> CustomModifiers
    parameters:
    - id: CustomModifiers
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_CustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_CustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_CustomModifiers
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 41
- id: Microsoft.CodeAnalysis.IParameterSymbol.Ordinal
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: Ordinal
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.Ordinal
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 47
  summary: >+
    Gets the ordinal position of the parameter. The first parameter has ordinal zero.

    The 'this' parameter ('Me' in Visual Basic) has ordinal -1.

  syntax:
    content:
      CSharp: int Ordinal
    parameters:
    - id: Ordinal
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_Ordinal
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_Ordinal
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_Ordinal
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 47
- id: Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: HasExplicitDefaultValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 54
  summary: >+
    Returns true if the parameter specifies a default value to be passed

    when no value is provided as an argument to a call. The default value

    can be obtained with the DefaultValue property.

  syntax:
    content:
      CSharp: bool HasExplicitDefaultValue
    parameters:
    - id: HasExplicitDefaultValue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_HasExplicitDefaultValue
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_HasExplicitDefaultValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_HasExplicitDefaultValue
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 54
- id: Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: ExplicitDefaultValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 64
  summary: >+
    Returns the default value of the parameter.

  syntax:
    content:
      CSharp: object ExplicitDefaultValue
    parameters:
    - id: ExplicitDefaultValue
      type:
        id: System.Object
        name: System.Object
        isExternal: true
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_ExplicitDefaultValue
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_ExplicitDefaultValue
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_ExplicitDefaultValue
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 64
- id: Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 71
  summary: >+
    Get the original definition of this symbol. If this symbol is derived from another

    symbol by (say) type substitution, this gets the original symbol, as it was defined in

    source or metadata.

  syntax:
    content:
      CSharp: new IParameterSymbol OriginalDefinition
    parameters:
    - id: OriginalDefinition
      type:
        id: Microsoft.CodeAnalysis.IParameterSymbol
        name: IParameterSymbol
        href: api/Microsoft.CodeAnalysis.IParameterSymbol
- id: Microsoft.CodeAnalysis.IParameterSymbol.get_OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IParameterSymbol.yaml
  href: api/Microsoft.CodeAnalysis.IParameterSymbol
  name:
    CSharp: get_OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IParameterSymbol.get_OriginalDefinition
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Symbols/IParameterSymbol.cs
    startLine: 71
