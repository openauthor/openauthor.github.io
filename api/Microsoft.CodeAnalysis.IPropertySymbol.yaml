id: Microsoft.CodeAnalysis.IPropertySymbol
yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
href: api/Microsoft.CodeAnalysis.IPropertySymbol
name:
  CSharp: IPropertySymbol
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.IPropertySymbol
type: Interface
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
  startLine: 10
summary: >+
  Represents a property or indexer.

syntax:
  content:
    CSharp: public interface IPropertySymbol
items:
- id: Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: IsIndexer
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 15
  summary: >+
    Returns whether the property is really an indexer.

  syntax:
    content:
      CSharp: bool IsIndexer
    parameters:
    - id: IsIndexer
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_IsIndexer
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_IsIndexer
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_IsIndexer
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 15
- id: Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: IsReadOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 20
  summary: >+
    True if this is a read-only property; that is, a property with no set accessor.

  syntax:
    content:
      CSharp: bool IsReadOnly
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_IsReadOnly
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_IsReadOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_IsReadOnly
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 20
- id: Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: IsWriteOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 25
  summary: >+
    True if this is a write-only property; that is, a property with no get accessor.

  syntax:
    content:
      CSharp: bool IsWriteOnly
    parameters:
    - id: IsWriteOnly
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_IsWriteOnly
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_IsWriteOnly
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_IsWriteOnly
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 25
- id: Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: IsWithEvents
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 31
  summary: >+
    Returns true if this property is an auto-created WithEvents property that takes place of

    a field member when the field is marked as WithEvents.

  syntax:
    content:
      CSharp: bool IsWithEvents
    parameters:
    - id: IsWithEvents
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_IsWithEvents
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_IsWithEvents
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_IsWithEvents
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 31
- id: Microsoft.CodeAnalysis.IPropertySymbol.Type
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.Type
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 36
  summary: >+
    The type of the property.

  syntax:
    content:
      CSharp: ITypeSymbol Type
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.ITypeSymbol
        name: ITypeSymbol
        href: api/Microsoft.CodeAnalysis.ITypeSymbol
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_Type
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_Type
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_Type
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.IPropertySymbol.Parameters
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: Parameters
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.Parameters
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 43
  summary: >+
    The parameters of this property. If this property has no parameters, returns

    an empty list. Parameters are only present on indexers, or on some properties

    imported from a COM interface.

  syntax:
    content:
      CSharp: ImmutableArray<IParameterSymbol> Parameters
    parameters:
    - id: Parameters
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IParameterSymbol}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IParameterSymbol}
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_Parameters
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_Parameters
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_Parameters
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 43
- id: Microsoft.CodeAnalysis.IPropertySymbol.GetMethod
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: GetMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.GetMethod
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 48
  summary: >+
    The 'get' accessor of the property, or null if the property is write-only.

  syntax:
    content:
      CSharp: IMethodSymbol GetMethod
    parameters:
    - id: GetMethod
      type:
        id: Microsoft.CodeAnalysis.IMethodSymbol
        name: IMethodSymbol
        href: api/Microsoft.CodeAnalysis.IMethodSymbol
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_GetMethod
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_GetMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_GetMethod
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 48
- id: Microsoft.CodeAnalysis.IPropertySymbol.SetMethod
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: SetMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.SetMethod
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 53
  summary: >+
    The 'set' accessor of the property, or null if the property is read-only.

  syntax:
    content:
      CSharp: IMethodSymbol SetMethod
    parameters:
    - id: SetMethod
      type:
        id: Microsoft.CodeAnalysis.IMethodSymbol
        name: IMethodSymbol
        href: api/Microsoft.CodeAnalysis.IMethodSymbol
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_SetMethod
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_SetMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_SetMethod
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 53
- id: Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 60
  summary: >+
    The original definition of the property. If the property is constructed from another

    symbol by type substitution, OriginalDefinition gets the original symbol, as it was

    defined in source or metadata.

  syntax:
    content:
      CSharp: new IPropertySymbol OriginalDefinition
    parameters:
    - id: OriginalDefinition
      type:
        id: Microsoft.CodeAnalysis.IPropertySymbol
        name: IPropertySymbol
        href: api/Microsoft.CodeAnalysis.IPropertySymbol
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_OriginalDefinition
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_OriginalDefinition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_OriginalDefinition
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 60
- id: Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: OverriddenProperty
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 65
  summary: >+
    Returns the overridden property, or null.

  syntax:
    content:
      CSharp: IPropertySymbol OverriddenProperty
    parameters:
    - id: OverriddenProperty
      type:
        id: Microsoft.CodeAnalysis.IPropertySymbol
        name: IPropertySymbol
        href: api/Microsoft.CodeAnalysis.IPropertySymbol
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_OverriddenProperty
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_OverriddenProperty
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_OverriddenProperty
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 65
- id: Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: ExplicitInterfaceImplementations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 73
  summary: >+
    Returns interface properties explicitly implemented by this property.

  syntax:
    content:
      CSharp: ImmutableArray<IPropertySymbol> ExplicitInterfaceImplementations
    parameters:
    - id: ExplicitInterfaceImplementations
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IPropertySymbol}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IPropertySymbol}
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_ExplicitInterfaceImplementations
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_ExplicitInterfaceImplementations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_ExplicitInterfaceImplementations
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 73
- id: Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: TypeCustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 78
  summary: >+
    The list of custom modifiers, if any, associated with the type of the property.

  syntax:
    content:
      CSharp: ImmutableArray<CustomModifier> TypeCustomModifiers
    parameters:
    - id: TypeCustomModifiers
      type:
        id: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        name: System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CustomModifier}
        isExternal: true
- id: Microsoft.CodeAnalysis.IPropertySymbol.get_TypeCustomModifiers
  yaml: api/Microsoft.CodeAnalysis.IPropertySymbol.yaml
  href: api/Microsoft.CodeAnalysis.IPropertySymbol
  name:
    CSharp: get_TypeCustomModifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.IPropertySymbol.get_TypeCustomModifiers
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/IPropertySymbol.cs
    startLine: 78
