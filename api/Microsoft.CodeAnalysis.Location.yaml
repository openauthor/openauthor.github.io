id: Microsoft.CodeAnalysis.Location
yaml: api/Microsoft.CodeAnalysis.Location.yaml
href: api/Microsoft.CodeAnalysis.Location
name:
  CSharp: Location
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Location
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Diagnostic/Location.cs
  startLine: 11
summary: >+
  A program location in source code.

syntax:
  content:
    CSharp: public abstract class Location
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Location.Kind
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: Kind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.Kind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 21
  summary: >+
    Location kind (None/SourceFile/MetadataFile).

  syntax:
    content:
      CSharp: public abstract LocationKind Kind
    parameters:
    - id: Kind
      type:
        id: Microsoft.CodeAnalysis.LocationKind
        name: LocationKind
        href: api/Microsoft.CodeAnalysis.LocationKind
- id: Microsoft.CodeAnalysis.Location.get_Kind
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_Kind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_Kind
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 21
- id: Microsoft.CodeAnalysis.Location.IsInSource
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: IsInSource
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.IsInSource
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 26
  summary: >+
    Returns true if the location represents a specific location in a source code file.

  syntax:
    content:
      CSharp: public bool IsInSource
    parameters:
    - id: IsInSource
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Location.get_IsInSource
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_IsInSource
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_IsInSource
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 26
- id: Microsoft.CodeAnalysis.Location.IsInMetadata
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: IsInMetadata
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.IsInMetadata
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 31
  summary: >+
    Returns true if the location is in metadata.

  syntax:
    content:
      CSharp: public bool IsInMetadata
    parameters:
    - id: IsInMetadata
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Location.get_IsInMetadata
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_IsInMetadata
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_IsInMetadata
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 31
- id: Microsoft.CodeAnalysis.Location.SourceTree
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: SourceTree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.SourceTree
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 36
  summary: >+
    The syntax tree this location is located in or null if not in a syntax tree.

  syntax:
    content:
      CSharp: public virtual SyntaxTree SourceTree
    parameters:
    - id: SourceTree
      type:
        id: Microsoft.CodeAnalysis.SyntaxTree
        name: SyntaxTree
        href: api/Microsoft.CodeAnalysis.SyntaxTree
- id: Microsoft.CodeAnalysis.Location.get_SourceTree
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_SourceTree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_SourceTree
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.Location.MetadataModule
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: MetadataModule
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.MetadataModule
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 45
  summary: >+
    Returns the metadata module the location is associated with or null if the module is not available.

  syntax:
    content:
      CSharp: public virtual IModuleSymbol MetadataModule
    parameters:
    - id: MetadataModule
      type:
        id: Microsoft.CodeAnalysis.IModuleSymbol
        name: IModuleSymbol
        href: api/Microsoft.CodeAnalysis.IModuleSymbol
- id: Microsoft.CodeAnalysis.Location.get_MetadataModule
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_MetadataModule
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_MetadataModule
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 45
- id: Microsoft.CodeAnalysis.Location.SourceSpan
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: SourceSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.SourceSpan
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 53
  summary: >+
    The location within the syntax tree that this location is associated with.

  syntax:
    content:
      CSharp: public virtual TextSpan SourceSpan
    parameters:
    - id: SourceSpan
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.Location.get_SourceSpan
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_SourceSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_SourceSpan
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 53
- id: Microsoft.CodeAnalysis.Location.GetLineSpan
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: GetLineSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.GetLineSpan
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 65
  summary: >+
    Gets the location in terms of path, line and column.

  syntax:
    content:
      CSharp: public virtual FileLinePositionSpan GetLineSpan()
    parameters: []
    return:
      id: FileLinePositionSpan
      description: "[Microsoft.CodeAnalysis.FileLinePositionSpan](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan) that contains path, line and column information.\r\n    \r\n    Returns an invalid span (see [Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan)) if the information is not available.\r\n    \r\n    The values are not affected by line mapping directives (#line in C# or #ExternalSource in VB)."
- id: Microsoft.CodeAnalysis.Location.GetMappedLineSpan
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: GetMappedLineSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.GetMappedLineSpan
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 78
  summary: >+
    Gets the location in terms of path, line and column after applying source line mapping directives

    (#line in C# or #ExternalSource in VB).

  syntax:
    content:
      CSharp: public virtual FileLinePositionSpan GetMappedLineSpan()
    parameters: []
    return:
      id: FileLinePositionSpan
      description: >-
        [Microsoft.CodeAnalysis.FileLinePositionSpan](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan) that contains file, line and column information,

            or an invalid span (see [Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid](#/api/Microsoft.CodeAnalysis.FileLinePositionSpan)) if not available.
- id: Microsoft.CodeAnalysis.Location.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 84
  syntax:
    content:
      CSharp: public abstract override bool Equals(object obj);
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Location.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 85
  syntax:
    content:
      CSharp: public abstract override int GetHashCode();
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Location.ToString
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 87
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.Location.op_Equality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.op_Equality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 114
- id: Microsoft.CodeAnalysis.Location.op_Inequality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.op_Inequality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 124
- id: Microsoft.CodeAnalysis.Location.None
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.None
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 145
  summary: >+
    A location of kind LocationKind.None.

  syntax:
    content:
      CSharp: public static Location None
    parameters:
    - id: None
      type:
        id: Microsoft.CodeAnalysis.Location
        name: Location
        href: api/Microsoft.CodeAnalysis.Location
- id: Microsoft.CodeAnalysis.Location.get_None
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: get_None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.get_None
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 145
- id: Microsoft.CodeAnalysis.Location.Create(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: Create
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.Create(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 150
  summary: >+
    Creates an instance of a [Microsoft.CodeAnalysis.Location](#/api/Microsoft.CodeAnalysis.Location) for a span in a [Microsoft.CodeAnalysis.SyntaxTree](#/api/Microsoft.CodeAnalysis.SyntaxTree).

  syntax:
    content:
      CSharp: public static Location Create(SyntaxTree syntaxTree, TextSpan textSpan)
    parameters:
    - id: syntaxTree
      type:
        id: Microsoft.CodeAnalysis.SyntaxTree
        name: SyntaxTree
        href: api/Microsoft.CodeAnalysis.SyntaxTree
    - id: textSpan
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: Location
- id: Microsoft.CodeAnalysis.Location.Create(System.String,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.Location.yaml
  href: api/Microsoft.CodeAnalysis.Location
  name:
    CSharp: Create
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Location.Create(System.String,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Diagnostic/Location.cs
    startLine: 163
  summary: >+
    Creates an instance of a [Microsoft.CodeAnalysis.Location](#/api/Microsoft.CodeAnalysis.Location) for a span in a file.

  syntax:
    content:
      CSharp: public static Location Create(string filePath, TextSpan textSpan, LinePositionSpan lineSpan)
    parameters:
    - id: filePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: textSpan
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    - id: lineSpan
      type:
        id: Microsoft.CodeAnalysis.Text.LinePositionSpan
        name: LinePositionSpan
        href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
    return:
      id: Location
