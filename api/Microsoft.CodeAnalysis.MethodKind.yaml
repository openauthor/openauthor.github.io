id: Microsoft.CodeAnalysis.MethodKind
yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
href: api/Microsoft.CodeAnalysis.MethodKind
name:
  CSharp: MethodKind
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.MethodKind
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
  startLine: 9
summary: >+
  Enumeration for possible kinds of method symbols.

syntax:
  content:
    CSharp: public enum MethodKind
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.MethodKind.AnonymousFunction
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: AnonymousFunction
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.AnonymousFunction
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 14
  summary: >+
    An anonymous method or lambda expression

  syntax:
    content:
      CSharp: AnonymousFunction = 0
- id: Microsoft.CodeAnalysis.MethodKind.LambdaMethod
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: LambdaMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.LambdaMethod
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 15
  syntax:
    content:
      CSharp: LambdaMethod = 0
- id: Microsoft.CodeAnalysis.MethodKind.Constructor
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: Constructor
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.Constructor
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 20
  summary: >+
    Method is a constructor.

  syntax:
    content:
      CSharp: Constructor = 1
- id: Microsoft.CodeAnalysis.MethodKind.Conversion
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: Conversion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.Conversion
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 25
  summary: >+
    Method is a conversion.

  syntax:
    content:
      CSharp: Conversion = 2
- id: Microsoft.CodeAnalysis.MethodKind.DelegateInvoke
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: DelegateInvoke
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.DelegateInvoke
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 30
  summary: >+
    Method is a delegate invoke.

  syntax:
    content:
      CSharp: DelegateInvoke = 3
- id: Microsoft.CodeAnalysis.MethodKind.Destructor
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: Destructor
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.Destructor
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 35
  summary: >+
    Method is a destructor.

  syntax:
    content:
      CSharp: Destructor = 4
- id: Microsoft.CodeAnalysis.MethodKind.EventAdd
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: EventAdd
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.EventAdd
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 40
  summary: >+
    Method is an event add.

  syntax:
    content:
      CSharp: EventAdd = 5
- id: Microsoft.CodeAnalysis.MethodKind.EventRaise
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: EventRaise
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.EventRaise
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 45
  summary: >+
    Method is an event raise.

  syntax:
    content:
      CSharp: EventRaise = 6
- id: Microsoft.CodeAnalysis.MethodKind.EventRemove
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: EventRemove
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.EventRemove
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 50
  summary: >+
    Method is an event remove.

  syntax:
    content:
      CSharp: EventRemove = 7
- id: Microsoft.CodeAnalysis.MethodKind.ExplicitInterfaceImplementation
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: ExplicitInterfaceImplementation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.ExplicitInterfaceImplementation
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 55
  summary: >+
    Method is an explicit interface implementation.

  syntax:
    content:
      CSharp: ExplicitInterfaceImplementation = 8
- id: Microsoft.CodeAnalysis.MethodKind.UserDefinedOperator
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: UserDefinedOperator
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.UserDefinedOperator
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 60
  summary: >+
    Method is an operator.

  syntax:
    content:
      CSharp: UserDefinedOperator = 9
- id: Microsoft.CodeAnalysis.MethodKind.Ordinary
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: Ordinary
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.Ordinary
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 65
  summary: >+
    Method is an ordinary method.

  syntax:
    content:
      CSharp: Ordinary = 10
- id: Microsoft.CodeAnalysis.MethodKind.PropertyGet
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: PropertyGet
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.PropertyGet
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 70
  summary: >+
    Method is a property get.

  syntax:
    content:
      CSharp: PropertyGet = 11
- id: Microsoft.CodeAnalysis.MethodKind.PropertySet
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: PropertySet
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.PropertySet
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 75
  summary: >+
    Method is a property set.

  syntax:
    content:
      CSharp: PropertySet = 12
- id: Microsoft.CodeAnalysis.MethodKind.ReducedExtension
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: ReducedExtension
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.ReducedExtension
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 80
  summary: >+
    An extension method with the "this" parameter removed.

  syntax:
    content:
      CSharp: ReducedExtension = 13
- id: Microsoft.CodeAnalysis.MethodKind.StaticConstructor
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: StaticConstructor
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.StaticConstructor
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 85
  summary: >+
    Method is a static constructor.

  syntax:
    content:
      CSharp: StaticConstructor = 14
- id: Microsoft.CodeAnalysis.MethodKind.SharedConstructor
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: SharedConstructor
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.SharedConstructor
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 86
  syntax:
    content:
      CSharp: SharedConstructor = 14
- id: Microsoft.CodeAnalysis.MethodKind.BuiltinOperator
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: BuiltinOperator
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.BuiltinOperator
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 91
  summary: >+
    A built-in operator.

  syntax:
    content:
      CSharp: BuiltinOperator = 15
- id: Microsoft.CodeAnalysis.MethodKind.DeclareMethod
  yaml: api/Microsoft.CodeAnalysis.MethodKind.yaml
  href: api/Microsoft.CodeAnalysis.MethodKind
  name:
    CSharp: DeclareMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.MethodKind.DeclareMethod
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/MethodKind.cs
    startLine: 96
  summary: >+
    Declare Sub or Function.

  syntax:
    content:
      CSharp: DeclareMethod = 16
