id: Microsoft.CodeAnalysis.Options.OptionSet
yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
href: api/Microsoft.CodeAnalysis.Options.OptionSet
name:
  CSharp: OptionSet
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Options.OptionSet
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
  path: src/Workspaces/Core/Portable/Options/OptionSet.cs
  startLine: 7
syntax:
  content:
    CSharp: public sealed class OptionSet
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.Option{``0})
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: GetOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.Option{``0})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 29
  summary: >+
    Gets the value of the option.

  syntax:
    content:
      CSharp: public T GetOption<T>(Option<T> option)
    parameters:
    - id: option
      type:
        id: Microsoft.CodeAnalysis.Options.Option{``0}
        name: Option
        href: Microsoft.CodeAnalysis.Options.Option{``0}
    return:
      id: T
- id: Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String)
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: GetOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 37
  summary: >+
    Gets the value of the option.

  syntax:
    content:
      CSharp: public T GetOption<T>(PerLanguageOption<T> option, string language)
    parameters:
    - id: option
      type:
        id: Microsoft.CodeAnalysis.Options.PerLanguageOption{``0}
        name: PerLanguageOption
        href: Microsoft.CodeAnalysis.Options.PerLanguageOption{``0}
    - id: language
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: T
- id: Microsoft.CodeAnalysis.Options.OptionSet.GetOption(Microsoft.CodeAnalysis.Options.OptionKey)
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: GetOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.GetOption(Microsoft.CodeAnalysis.Options.OptionKey)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 45
  summary: >+
    Gets the value of the option.

  syntax:
    content:
      CSharp: public object GetOption(OptionKey optionKey)
    parameters:
    - id: optionKey
      type:
        id: Microsoft.CodeAnalysis.Options.OptionKey
        name: OptionKey
        href: api/Microsoft.CodeAnalysis.Options.OptionKey
    return:
      id: Object
- id: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.Option{``0},``0)
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: WithChangedOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.Option{``0},``0)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 64
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Options.OptionSet](#/api/Microsoft.CodeAnalysis.Options.OptionSet) that contains the changed value.

  syntax:
    content:
      CSharp: public OptionSet WithChangedOption<T>(Option<T> option, T value)
    parameters:
    - id: option
      type:
        id: Microsoft.CodeAnalysis.Options.Option{``0}
        name: Option
        href: Microsoft.CodeAnalysis.Options.Option{``0}
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: OptionSet
- id: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String,``0)
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: WithChangedOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String,``0)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 72
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Options.OptionSet](#/api/Microsoft.CodeAnalysis.Options.OptionSet) that contains the changed value.

  syntax:
    content:
      CSharp: public OptionSet WithChangedOption<T>(PerLanguageOption<T> option, string language, T value)
    parameters:
    - id: option
      type:
        id: Microsoft.CodeAnalysis.Options.PerLanguageOption{``0}
        name: PerLanguageOption
        href: Microsoft.CodeAnalysis.Options.PerLanguageOption{``0}
    - id: language
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: OptionSet
- id: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption(Microsoft.CodeAnalysis.Options.OptionKey,System.Object)
  yaml: api/Microsoft.CodeAnalysis.Options.OptionSet.yaml
  href: api/Microsoft.CodeAnalysis.Options.OptionSet
  name:
    CSharp: WithChangedOption
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption(Microsoft.CodeAnalysis.Options.OptionKey,System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Options/OptionSet.cs
    startLine: 80
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Options.OptionSet](#/api/Microsoft.CodeAnalysis.Options.OptionSet) that contains the changed value.

  syntax:
    content:
      CSharp: public OptionSet WithChangedOption(OptionKey optionAndLanguage, object value)
    parameters:
    - id: optionAndLanguage
      type:
        id: Microsoft.CodeAnalysis.Options.OptionKey
        name: OptionKey
        href: api/Microsoft.CodeAnalysis.Options.OptionKey
    - id: value
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: OptionSet
