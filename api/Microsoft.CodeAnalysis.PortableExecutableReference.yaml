id: Microsoft.CodeAnalysis.PortableExecutableReference
yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
href: api/Microsoft.CodeAnalysis.PortableExecutableReference
name:
  CSharp: PortableExecutableReference
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.PortableExecutableReference
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
  startLine: 15
summary: >+
  Reference to metadata stored in the standard ECMA-335 metadata format.

syntax:
  content:
    CSharp: public abstract class PortableExecutableReference
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: Microsoft.CodeAnalysis.MetadataReference
  name: MetadataReference
  href: api/Microsoft.CodeAnalysis.MetadataReference
items:
- id: Microsoft.CodeAnalysis.PortableExecutableReference.Display
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: Display
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.Display
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 34
  summary: >+
    Display string used in error messages to identity the reference.

  syntax:
    content:
      CSharp: public override string Display
    parameters:
    - id: Display
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.PortableExecutableReference.get_Display
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: get_Display
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.get_Display
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 36
- id: Microsoft.CodeAnalysis.PortableExecutableReference.FilePath
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: FilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.FilePath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 42
  summary: >+
    Path describing the location of the metadata, or null if the metadata have no location.

  syntax:
    content:
      CSharp: public string FilePath
    parameters:
    - id: FilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.PortableExecutableReference.get_FilePath
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: get_FilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.get_FilePath
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 44
- id: Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: WithAliases
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 78
  summary: >+
    Returns an instance of the reference with specified aliases.

  syntax:
    content:
      CSharp: public new PortableExecutableReference WithAliases(IEnumerable<string> aliases)
    parameters:
    - id: aliases
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: System.Collections.Generic.IEnumerable{System.String}
        isExternal: true
      description: The new aliases for the reference.
    return:
      id: PortableExecutableReference
- id: Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: WithAliases
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 88
  summary: >+
    Returns an instance of the reference with specified aliases.

  syntax:
    content:
      CSharp: public new PortableExecutableReference WithAliases(ImmutableArray<string> aliases)
    parameters:
    - id: aliases
      type:
        id: System.Collections.Immutable.ImmutableArray{System.String}
        name: System.Collections.Immutable.ImmutableArray{System.String}
        isExternal: true
      description: The new aliases for the reference.
    return:
      id: PortableExecutableReference
- id: Microsoft.CodeAnalysis.PortableExecutableReference.WithEmbedInteropTypes(System.Boolean)
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: WithEmbedInteropTypes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.WithEmbedInteropTypes(System.Boolean)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 98
  summary: >+
    Returns an instance of the reference with specified interop types embedding.

  syntax:
    content:
      CSharp: public new PortableExecutableReference WithEmbedInteropTypes(bool value)
    parameters:
    - id: value
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: The new value for [Microsoft.CodeAnalysis.MetadataReferenceProperties.EmbedInteropTypes](#/api/Microsoft.CodeAnalysis.MetadataReferenceProperties).
    return:
      id: PortableExecutableReference
- id: Microsoft.CodeAnalysis.PortableExecutableReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)
  yaml: api/Microsoft.CodeAnalysis.PortableExecutableReference.yaml
  href: api/Microsoft.CodeAnalysis.PortableExecutableReference
  name:
    CSharp: WithProperties
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.PortableExecutableReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/MetadataReference/PortableExecutableReference.cs
    startLine: 108
  summary: >+
    Returns an instance of the reference with specified properties, or this instance if properties haven't changed.

  syntax:
    content:
      CSharp: public new PortableExecutableReference WithProperties(MetadataReferenceProperties properties)
    parameters:
    - id: properties
      type:
        id: Microsoft.CodeAnalysis.MetadataReferenceProperties
        name: MetadataReferenceProperties
        href: api/Microsoft.CodeAnalysis.MetadataReferenceProperties
      description: The new properties for the reference.
    return:
      id: PortableExecutableReference
