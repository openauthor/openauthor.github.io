id: Microsoft.CodeAnalysis.ProjectInfo
yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
href: api/Microsoft.CodeAnalysis.ProjectInfo
name:
  CSharp: ProjectInfo
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.ProjectInfo
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:/roslyn/
    sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
  path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
  startLine: 14
summary: >+
  A class that represents all the arguments necessary to create a new project instance.

syntax:
  content:
    CSharp: public sealed class ProjectInfo
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.ProjectInfo.Id
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Id
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Id
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 19
  summary: >+
    The unique Id of the project.

  syntax:
    content:
      CSharp: public ProjectId Id
    parameters:
    - id: Id
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: api/Microsoft.CodeAnalysis.ProjectId
- id: Microsoft.CodeAnalysis.ProjectInfo.get_Id
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_Id
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_Id
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 19
- id: Microsoft.CodeAnalysis.ProjectInfo.Version
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Version
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Version
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 24
  summary: >+
    The version of the project.

  syntax:
    content:
      CSharp: public VersionStamp Version
    parameters:
    - id: Version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: api/Microsoft.CodeAnalysis.VersionStamp
- id: Microsoft.CodeAnalysis.ProjectInfo.get_Version
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_Version
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_Version
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 24
- id: Microsoft.CodeAnalysis.ProjectInfo.Name
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Name
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Name
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 29
  summary: >+
    The name of the project. This may differ from the project's filename.

  syntax:
    content:
      CSharp: public string Name
    parameters:
    - id: Name
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_Name
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_Name
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_Name
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 29
- id: Microsoft.CodeAnalysis.ProjectInfo.AssemblyName
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: AssemblyName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.AssemblyName
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 34
  summary: >+
    The name of the assembly that this project will create, without file extension.

  syntax:
    content:
      CSharp: public string AssemblyName
    parameters:
    - id: AssemblyName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_AssemblyName
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_AssemblyName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_AssemblyName
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 34
- id: Microsoft.CodeAnalysis.ProjectInfo.Language
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Language
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 39
  summary: >+
    The language of the project.

  syntax:
    content:
      CSharp: public string Language
    parameters:
    - id: Language
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_Language
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_Language
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 39
- id: Microsoft.CodeAnalysis.ProjectInfo.FilePath
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: FilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.FilePath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 44
  summary: >+
    The path to the project file or null if there is no project file.

  syntax:
    content:
      CSharp: public string FilePath
    parameters:
    - id: FilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_FilePath
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_FilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_FilePath
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 44
- id: Microsoft.CodeAnalysis.ProjectInfo.OutputFilePath
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: OutputFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.OutputFilePath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 49
  summary: >+
    The path to the output file (module or assembly).

  syntax:
    content:
      CSharp: public string OutputFilePath
    parameters:
    - id: OutputFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_OutputFilePath
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_OutputFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_OutputFilePath
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 49
- id: Microsoft.CodeAnalysis.ProjectInfo.CompilationOptions
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: CompilationOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.CompilationOptions
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 54
  summary: >+
    The initial compilation options for the project, or null if the default options should be used.

  syntax:
    content:
      CSharp: public CompilationOptions CompilationOptions
    parameters:
    - id: CompilationOptions
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
- id: Microsoft.CodeAnalysis.ProjectInfo.get_CompilationOptions
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_CompilationOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_CompilationOptions
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 54
- id: Microsoft.CodeAnalysis.ProjectInfo.ParseOptions
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: ParseOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.ParseOptions
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 59
  summary: >+
    The initial parse options for the source code documents in this project, or null if the default options should be used.

  syntax:
    content:
      CSharp: public ParseOptions ParseOptions
    parameters:
    - id: ParseOptions
      type:
        id: Microsoft.CodeAnalysis.ParseOptions
        name: ParseOptions
        href: Microsoft.CodeAnalysis.ParseOptions
- id: Microsoft.CodeAnalysis.ProjectInfo.get_ParseOptions
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_ParseOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_ParseOptions
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 59
- id: Microsoft.CodeAnalysis.ProjectInfo.Documents
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Documents
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Documents
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 64
  summary: >+
    The list of source documents initially associated with the project.

  syntax:
    content:
      CSharp: public IReadOnlyList<DocumentInfo> Documents
    parameters:
    - id: Documents
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_Documents
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_Documents
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_Documents
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 64
- id: Microsoft.CodeAnalysis.ProjectInfo.ProjectReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: ProjectReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.ProjectReferences
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 69
  summary: >+
    The project references initially defined for the project.

  syntax:
    content:
      CSharp: public IReadOnlyList<ProjectReference> ProjectReferences
    parameters:
    - id: ProjectReferences
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.ProjectReference}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.ProjectReference}
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_ProjectReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_ProjectReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_ProjectReferences
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 69
- id: Microsoft.CodeAnalysis.ProjectInfo.MetadataReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: MetadataReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.MetadataReferences
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 74
  summary: >+
    The metadata references initially defined for the project.

  syntax:
    content:
      CSharp: public IReadOnlyList<MetadataReference> MetadataReferences
    parameters:
    - id: MetadataReferences
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.MetadataReference}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.MetadataReference}
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_MetadataReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_MetadataReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_MetadataReferences
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 74
- id: Microsoft.CodeAnalysis.ProjectInfo.AnalyzerReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: AnalyzerReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.AnalyzerReferences
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 79
  summary: >+
    The analyzers initially associated with this project.

  syntax:
    content:
      CSharp: public IReadOnlyList<AnalyzerReference> AnalyzerReferences
    parameters:
    - id: AnalyzerReferences
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_AnalyzerReferences
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_AnalyzerReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_AnalyzerReferences
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 79
- id: Microsoft.CodeAnalysis.ProjectInfo.AdditionalDocuments
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: AdditionalDocuments
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.AdditionalDocuments
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 84
  summary: >+
    The list of non-source documents associated with this project.

  syntax:
    content:
      CSharp: public IReadOnlyList<DocumentInfo> AdditionalDocuments
    parameters:
    - id: AdditionalDocuments
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_AdditionalDocuments
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_AdditionalDocuments
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_AdditionalDocuments
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 84
- id: Microsoft.CodeAnalysis.ProjectInfo.IsSubmission
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: IsSubmission
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.IsSubmission
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 89
  summary: >+
    True if this is a submission project for interactive sessions.

  syntax:
    content:
      CSharp: public bool IsSubmission
    parameters:
    - id: IsSubmission
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_IsSubmission
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_IsSubmission
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_IsSubmission
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 89
- id: Microsoft.CodeAnalysis.ProjectInfo.HostObjectType
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: HostObjectType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.HostObjectType
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 94
  summary: >+
    Type of the host object.

  syntax:
    content:
      CSharp: public Type HostObjectType
    parameters:
    - id: HostObjectType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectInfo.get_HostObjectType
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: get_HostObjectType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.get_HostObjectType
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 94
- id: Microsoft.CodeAnalysis.ProjectInfo.Create(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.VersionStamp,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.ParseOptions,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Boolean,System.Type)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: Create
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.Create(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.VersionStamp,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.ParseOptions,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Boolean,System.Type)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 155
  summary: >+
    Create a new instance of a ProjectInfo.

  syntax:
    content:
      CSharp: public static ProjectInfo Create(ProjectId id, VersionStamp version, string name, string assemblyName, string language, string filePath = null, string outputFilePath = null, CompilationOptions compilationOptions = null, ParseOptions parseOptions = null, IEnumerable<DocumentInfo> documents = null, IEnumerable<ProjectReference> projectReferences = null, IEnumerable<MetadataReference> metadataReferences = null, IEnumerable<AnalyzerReference> analyzerReferences = null, IEnumerable<DocumentInfo> additionalDocuments = null, bool isSubmission = false, Type hostObjectType = null)
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: api/Microsoft.CodeAnalysis.ProjectId
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: api/Microsoft.CodeAnalysis.VersionStamp
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: assemblyName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: language
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: filePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: outputFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: compilationOptions
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
    - id: parseOptions
      type:
        id: Microsoft.CodeAnalysis.ParseOptions
        name: ParseOptions
        href: Microsoft.CodeAnalysis.ParseOptions
    - id: documents
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
    - id: projectReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference}
        isExternal: true
    - id: metadataReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference}
        isExternal: true
    - id: analyzerReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        isExternal: true
    - id: additionalDocuments
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
    - id: isSubmission
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: hostObjectType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithDocuments
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 266
  syntax:
    content:
      CSharp: public ProjectInfo WithDocuments(IEnumerable<DocumentInfo> documents)
    parameters:
    - id: documents
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithAdditionalDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithAdditionalDocuments
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithAdditionalDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 271
  syntax:
    content:
      CSharp: public ProjectInfo WithAdditionalDocuments(IEnumerable<DocumentInfo> additionalDocuments)
    parameters:
    - id: additionalDocuments
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo}
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithVersion(Microsoft.CodeAnalysis.VersionStamp)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithVersion
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithVersion(Microsoft.CodeAnalysis.VersionStamp)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 276
  syntax:
    content:
      CSharp: public ProjectInfo WithVersion(VersionStamp version)
    parameters:
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: api/Microsoft.CodeAnalysis.VersionStamp
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithName(System.String)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithName(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 281
  syntax:
    content:
      CSharp: public ProjectInfo WithName(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithFilePath(System.String)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithFilePath(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 286
  syntax:
    content:
      CSharp: public ProjectInfo WithFilePath(string filePath)
    parameters:
    - id: filePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithAssemblyName(System.String)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithAssemblyName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithAssemblyName(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 291
  syntax:
    content:
      CSharp: public ProjectInfo WithAssemblyName(string assemblyName)
    parameters:
    - id: assemblyName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithOutputFilePath(System.String)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithOutputFilePath
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithOutputFilePath(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 296
  syntax:
    content:
      CSharp: public ProjectInfo WithOutputFilePath(string outputFilePath)
    parameters:
    - id: outputFilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithCompilationOptions(Microsoft.CodeAnalysis.CompilationOptions)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithCompilationOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithCompilationOptions(Microsoft.CodeAnalysis.CompilationOptions)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 301
  syntax:
    content:
      CSharp: public ProjectInfo WithCompilationOptions(CompilationOptions compilationOptions)
    parameters:
    - id: compilationOptions
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithParseOptions(Microsoft.CodeAnalysis.ParseOptions)
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithParseOptions
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithParseOptions(Microsoft.CodeAnalysis.ParseOptions)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 306
  syntax:
    content:
      CSharp: public ProjectInfo WithParseOptions(ParseOptions parseOptions)
    parameters:
    - id: parseOptions
      type:
        id: Microsoft.CodeAnalysis.ParseOptions
        name: ParseOptions
        href: Microsoft.CodeAnalysis.ParseOptions
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithProjectReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 311
  syntax:
    content:
      CSharp: public ProjectInfo WithProjectReferences(IEnumerable<ProjectReference> projectReferences)
    parameters:
    - id: projectReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference}
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithMetadataReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 316
  syntax:
    content:
      CSharp: public ProjectInfo WithMetadataReferences(IEnumerable<MetadataReference> metadataReferences)
    parameters:
    - id: metadataReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference}
        isExternal: true
    return:
      id: ProjectInfo
- id: Microsoft.CodeAnalysis.ProjectInfo.WithAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})
  yaml: api/Microsoft.CodeAnalysis.ProjectInfo.yaml
  href: api/Microsoft.CodeAnalysis.ProjectInfo
  name:
    CSharp: WithAnalyzerReferences
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectInfo.WithAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:/roslyn/
      sha1: e36e4012f35f9307bcf48a79441cb1f4a9c3ce8d
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectInfo.cs
    startLine: 321
  syntax:
    content:
      CSharp: public ProjectInfo WithAnalyzerReferences(IEnumerable<AnalyzerReference> analyzerReferences)
    parameters:
    - id: analyzerReferences
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference}
        isExternal: true
    return:
      id: ProjectInfo
