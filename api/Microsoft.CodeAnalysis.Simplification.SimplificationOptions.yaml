id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions
yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
name:
  CSharp: SimplificationOptions
qualifiedName:
  CSharp: SimplificationOptions
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
  startLine: 9
summary: >+
  This Object contains the options that needs to be drilled down to the Simplification Engine

syntax:
  content:
    CSharp: public class SimplificationOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferAliasToQualification
  qualifiedName:
    CSharp: PreferAliasToQualification
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 18
  summary: >+
    This option tells the simplification engine if the Qualified Name should be replaced by Alias

    if the user had initially not used the Alias

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferOmittingModuleNamesInQualification
  qualifiedName:
    CSharp: PreferOmittingModuleNamesInQualification
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 24
  summary: >+
    This option influences the name reduction of members of a module in VB. If set to true, the

    name reducer will e.g. reduce Namespace.Module.Member to Namespace.Member.

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferImplicitTypeInference
  qualifiedName:
    CSharp: PreferImplicitTypeInference
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 29
  summary: >+
    This option says that if we should simplify the Generic Name which has the type argument inferred

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferImplicitTypeInLocalDeclaration
  qualifiedName:
    CSharp: PreferImplicitTypeInLocalDeclaration
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 34
  summary: >+
    This option says if we should simplify the Explicit Type in Local Declarations

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: AllowSimplificationToGenericType
  qualifiedName:
    CSharp: AllowSimplificationToGenericType
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 39
  summary: >+
    This option says if we should simplify to NonGeneric Name rather than GenericName

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: AllowSimplificationToBaseType
  qualifiedName:
    CSharp: AllowSimplificationToBaseType
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 44
  summary: >+
    This option says if we should simplify from Derived types to Base types in Static Member Accesses

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: QualifyMemberAccessWithThisOrMe
  qualifiedName:
    CSharp: QualifyMemberAccessWithThisOrMe
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 49
  summary: >+
    This option says if we should simplify away the this. or Me. in member access expression

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInDeclaration
  qualifiedName:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInDeclaration
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 54
  summary: >+
    This option says if we should prefer keyword for Intrinsic Predefined Types in Declarations

- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  yaml: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  href: api\Microsoft.CodeAnalysis.Simplification.SimplificationOptions
  name:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  qualifiedName:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Simplification\SimplificationOption.cs
    startLine: 59
  summary: >+
    This option says if we should prefer keyword for Intrinsic Predefined Types in Member Access Expression

