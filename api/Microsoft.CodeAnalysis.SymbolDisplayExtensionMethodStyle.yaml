id: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
yaml: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.yaml
href: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
name:
  CSharp: SymbolDisplayExtensionMethodStyle
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayExtensionMethodStyle.cs
  startLine: 9
summary: >+
  Specifies how how to display extension methods.

syntax:
  content:
    CSharp: public enum SymbolDisplayExtensionMethodStyle
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
  name:
    CSharp: Default
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayExtensionMethodStyle.cs
    startLine: 14
  summary: >+
    Displays the extension method based on its [Microsoft.CodeAnalysis.MethodKind](#/api/Microsoft.CodeAnalysis.MethodKind).

  syntax:
    content:
      CSharp: Default = 0
- id: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
  name:
    CSharp: InstanceMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayExtensionMethodStyle.cs
    startLine: 20
  summary: >+
    Displays the extension method in the form of an instance method.

    For example, IEnumerable<TSource>.ElementAt<TSource>(int index).

  syntax:
    content:
      CSharp: InstanceMethod = 1
- id: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle
  name:
    CSharp: StaticMethod
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayExtensionMethodStyle.cs
    startLine: 26
  summary: >+
    Displays the extension method as a static method.

    For example, Enumerable.ElementAt<TSource>(this IEnumerable<TSource> source, int index).

  syntax:
    content:
      CSharp: StaticMethod = 2
