id: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
yaml: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.yaml
href: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
name:
  CSharp: SymbolDisplayGenericsOptions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayGenericsOptions.cs
  startLine: 9
summary: >+
  Specifies the options for how generics are displayed in the description of a symbol.

syntax:
  content:
    CSharp: public enum SymbolDisplayGenericsOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.None
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
  name:
    CSharp: None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.None
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayGenericsOptions.cs
    startLine: 15
  summary: >+
    Omits the type parameter list entirely.

  syntax:
    content:
      CSharp: None = 0
- id: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeParameters
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
  name:
    CSharp: IncludeTypeParameters
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeParameters
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayGenericsOptions.cs
    startLine: 21
  summary: >+
    Includes the type parameters.

    For example, "Foo<T>" in C# or "Foo(Of T)" in Visual Basic.

  syntax:
    content:
      CSharp: IncludeTypeParameters = 1 << 0
- id: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeConstraints
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
  name:
    CSharp: IncludeTypeConstraints
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeConstraints
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayGenericsOptions.cs
    startLine: 27
  summary: >+
    Includes type parameters and constraints.

    For example, "where T : new()" in C# or "Of T as New" in Visual Basic.

  syntax:
    content:
      CSharp: IncludeTypeConstraints = 1 << 1
- id: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeVariance
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions
  name:
    CSharp: IncludeVariance
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeVariance
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayGenericsOptions.cs
    startLine: 33
  summary: >+
    Includes in or out keywords before variant type parameters.

    For example, "Foo<out T>" in C# or (Foo Of Out T" in Visual Basic.

  syntax:
    content:
      CSharp: IncludeVariance = 1 << 2
