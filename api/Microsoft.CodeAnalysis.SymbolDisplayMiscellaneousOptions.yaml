id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
name:
  CSharp: SymbolDisplayMiscellaneousOptions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
  startLine: 9
summary: >+
  Specifies miscellaneous options about the format of symbol descriptions.

syntax:
  content:
    CSharp: public enum SymbolDisplayMiscellaneousOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 15
  summary: >+
    Specifies that no miscellaneous options should be applied.

  syntax:
    content:
      CSharp: None = 0
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseSpecialTypes
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: UseSpecialTypes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseSpecialTypes
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 22
  summary: >+
    Uses keywords for predefined types.

    For example, "int" instead of "System.Int32" in C#

    or "Integer" instead of "System.Integer" in Visual Basic.

  syntax:
    content:
      CSharp: UseSpecialTypes = 1 << 0
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: EscapeKeywordIdentifiers
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 29
  summary: >+
    Escapes identifiers that are also keywords.

    For example, "[true](#) " instead of "true" in C# or

    "[True]" instead of "True" in Visual Basic.

  syntax:
    content:
      CSharp: EscapeKeywordIdentifiers = 1 << 1
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseAsterisksInMultiDimensionalArrays
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: UseAsterisksInMultiDimensionalArrays
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseAsterisksInMultiDimensionalArrays
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 36
  summary: >+
    Displays asterisks between commas in multi-dimensional arrays.

    For example, "int[][*,*]" instead of "int[][,]" in C# or

    "Integer()(*,*)" instead of "Integer()(*,*) in Visual Basic.

  syntax:
    content:
      CSharp: UseAsterisksInMultiDimensionalArrays = 1 << 2
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseErrorTypeSymbolName
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: UseErrorTypeSymbolName
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseErrorTypeSymbolName
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 41
  summary: >+
    Displays "?" for erroneous types that lack names (perhaps due to faulty metadata).

  syntax:
    content:
      CSharp: UseErrorTypeSymbolName = 1 << 3
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.RemoveAttributeSuffix
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: RemoveAttributeSuffix
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.RemoveAttributeSuffix
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 50
  summary: >+
    Displays attributes names without the "Attribute" suffix, if possible.

  syntax:
    content:
      CSharp: RemoveAttributeSuffix = 1 << 4
- id: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.ExpandNullable
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions
  name:
    CSharp: ExpandNullable
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.ExpandNullable
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayMiscellaneousOptions.cs
    startLine: 56
  summary: >+
    Displays [System.Nullable`1](#) as a normal generic type, rather than with

    the special question mark syntax.

  syntax:
    content:
      CSharp: ExpandNullable = 1 << 5
