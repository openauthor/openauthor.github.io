id: Microsoft.CodeAnalysis.SymbolDisplayPart
yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
name:
  CSharp: SymbolDisplayPart
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
  startLine: 13
summary: >+
  A single element of a symbol description.  For example, a keyword, a punctuation character or

  a class name.

syntax:
  content:
    CSharp: public struct SymbolDisplayPart
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.Kind
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: Kind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.Kind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 25
  summary: >+
    Gets the kind of this display part.

  syntax:
    content:
      CSharp: public SymbolDisplayPartKind Kind
    parameters:
    - id: Kind
      type:
        id: Microsoft.CodeAnalysis.SymbolDisplayPartKind
        name: SymbolDisplayPartKind
        href: api/Microsoft.CodeAnalysis.SymbolDisplayPartKind
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.get_Kind
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: get_Kind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.get_Kind
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 25
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.Symbol
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: Symbol
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.Symbol
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 32
  summary: >+
    Gets the symbol associated with this display part, if there is one.

    For example, the [Microsoft.CodeAnalysis.ITypeSymbol](#/api/Microsoft.CodeAnalysis.ITypeSymbol) associated with a class name.

  syntax:
    content:
      CSharp: public ISymbol Symbol
    parameters:
    - id: Symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: api/Microsoft.CodeAnalysis.ISymbol
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.get_Symbol
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: get_Symbol
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.get_Symbol
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 32
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.#ctor(Microsoft.CodeAnalysis.SymbolDisplayPartKind,Microsoft.CodeAnalysis.ISymbol,System.String)
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: SymbolDisplayPart(Microsoft.CodeAnalysis.SymbolDisplayPartKind,Microsoft.CodeAnalysis.ISymbol,System.String)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.SymbolDisplayPart(Microsoft.CodeAnalysis.SymbolDisplayPartKind,Microsoft.CodeAnalysis.ISymbol,System.String)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 40
  summary: >+
    Construct a non-formattable [Microsoft.CodeAnalysis.SymbolDisplayPart](#/api/Microsoft.CodeAnalysis.SymbolDisplayPart) (i.e. with a fixed string value).

  syntax:
    content:
      CSharp: public SymbolDisplayPart(SymbolDisplayPartKind kind, ISymbol symbol, string text)
    parameters:
    - id: kind
      type:
        id: Microsoft.CodeAnalysis.SymbolDisplayPartKind
        name: SymbolDisplayPartKind
        href: api/Microsoft.CodeAnalysis.SymbolDisplayPartKind
      description: The kind of the display part.
    - id: symbol
      type:
        id: Microsoft.CodeAnalysis.ISymbol
        name: ISymbol
        href: api/Microsoft.CodeAnalysis.ISymbol
      description: An optional associated symbol.
    - id: text
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The fixed string value of the part.
- id: Microsoft.CodeAnalysis.SymbolDisplayPart.ToString
  yaml: api/Microsoft.CodeAnalysis.SymbolDisplayPart.yaml
  href: api/Microsoft.CodeAnalysis.SymbolDisplayPart
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SymbolDisplayPart.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/SymbolDisplay/SymbolDisplayPart.cs
    startLine: 60
  summary: >+
    Returns the string value of this symbol display part.

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
