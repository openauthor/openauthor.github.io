id: Microsoft.CodeAnalysis.SyntaxTrivia
yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
href: api/Microsoft.CodeAnalysis.SyntaxTrivia
name:
  CSharp: SyntaxTrivia
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SyntaxTrivia
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
  startLine: 17
summary: >+
  Represents a trivia in the syntax tree. This is the language agnostic equivalent of [Microsoft.CodeAnalysis.CSharp.SyntaxTrivia](#) and [Microsoft.CodeAnalysis.VisualBasic.SyntaxTrivia](#).

syntax:
  content:
    CSharp: public struct SyntaxTrivia
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SyntaxTrivia.RawKind
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: RawKind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.RawKind
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 40
  summary: >+
    An integer representing the language specific kind of this trivia.

  syntax:
    content:
      CSharp: public int RawKind
    parameters:
    - id: RawKind
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_RawKind
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_RawKind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_RawKind
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 42
- id: Microsoft.CodeAnalysis.SyntaxTrivia.Language
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.Language
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 53
  summary: >+
    The language name that this trivia is syntax of.

  syntax:
    content:
      CSharp: public string Language
    parameters:
    - id: Language
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_Language
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_Language
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_Language
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 55
- id: Microsoft.CodeAnalysis.SyntaxTrivia.Token
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: Token
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.Token
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 64
  summary: >+
    The parent token that contains this token in its LeadingTrivia or TrailingTrivia collection.

  syntax:
    content:
      CSharp: public SyntaxToken Token
    parameters:
    - id: Token
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: api/Microsoft.CodeAnalysis.SyntaxToken
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_Token
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_Token
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_Token
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 66
- id: Microsoft.CodeAnalysis.SyntaxTrivia.Span
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.Span
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 108
  summary: >+
    The absolute span of this trivia in characters. If this trivia is a structured trivia then the returned span

    will not include spans of any leading or trailing trivia present on the child non-terminal node of this

    trivia.

  syntax:
    content:
      CSharp: public TextSpan Span
    parameters:
    - id: Span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_Span
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_Span
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 110
- id: Microsoft.CodeAnalysis.SyntaxTrivia.SpanStart
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: SpanStart
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.SpanStart
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 124
  summary: >+
    Same as accessing [Microsoft.CodeAnalysis.Text.TextSpan.Start](#/api/Microsoft.CodeAnalysis.Text.TextSpan) on [Microsoft.CodeAnalysis.SyntaxTrivia.Span](#/api/Microsoft.CodeAnalysis.SyntaxTrivia).

  syntax:
    content:
      CSharp: public int SpanStart
    parameters:
    - id: SpanStart
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_SpanStart
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_SpanStart
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_SpanStart
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 126
- id: Microsoft.CodeAnalysis.SyntaxTrivia.FullSpan
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: FullSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.FullSpan
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 138
  summary: >+
    The absolute span of this trivia in characters. If this trivia is a structured trivia then the returned span

    will include spans of any leading or trailing trivia present on the child non-terminal node of this trivia.

  syntax:
    content:
      CSharp: public TextSpan FullSpan
    parameters:
    - id: FullSpan
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_FullSpan
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_FullSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_FullSpan
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 140
- id: Microsoft.CodeAnalysis.SyntaxTrivia.ContainsDiagnostics
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: ContainsDiagnostics
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.ContainsDiagnostics
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 148
  summary: >+
    Determines whether this trivia has any diagnostics on it. If this trivia is a structured trivia then the

    returned value will indicate whether this trivia or any of its descendant nodes, tokens or trivia have any

    diagnostics on them.

  syntax:
    content:
      CSharp: public bool ContainsDiagnostics
    parameters:
    - id: ContainsDiagnostics
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_ContainsDiagnostics
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_ContainsDiagnostics
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_ContainsDiagnostics
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 150
- id: Microsoft.CodeAnalysis.SyntaxTrivia.HasStructure
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: HasStructure
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.HasStructure
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 156
  summary: >+
    Determines whether this trivia is a structured trivia.

  syntax:
    content:
      CSharp: public bool HasStructure
    parameters:
    - id: HasStructure
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_HasStructure
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_HasStructure
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_HasStructure
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 158
- id: Microsoft.CodeAnalysis.SyntaxTrivia.IsPartOfStructuredTrivia
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: IsPartOfStructuredTrivia
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.IsPartOfStructuredTrivia
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 164
  summary: >+
    Determines whether this trivia is a descendant of a structured trivia.

  syntax:
    content:
      CSharp: public bool IsPartOfStructuredTrivia()
    parameters: []
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: HasAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 180
  summary: >+
    Determines where this trivia has annotations of the specified annotation kind.

  syntax:
    content:
      CSharp: public bool HasAnnotations(string annotationKind)
    parameters:
    - id: annotationKind
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String[])
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: HasAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 188
  summary: >+
    Determines where this trivia has any annotations of the specified annotation kinds.

  syntax:
    content:
      CSharp: public bool HasAnnotations(params string[] annotationKinds)
    parameters:
    - id: annotationKinds
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: HasAnnotation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 196
  summary: >+
    Determines whether this trivia has the specific annotation.

  syntax:
    content:
      CSharp: public bool HasAnnotation(SyntaxAnnotation annotation)
    parameters:
    - id: annotation
      type:
        id: Microsoft.CodeAnalysis.SyntaxAnnotation
        name: SyntaxAnnotation
        href: api/Microsoft.CodeAnalysis.SyntaxAnnotation
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 204
  summary: >+
    Get all the annotations of the specified annotation kind.

  syntax:
    content:
      CSharp: public IEnumerable<SyntaxAnnotation> GetAnnotations(string annotationKind)
    parameters:
    - id: annotationKind
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String[])
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 214
  summary: >+
    Get all the annotations of the specified annotation kinds.

  syntax:
    content:
      CSharp: public IEnumerable<SyntaxAnnotation> GetAnnotations(params string[] annotationKinds)
    parameters:
    - id: annotationKinds
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.SyntaxTrivia.IsDirective
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: IsDirective
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.IsDirective
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 224
  summary: >+
    Determines whether this trivia represents a preprocessor directive.

  syntax:
    content:
      CSharp: public bool IsDirective
    parameters:
    - id: IsDirective
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_IsDirective
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_IsDirective
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_IsDirective
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 226
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetStructure
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetStructure
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetStructure
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 234
  summary: >+
    Returns the child non-terminal node representing the syntax tree structure under this structured trivia.

  syntax:
    content:
      CSharp: public SyntaxNode GetStructure()
    parameters: []
    return:
      id: SyntaxNode
      description: >-
        The child non-terminal node representing the syntax tree structure under this structured

            trivia.
- id: Microsoft.CodeAnalysis.SyntaxTrivia.ToString
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 245
  summary: >+
    Returns the string representation of this trivia. If this trivia is structured trivia then the returned string

    will not include any leading or trailing trivia present on the StructuredTriviaSyntax node of this trivia.

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      description: The string representation of this trivia.
- id: Microsoft.CodeAnalysis.SyntaxTrivia.ToFullString
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: ToFullString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.ToFullString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 256
  summary: >+
    Returns the full string representation of this trivia. If this trivia is structured trivia then the returned string will

    include any leading or trailing trivia present on the StructuredTriviaSyntax node of this trivia.

  syntax:
    content:
      CSharp: public string ToFullString()
    parameters: []
    return:
      id: String
      description: The full string representation of this trivia.
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WriteTo(System.IO.TextWriter)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WriteTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WriteTo(System.IO.TextWriter)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 264
  summary: >+
    Writes the full text of this trivia to the specified TextWriter.

  syntax:
    content:
      CSharp: public void WriteTo(System.IO.TextWriter writer)
    parameters:
    - id: writer
      type:
        id: System.IO.TextWriter
        name: System.IO.TextWriter
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.SyntaxTrivia.op_Equality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.op_Equality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 275
  summary: >+
    Determines whether two [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia)s are equal.

- id: Microsoft.CodeAnalysis.SyntaxTrivia.op_Inequality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.op_Inequality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 283
  summary: >+
    Determines whether two [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia)s are unequal.

- id: Microsoft.CodeAnalysis.SyntaxTrivia.Equals(Microsoft.CodeAnalysis.SyntaxTrivia)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.Equals(Microsoft.CodeAnalysis.SyntaxTrivia)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 292
  summary: >+
    Determines whether the supplied [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia) is equal to this

    [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia).

  syntax:
    content:
      CSharp: public bool Equals(SyntaxTrivia other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: api/Microsoft.CodeAnalysis.SyntaxTrivia
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 301
  summary: >+
    Determines whether the supplied [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia) is equal to this

    [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia).

  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 309
  summary: >+
    Serves as hash function for [Microsoft.CodeAnalysis.SyntaxTrivia](#/api/Microsoft.CodeAnalysis.SyntaxTrivia).

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WithAdditionalAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 318
  summary: >+
    Creates a new SyntaxTrivia with the specified annotations.

  syntax:
    content:
      CSharp: public SyntaxTrivia WithAdditionalAnnotations(params SyntaxAnnotation[] annotations)
    parameters:
    - id: annotations
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WithAdditionalAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 326
  summary: >+
    Creates a new SyntaxTrivia with the specified annotations.

  syntax:
    content:
      CSharp: public SyntaxTrivia WithAdditionalAnnotations(IEnumerable<SyntaxAnnotation> annotations)
    parameters:
    - id: annotations
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        isExternal: true
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 347
  summary: >+
    Creates a new SyntaxTrivia without the specified annotations.

  syntax:
    content:
      CSharp: public SyntaxTrivia WithoutAnnotations(params SyntaxAnnotation[] annotations)
    parameters:
    - id: annotations
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 355
  summary: >+
    Creates a new SyntaxTrivia without the specified annotations.

  syntax:
    content:
      CSharp: public SyntaxTrivia WithoutAnnotations(IEnumerable<SyntaxAnnotation> annotations)
    parameters:
    - id: annotations
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation}
        isExternal: true
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.String)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: WithoutAnnotations
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 376
  summary: >+
    Creates a new SyntaxTrivia without annotations of the specified kind.

  syntax:
    content:
      CSharp: public SyntaxTrivia WithoutAnnotations(string annotationKind)
    parameters:
    - id: annotationKind
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxTrivia)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: CopyAnnotationsTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxTrivia)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 396
  summary: >+
    Copies all SyntaxAnnotations, if any, from this SyntaxTrivia instance and attaches them to a new instance based on .

  syntax:
    content:
      CSharp: public SyntaxTrivia CopyAnnotationsTo(SyntaxTrivia trivia)
    parameters:
    - id: trivia
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: api/Microsoft.CodeAnalysis.SyntaxTrivia
    return:
      id: SyntaxTrivia
- id: Microsoft.CodeAnalysis.SyntaxTrivia.SyntaxTree
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: SyntaxTree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.SyntaxTree
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 424
  summary: >+
    SyntaxTree which contains current SyntaxTrivia.

  syntax:
    content:
      CSharp: public SyntaxTree SyntaxTree
    parameters:
    - id: SyntaxTree
      type:
        id: Microsoft.CodeAnalysis.SyntaxTree
        name: SyntaxTree
        href: api/Microsoft.CodeAnalysis.SyntaxTree
- id: Microsoft.CodeAnalysis.SyntaxTrivia.get_SyntaxTree
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: get_SyntaxTree
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.get_SyntaxTree
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 426
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetLocation
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetLocation
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetLocation
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 435
  summary: >+
    Get the location of this trivia.

  syntax:
    content:
      CSharp: public Location GetLocation()
    parameters: []
    return:
      id: Location
- id: Microsoft.CodeAnalysis.SyntaxTrivia.GetDiagnostics
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: GetDiagnostics
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.GetDiagnostics
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 445
  summary: >+
    Gets a list of all the diagnostics associated with this trivia.

    This method does not filter diagnostics based on #pragmas and compiler options

    like nowarn, warnaserror etc.

  syntax:
    content:
      CSharp: public IEnumerable<Diagnostic> GetDiagnostics()
    parameters: []
    return:
      id: IEnumerable
- id: Microsoft.CodeAnalysis.SyntaxTrivia.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTrivia)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTrivia.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTrivia
  name:
    CSharp: IsEquivalentTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTrivia.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTrivia)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTrivia.cs
    startLine: 453
  summary: >+
    Determines if this trivia is equivalent to the specified trivia.

  syntax:
    content:
      CSharp: public bool IsEquivalentTo(SyntaxTrivia trivia)
    parameters:
    - id: trivia
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: api/Microsoft.CodeAnalysis.SyntaxTrivia
    return:
      id: Boolean
