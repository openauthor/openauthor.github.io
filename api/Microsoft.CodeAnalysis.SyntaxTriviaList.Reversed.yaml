id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
name:
  CSharp: Reversed
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
  startLine: 16
summary: >+
  reversed enumerable

syntax:
  content:
    CSharp: public struct Reversed
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.#ctor(Microsoft.CodeAnalysis.SyntaxTriviaList)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  name:
    CSharp: Reversed(Microsoft.CodeAnalysis.SyntaxTriviaList)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Reversed(Microsoft.CodeAnalysis.SyntaxTriviaList)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
    startLine: 20
  syntax:
    content:
      CSharp: public Reversed(SyntaxTriviaList list)
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: api/Microsoft.CodeAnalysis.SyntaxTriviaList
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetEnumerator
  yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  name:
    CSharp: GetEnumerator
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetEnumerator
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
    startLine: 25
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
    startLine: 50
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
    startLine: 55
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed)
  yaml: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Syntax/SyntaxTriviaList.Reversed.cs
    startLine: 60
  syntax:
    content:
      CSharp: public bool Equals(Reversed other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
        name: Reversed
        href: api/Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed
    return:
      id: Boolean
