id: Microsoft.CodeAnalysis.SyntaxWalkerDepth
yaml: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
href: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth
name:
  CSharp: SyntaxWalkerDepth
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.SyntaxWalkerDepth
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Syntax/SyntaxWalkerDepth.cs
  startLine: 9
summary: >+
  enum to specify how deep walker should decent into

syntax:
  content:
    CSharp: public enum SyntaxWalkerDepth
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node
  yaml: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Node
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/SyntaxWalkerDepth.cs
    startLine: 14
  summary: >+
    descend into only nodes

  syntax:
    content:
      CSharp: Node = 0
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Token
  yaml: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Token
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Token
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/SyntaxWalkerDepth.cs
    startLine: 19
  summary: >+
    descend into nodes and tokens

  syntax:
    content:
      CSharp: Token = 1
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Trivia
  yaml: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: Trivia
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxWalkerDepth.Trivia
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/SyntaxWalkerDepth.cs
    startLine: 24
  summary: >+
    descend into nodes, tokens and trivia

  syntax:
    content:
      CSharp: Trivia = 2
- id: Microsoft.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia
  yaml: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth.yaml
  href: api/Microsoft.CodeAnalysis.SyntaxWalkerDepth
  name:
    CSharp: StructuredTrivia
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Syntax/SyntaxWalkerDepth.cs
    startLine: 29
  summary: >+
    descend into everything

  syntax:
    content:
      CSharp: StructuredTrivia = 3
