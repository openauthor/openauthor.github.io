id: Microsoft.CodeAnalysis.Text.LinePositionSpan
yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
name:
  CSharp: LinePositionSpan
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
  startLine: 10
summary: >+
  Immutable span represented by a pair of line number and index within the line.

syntax:
  content:
    CSharp: public struct LinePositionSpan
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.#ctor(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: LinePositionSpan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.LinePositionSpan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 21
  summary: >+
    Creates [Microsoft.CodeAnalysis.Text.LinePositionSpan](#/api/Microsoft.CodeAnalysis.Text.LinePositionSpan).

  syntax:
    content:
      CSharp: public LinePositionSpan(LinePosition start, LinePosition end)
    parameters:
    - id: start
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
      description: Start position.
    - id: end
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
      description: End position.
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.Start
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.Start
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 35
  summary: >+
    Gets the start position of the span.

  syntax:
    content:
      CSharp: public LinePosition Start
    parameters:
    - id: Start
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.get_Start
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: get_Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.get_Start
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 37
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.End
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.End
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 43
  summary: >+
    Gets the end position of the span.

  syntax:
    content:
      CSharp: public LinePosition End
    parameters:
    - id: End
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.get_End
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: get_End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.get_End
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 45
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 48
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(Microsoft.CodeAnalysis.Text.LinePositionSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 53
  syntax:
    content:
      CSharp: public bool Equals(LinePositionSpan other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.LinePositionSpan
        name: LinePositionSpan
        href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 59
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Equality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Equality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 64
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Inequality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Inequality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 69
- id: Microsoft.CodeAnalysis.Text.LinePositionSpan.ToString
  yaml: api/Microsoft.CodeAnalysis.Text.LinePositionSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.LinePositionSpan.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/LinePositionSpan.cs
    startLine: 78
  summary: >+
    Provides a string representation for [Microsoft.CodeAnalysis.Text.LinePositionSpan](#/api/Microsoft.CodeAnalysis.Text.LinePositionSpan).

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
