id: Microsoft.CodeAnalysis.Text.SourceText
yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
href: api/Microsoft.CodeAnalysis.Text.SourceText
name:
  CSharp: SourceText
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.SourceText
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Text/SourceText.cs
  startLine: 18
summary: >+
  An abstraction of source text.

syntax:
  content:
    CSharp: public abstract class SourceText
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.SourceText.From(System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: From
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.From(System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 67
  summary: >+
    Constructs a [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) from text in a string.

  syntax:
    content:
      CSharp: public static SourceText From(string text, Encoding encoding = null, SourceHashAlgorithm checksumAlgorithm = SourceHashAlgorithm.Sha1)
    parameters:
    - id: text
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: Text.
    - id: encoding
      type:
        id: System.Text.Encoding
        name: System.Text.Encoding
        isExternal: true
      description: >-
        Encoding of the file that the  was read from or is going to be saved to.

            null if the encoding is unspecified.

            If the encoding is not specified the resulting [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) isn't debuggable.

            If an encoding-less [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) is written to a file a [System.Text.Encoding.UTF8](#) shall be used as a default.
    - id: checksumAlgorithm
      type:
        id: Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
        name: SourceHashAlgorithm
        href: api/Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
      description: Hash algorithm to use to calculate checksum of the text that's saved to PDB.
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.Stream,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: From
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.Stream,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 95
  summary: >+
    Constructs a [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) from stream content.

  syntax:
    content:
      CSharp: public static SourceText From(Stream stream, Encoding encoding = null, SourceHashAlgorithm checksumAlgorithm = SourceHashAlgorithm.Sha1)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: System.IO.Stream
        isExternal: true
      description: Stream.
    - id: encoding
      type:
        id: System.Text.Encoding
        name: System.Text.Encoding
        isExternal: true
      description: >-
        Data encoding to use if the stream doesn't start with Byte Order Mark specifying the encoding.

            [System.Text.Encoding.UTF8](#) if not specified.
    - id: checksumAlgorithm
      type:
        id: Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
        name: SourceHashAlgorithm
        href: api/Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
      description: Hash algorithm to use to calculate checksum of the text that's saved to PDB.
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.ChecksumAlgorithm
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: ChecksumAlgorithm
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.ChecksumAlgorithm
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 127
  summary: >+
    Hash algorithm to use to calculate checksum of the text that's saved to PDB.

  syntax:
    content:
      CSharp: public SourceHashAlgorithm ChecksumAlgorithm
    parameters:
    - id: ChecksumAlgorithm
      type:
        id: Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
        name: SourceHashAlgorithm
        href: api/Microsoft.CodeAnalysis.Text.SourceHashAlgorithm
- id: Microsoft.CodeAnalysis.Text.SourceText.get_ChecksumAlgorithm
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_ChecksumAlgorithm
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_ChecksumAlgorithm
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 129
- id: Microsoft.CodeAnalysis.Text.SourceText.Encoding
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Encoding
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Encoding
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 140
  summary: >+
    Encoding of the file that the text was read from or is going to be saved to.

    null if the encoding is unspecified.

  syntax:
    content:
      CSharp: public abstract Encoding Encoding
    parameters:
    - id: Encoding
      type:
        id: System.Text.Encoding
        name: System.Text.Encoding
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.SourceText.get_Encoding
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_Encoding
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_Encoding
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 140
- id: Microsoft.CodeAnalysis.Text.SourceText.Length
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Length
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Length
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 145
  summary: >+
    The length of the text in characters.

  syntax:
    content:
      CSharp: public abstract int Length
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.SourceText.get_Length
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_Length
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_Length
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 145
- id: Microsoft.CodeAnalysis.Text.SourceText.Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Item(System.Int32)
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 154
  summary: >+
    Returns a character at given position.

- id: Microsoft.CodeAnalysis.Text.SourceText.get_Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_Item(System.Int32)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 154
- id: Microsoft.CodeAnalysis.Text.SourceText.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: CopyTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 159
  summary: >+
    Copy a range of characters from this SourceText to a destination array.

  syntax:
    content:
      CSharp: public abstract void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count);
    parameters:
    - id: sourceIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: destination
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    - id: destinationIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Text.SourceText.Container
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Container
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Container
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 164
  summary: >+
    The container of this [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText).

  syntax:
    content:
      CSharp: public virtual SourceTextContainer Container
    parameters:
    - id: Container
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: api/Microsoft.CodeAnalysis.Text.SourceTextContainer
- id: Microsoft.CodeAnalysis.Text.SourceText.get_Container
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_Container
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_Container
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 166
- id: Microsoft.CodeAnalysis.Text.SourceText.GetSubText(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: GetSubText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.GetSubText(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 188
  summary: >+
    Gets a [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) that contains the characters in the specified span of this text.

  syntax:
    content:
      CSharp: public virtual SourceText GetSubText(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.GetSubText(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: GetSubText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.GetSubText(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 210
  summary: >+
    Returns a [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) that has the contents of this text including and after the start position.

  syntax:
    content:
      CSharp: public SourceText GetSubText(int start)
    parameters:
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Write
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 230
  summary: >+
    Write this [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText) to a text writer.

  syntax:
    content:
      CSharp: public void Write(TextWriter textWriter, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: textWriter
      type:
        id: System.IO.TextWriter
        name: System.IO.TextWriter
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Write
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 238
  summary: >+
    Write a span of text to a text writer.

  syntax:
    content:
      CSharp: public virtual void Write(TextWriter writer, TextSpan span, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: writer
      type:
        id: System.IO.TextWriter
        name: System.IO.TextWriter
        isExternal: true
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Text.SourceText.ToString
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 295
  summary: >+
    Provides a string representation of the SourceText.

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.Text.SourceText.ToString(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.ToString(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 304
  summary: >+
    Gets a string containing the characters in specified span.

  syntax:
    content:
      CSharp: public virtual string ToString(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: String
- id: Microsoft.CodeAnalysis.Text.SourceText.WithChanges(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChange})
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: WithChanges
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.WithChanges(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChange})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 332
  summary: >+
    Constructs a new SourceText from this text with the specified changes.

  syntax:
    content:
      CSharp: public virtual SourceText WithChanges(IEnumerable<TextChange> changes)
    parameters:
    - id: changes
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChange}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChange}
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.WithChanges(Microsoft.CodeAnalysis.Text.TextChange[])
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: WithChanges
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.WithChanges(Microsoft.CodeAnalysis.Text.TextChange[])
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 386
  summary: >+
    Constructs a new SourceText from this text with the specified changes.

  syntax:
    content:
      CSharp: public SourceText WithChanges(params TextChange[] changes)
    parameters:
    - id: changes
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.Replace(Microsoft.CodeAnalysis.Text.TextSpan,System.String)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Replace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Replace(Microsoft.CodeAnalysis.Text.TextSpan,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 394
  summary: >+
    Returns a new SourceText with the specified span of characters replaced by the new text.

  syntax:
    content:
      CSharp: public SourceText Replace(TextSpan span, string newText)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    - id: newText
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.Replace(System.Int32,System.Int32,System.String)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Replace
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Replace(System.Int32,System.Int32,System.String)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 402
  summary: >+
    Returns a new SourceText with the specified range of characters replaced by the new text.

  syntax:
    content:
      CSharp: public SourceText Replace(int start, int length, string newText)
    parameters:
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: newText
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: SourceText
- id: Microsoft.CodeAnalysis.Text.SourceText.GetChangeRanges(Microsoft.CodeAnalysis.Text.SourceText)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: GetChangeRanges
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.GetChangeRanges(Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 412
  summary: >+
    Gets the set of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange) that describe how the text changed

    between this text an older version. This may be multiple detailed changes

    or a single change encompassing the entire text.

  syntax:
    content:
      CSharp: public virtual IReadOnlyList<TextChangeRange> GetChangeRanges(SourceText oldText)
    parameters:
    - id: oldText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
    return:
      id: IReadOnlyList
- id: Microsoft.CodeAnalysis.Text.SourceText.GetTextChanges(Microsoft.CodeAnalysis.Text.SourceText)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: GetTextChanges
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.GetTextChanges(Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 434
  summary: >+
    Gets the set of [Microsoft.CodeAnalysis.Text.TextChange](#/api/Microsoft.CodeAnalysis.Text.TextChange) that describe how the text changed

    between this text and an older version. This may be multiple detailed changes

    or a single change encompassing the entire text.

  syntax:
    content:
      CSharp: public virtual IReadOnlyList<TextChange> GetTextChanges(SourceText oldText)
    parameters:
    - id: oldText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
    return:
      id: IReadOnlyList
- id: Microsoft.CodeAnalysis.Text.SourceText.Lines
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: Lines
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.Lines
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 472
  summary: >+
    The collection of individual text lines.

  syntax:
    content:
      CSharp: public virtual TextLineCollection Lines
    parameters:
    - id: Lines
      type:
        id: Microsoft.CodeAnalysis.Text.TextLineCollection
        name: TextLineCollection
        href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
- id: Microsoft.CodeAnalysis.Text.SourceText.get_Lines
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: get_Lines
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.get_Lines
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 474
- id: Microsoft.CodeAnalysis.Text.SourceText.ContentEquals(Microsoft.CodeAnalysis.Text.SourceText)
  yaml: api/Microsoft.CodeAnalysis.Text.SourceText.yaml
  href: api/Microsoft.CodeAnalysis.Text.SourceText
  name:
    CSharp: ContentEquals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.SourceText.ContentEquals(Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/SourceText.cs
    startLine: 623
  summary: >+
    Compares the content with content of another [Microsoft.CodeAnalysis.Text.SourceText](#/api/Microsoft.CodeAnalysis.Text.SourceText).

  syntax:
    content:
      CSharp: public bool ContentEquals(SourceText other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
    return:
      id: Boolean
