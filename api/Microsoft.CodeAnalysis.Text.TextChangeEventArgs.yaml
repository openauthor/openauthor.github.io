id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs
yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
name:
  CSharp: TextChangeEventArgs
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
  startLine: 13
summary: >+
  Represents state for a TextChanged event.

syntax:
  content:
    CSharp: public class TextChangeEventArgs
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.EventArgs
  name: System.EventArgs
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.#ctor(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 21
  summary: >+
    Initializes an instance of [Microsoft.CodeAnalysis.Text.TextChangeEventArgs](#/api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs).

  syntax:
    content:
      CSharp: public TextChangeEventArgs(SourceText oldText, SourceText newText, IEnumerable<TextChangeRange> changes)
    parameters:
    - id: oldText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
      description: The text before the change.
    - id: newText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
      description: The text after the change.
    - id: changes
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange}
        isExternal: true
      description: A non-empty set of ranges for the change.
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.#ctor(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextChangeRange[])
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextChangeRange[])
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.TextChangeEventArgs(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextChangeRange[])
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 39
  summary: >+
    Initializes an instance of [Microsoft.CodeAnalysis.Text.TextChangeEventArgs](#/api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs).

  syntax:
    content:
      CSharp: 'public TextChangeEventArgs(SourceText oldText, SourceText newText, params TextChangeRange[] changes): this (oldText, newText, (IEnumerable<TextChangeRange>)changes)'
    parameters:
    - id: oldText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
      description: The text before the change.
    - id: newText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
      description: The text after the change.
    - id: changes
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: A non-empty set of ranges for the change.
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.OldText
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: OldText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.OldText
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 47
  summary: >+
    Gets the text before the change.

  syntax:
    content:
      CSharp: public SourceText OldText
    parameters:
    - id: OldText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_OldText
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: get_OldText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_OldText
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 47
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.NewText
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: NewText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.NewText
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 52
  summary: >+
    Gets the text after the change.

  syntax:
    content:
      CSharp: public SourceText NewText
    parameters:
    - id: NewText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_NewText
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: get_NewText
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_NewText
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 52
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.Changes
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: Changes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.Changes
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 57
  summary: >+
    Gets the set of ranges for the change.

  syntax:
    content:
      CSharp: public IReadOnlyList<TextChangeRange> Changes
    parameters:
    - id: Changes
      type:
        id: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.Text.TextChangeRange}
        name: System.Collections.Generic.IReadOnlyList{Microsoft.CodeAnalysis.Text.TextChangeRange}
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_Changes
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeEventArgs
  name:
    CSharp: get_Changes
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeEventArgs.get_Changes
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextChangeEventArgs.cs
    startLine: 57
