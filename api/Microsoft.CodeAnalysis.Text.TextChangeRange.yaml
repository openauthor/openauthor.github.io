id: Microsoft.CodeAnalysis.Text.TextChangeRange
yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
name:
  CSharp: TextChangeRange
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
  startLine: 12
summary: >+
  Represents the change to a span of text.

syntax:
  content:
    CSharp: public struct TextChangeRange
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.Span
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.Span
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 17
  summary: >+
    The span of text before the edit which is being changed

  syntax:
    content:
      CSharp: public TextSpan Span
    parameters:
    - id: Span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.get_Span
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: get_Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.get_Span
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 17
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.NewLength
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: NewLength
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.NewLength
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 22
  summary: >+
    Width of the span after the edit.  A 0 here would represent a delete

  syntax:
    content:
      CSharp: public int NewLength
    parameters:
    - id: NewLength
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.get_NewLength
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: get_NewLength
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.get_NewLength
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 22
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.#ctor(Microsoft.CodeAnalysis.Text.TextSpan,System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: TextChangeRange(Microsoft.CodeAnalysis.Text.TextSpan,System.Int32)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.TextChangeRange(Microsoft.CodeAnalysis.Text.TextSpan,System.Int32)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 29
  summary: >+
    Initializes a new instance of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange).

  syntax:
    content:
      CSharp: 'public TextChangeRange(TextSpan span, int newLength): this ()'
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    - id: newLength
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(Microsoft.CodeAnalysis.Text.TextChangeRange)
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(Microsoft.CodeAnalysis.Text.TextChangeRange)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 44
  summary: >+
    Compares current instance of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange) to another.

  syntax:
    content:
      CSharp: public bool Equals(TextChangeRange other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.TextChangeRange
        name: TextChangeRange
        href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 54
  summary: >+
    Compares current instance of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange) to another.

  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 63
  summary: >+
    Provides hash code for current instnce of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange).

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.TextChangeRange.op_Equality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.op_Equality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 71
  summary: >+
    Determines if two instances of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange) are same.

- id: Microsoft.CodeAnalysis.Text.TextChangeRange.op_Inequality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.op_Inequality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 79
  summary: >+
    Determines if two instances of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange) are different.

- id: Microsoft.CodeAnalysis.Text.TextChangeRange.NoChanges
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: NoChanges
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.NoChanges
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 87
  summary: >+
    An empty set of changes.

- id: Microsoft.CodeAnalysis.Text.TextChangeRange.Collapse(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})
  yaml: api/Microsoft.CodeAnalysis.Text.TextChangeRange.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextChangeRange
  name:
    CSharp: Collapse
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextChangeRange.Collapse(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextChangeRange.cs
    startLine: 93
  summary: >+
    Collapse a set of [Microsoft.CodeAnalysis.Text.TextChangeRange](#/api/Microsoft.CodeAnalysis.Text.TextChangeRange)s into a single encompassing range.  If

    the set of ranges provided is empty, an empty range is returned.

  syntax:
    content:
      CSharp: public static TextChangeRange Collapse(IEnumerable<TextChangeRange> changes)
    parameters:
    - id: changes
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange}
        isExternal: true
    return:
      id: TextChangeRange
