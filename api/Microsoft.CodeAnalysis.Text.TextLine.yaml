id: Microsoft.CodeAnalysis.Text.TextLine
yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
href: api/Microsoft.CodeAnalysis.Text.TextLine
name:
  CSharp: TextLine
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.TextLine
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Text/TextLine.cs
  startLine: 11
summary: >+
  Information about the character boundaries of a single line of text.

syntax:
  content:
    CSharp: public struct TextLine
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.TextLine.FromSpan(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: FromSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.FromSpan(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 31
  summary: >+
    Creates a [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine) instance.

  syntax:
    content:
      CSharp: public static TextLine FromSpan(SourceText text, TextSpan span)
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
      description: The source text.
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span of the line.
    return:
      id: TextLine
      description: An instance of [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine).
- id: Microsoft.CodeAnalysis.Text.TextLine.Text
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: Text
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.Text
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 85
  summary: >+
    Gets the source text.

  syntax:
    content:
      CSharp: public SourceText Text
    parameters:
    - id: Text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: api/Microsoft.CodeAnalysis.Text.SourceText
- id: Microsoft.CodeAnalysis.Text.TextLine.get_Text
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_Text
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_Text
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 87
- id: Microsoft.CodeAnalysis.Text.TextLine.LineNumber
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: LineNumber
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.LineNumber
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 93
  summary: >+
    Gets the zero-based line number.

  syntax:
    content:
      CSharp: public int LineNumber
    parameters:
    - id: LineNumber
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextLine.get_LineNumber
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_LineNumber
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_LineNumber
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 95
- id: Microsoft.CodeAnalysis.Text.TextLine.Start
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.Start
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 111
  summary: >+
    Gets the start position of the line.

  syntax:
    content:
      CSharp: public int Start
    parameters:
    - id: Start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextLine.get_Start
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_Start
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 113
- id: Microsoft.CodeAnalysis.Text.TextLine.End
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.End
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 119
  summary: >+
    Gets the end position of the line not including the line break.

  syntax:
    content:
      CSharp: public int End
    parameters:
    - id: End
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextLine.get_End
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_End
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 121
- id: Microsoft.CodeAnalysis.Text.TextLine.EndIncludingLineBreak
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: EndIncludingLineBreak
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.EndIncludingLineBreak
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 145
  summary: >+
    Gets the end position of the line including the line break.

  syntax:
    content:
      CSharp: public int EndIncludingLineBreak
    parameters:
    - id: EndIncludingLineBreak
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextLine.get_EndIncludingLineBreak
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_EndIncludingLineBreak
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_EndIncludingLineBreak
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 147
- id: Microsoft.CodeAnalysis.Text.TextLine.Span
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.Span
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 153
  summary: >+
    Gets the line span not including the line break.

  syntax:
    content:
      CSharp: public TextSpan Span
    parameters:
    - id: Span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.Text.TextLine.get_Span
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_Span
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_Span
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 155
- id: Microsoft.CodeAnalysis.Text.TextLine.SpanIncludingLineBreak
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: SpanIncludingLineBreak
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.SpanIncludingLineBreak
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 161
  summary: >+
    Gets the line span including the line break.

  syntax:
    content:
      CSharp: public TextSpan SpanIncludingLineBreak
    parameters:
    - id: SpanIncludingLineBreak
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
- id: Microsoft.CodeAnalysis.Text.TextLine.get_SpanIncludingLineBreak
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: get_SpanIncludingLineBreak
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.get_SpanIncludingLineBreak
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 163
- id: Microsoft.CodeAnalysis.Text.TextLine.ToString
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 166
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.Text.TextLine.op_Equality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.op_Equality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 178
- id: Microsoft.CodeAnalysis.Text.TextLine.op_Inequality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.op_Inequality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 183
- id: Microsoft.CodeAnalysis.Text.TextLine.Equals(Microsoft.CodeAnalysis.Text.TextLine)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.Equals(Microsoft.CodeAnalysis.Text.TextLine)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 188
  syntax:
    content:
      CSharp: public bool Equals(TextLine other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.TextLine
        name: TextLine
        href: api/Microsoft.CodeAnalysis.Text.TextLine
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextLine.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 195
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextLine.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Text.TextLine.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLine
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLine.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextLine.cs
    startLine: 205
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
