id: Microsoft.CodeAnalysis.Text.TextLineCollection
yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
name:
  CSharp: TextLineCollection
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
  startLine: 13
summary: >+
  Abstract base class for [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine) collections.

syntax:
  content:
    CSharp: public abstract class TextLineCollection
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.Count
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: Count
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.Count
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 18
  summary: >+
    The count of [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine) items in the collection

  syntax:
    content:
      CSharp: public abstract int Count
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.get_Count
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: get_Count
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.get_Count
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 18
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.Item(System.Int32)
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 23
  summary: >+
    Gets the [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine) item at the specified index.

- id: Microsoft.CodeAnalysis.Text.TextLineCollection.get_Item(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: get_Item
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.get_Item(System.Int32)
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 23
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.IndexOf(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: IndexOf
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.IndexOf(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 28
  summary: >+
    The index of the TextLine that encompasses the character position.

  syntax:
    content:
      CSharp: public abstract int IndexOf(int position);
    parameters:
    - id: position
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLineFromPosition(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetLineFromPosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLineFromPosition(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 35
  summary: >+
    Gets a [Microsoft.CodeAnalysis.Text.TextLine](#/api/Microsoft.CodeAnalysis.Text.TextLine) that encompasses the character position.

  syntax:
    content:
      CSharp: public virtual TextLine GetLineFromPosition(int position)
    parameters:
    - id: position
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: TextLine
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePosition(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetLinePosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePosition(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 43
  summary: >+
    Gets a [Microsoft.CodeAnalysis.Text.LinePosition](#/api/Microsoft.CodeAnalysis.Text.LinePosition) corresponding to a character position.

  syntax:
    content:
      CSharp: public virtual LinePosition GetLinePosition(int position)
    parameters:
    - id: position
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: LinePosition
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePositionSpan(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetLinePositionSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePositionSpan(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 52
  summary: >+
    Convert a [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) to a [Microsoft.CodeAnalysis.Text.LinePositionSpan](#/api/Microsoft.CodeAnalysis.Text.LinePositionSpan).

  syntax:
    content:
      CSharp: public LinePositionSpan GetLinePositionSpan(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: LinePositionSpan
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(Microsoft.CodeAnalysis.Text.LinePosition)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetPosition
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(Microsoft.CodeAnalysis.Text.LinePosition)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 60
  summary: >+
    Convert a [Microsoft.CodeAnalysis.Text.LinePosition](#/api/Microsoft.CodeAnalysis.Text.LinePosition) to a position.

  syntax:
    content:
      CSharp: public int GetPosition(LinePosition position)
    parameters:
    - id: position
      type:
        id: Microsoft.CodeAnalysis.Text.LinePosition
        name: LinePosition
        href: api/Microsoft.CodeAnalysis.Text.LinePosition
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetTextSpan(Microsoft.CodeAnalysis.Text.LinePositionSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetTextSpan
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetTextSpan(Microsoft.CodeAnalysis.Text.LinePositionSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 68
  summary: >+
    Convert a [Microsoft.CodeAnalysis.Text.LinePositionSpan](#/api/Microsoft.CodeAnalysis.Text.LinePositionSpan) to [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan).

  syntax:
    content:
      CSharp: public TextSpan GetTextSpan(LinePositionSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.LinePositionSpan
        name: LinePositionSpan
        href: api/Microsoft.CodeAnalysis.Text.LinePositionSpan
    return:
      id: TextSpan
- id: Microsoft.CodeAnalysis.Text.TextLineCollection.GetEnumerator
  yaml: api/Microsoft.CodeAnalysis.Text.TextLineCollection.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextLineCollection
  name:
    CSharp: GetEnumerator
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextLineCollection.GetEnumerator
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Text/TextLineCollection.cs
    startLine: 73
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
