id: Microsoft.CodeAnalysis.Text.TextSpan
yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
href: api/Microsoft.CodeAnalysis.Text.TextSpan
name:
  CSharp: TextSpan
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Text.TextSpan
type: Struct
source:
  remote:
    branch: master
    repo: https://github.com/dotnet/roslyn.git
    local: D:/Repo/RoslynGit/
    sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
  path: src/Compilers/Core/Portable/Text/TextSpan.cs
  startLine: 11
summary: >+
  Immutable abstract representation of a span of text.  For example, in an error diagnostic that reports a

  location, it could come from a parsed string, text from a tool editor buffer, etc.

syntax:
  content:
    CSharp: public struct TextSpan
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Text.TextSpan.#ctor(System.Int32,System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: TextSpan(System.Int32,System.Int32)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.TextSpan(System.Int32,System.Int32)
  type: Constructor
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 20
  summary: >+
    Creates a TextSpan instance beginning with the position Start and having the Length

    specified with .

  syntax:
    content:
      CSharp: public TextSpan(int start, int length)
    parameters:
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextSpan.Start
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Start
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 39
  summary: >+
    Start point of the Span.

  syntax:
    content:
      CSharp: public int Start
    parameters:
    - id: Start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextSpan.get_Start
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: get_Start
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.get_Start
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 41
- id: Microsoft.CodeAnalysis.Text.TextSpan.End
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.End
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 50
  summary: >+
    End of the span.

  syntax:
    content:
      CSharp: public int End
    parameters:
    - id: End
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextSpan.get_End
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: get_End
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.get_End
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 52
- id: Microsoft.CodeAnalysis.Text.TextSpan.Length
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Length
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Length
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 61
  summary: >+
    Length of the span.

  syntax:
    content:
      CSharp: public int Length
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextSpan.get_Length
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: get_Length
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.get_Length
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 63
- id: Microsoft.CodeAnalysis.Text.TextSpan.IsEmpty
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: IsEmpty
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.IsEmpty
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 72
  summary: >+
    Determines whether or not the span is empty.

  syntax:
    content:
      CSharp: public bool IsEmpty
    parameters:
    - id: IsEmpty
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: Microsoft.CodeAnalysis.Text.TextSpan.get_IsEmpty
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: get_IsEmpty
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.get_IsEmpty
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 74
- id: Microsoft.CodeAnalysis.Text.TextSpan.Contains(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Contains
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Contains(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 90
  summary: >+
    Determines whether the position lies within the span.

  syntax:
    content:
      CSharp: public bool Contains(int position)
    parameters:
    - id: position
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The position to check.
    return:
      id: Boolean
      description: "true if the position is greater than or equal to Start and strictly less \r\n    than End, otherwise false."
- id: Microsoft.CodeAnalysis.Text.TextSpan.Contains(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Contains
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Contains(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 104
  summary: >+
    Determines whether  falls completely within this span.

  syntax:
    content:
      CSharp: public bool Contains(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span to check.
    return:
      id: Boolean
      description: true if the specified span falls completely within this span, otherwise false.
- id: Microsoft.CodeAnalysis.Text.TextSpan.OverlapsWith(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: OverlapsWith
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.OverlapsWith(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 120
  summary: >+
    Determines whether  overlaps this span. Two spans are considered to overlap

    if they have positions in common and neither is empty. Empty spans do not overlap with any

    other span.

  syntax:
    content:
      CSharp: public bool OverlapsWith(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span to check.
    return:
      id: Boolean
      description: true if the spans overlap, otherwise false.
- id: Microsoft.CodeAnalysis.Text.TextSpan.Overlap(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Overlap
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Overlap(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 137
  summary: >+
    Returns the overlap with the given span, or null if there is no overlap.

  syntax:
    content:
      CSharp: public TextSpan? Overlap(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span to check.
    return:
      id: Nullable
      description: The overlap of the spans, or null if the overlap is empty.
- id: Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: IntersectsWith
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 158
  summary: >+
    Determines whether  intersects this span. Two spans are considered to

    intersect if they have positions in common or the end of one span

    coincides with the start of the other span.

  syntax:
    content:
      CSharp: public bool IntersectsWith(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span to check.
    return:
      id: Boolean
      description: true if the spans intersect, otherwise false.
- id: Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: IntersectsWith
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 174
  summary: >+
    Determines whether  intersects this span.

    A position is considered to intersect if it is between the start and

    end positions (inclusive) of this span.

  syntax:
    content:
      CSharp: public bool IntersectsWith(int position)
    parameters:
    - id: position
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The position to check.
    return:
      id: Boolean
      description: true if the position intersects, otherwise false.
- id: Microsoft.CodeAnalysis.Text.TextSpan.Intersection(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Intersection
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Intersection(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 188
  summary: >+
    Returns the intersection with the given span, or null if there is no intersection.

  syntax:
    content:
      CSharp: public TextSpan? Intersection(TextSpan span)
    parameters:
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
      description: The span to check.
    return:
      id: Nullable
      description: The intersection of the spans, or null if the intersection is empty.
- id: Microsoft.CodeAnalysis.Text.TextSpan.FromBounds(System.Int32,System.Int32)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: FromBounds
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.FromBounds(System.Int32,System.Int32)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 202
  summary: >+
    Creates a new [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) from  and  positions as opposed to a position and length.

  syntax:
    content:
      CSharp: public static TextSpan FromBounds(int start, int end)
    parameters:
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: end
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: TextSpan
- id: Microsoft.CodeAnalysis.Text.TextSpan.op_Equality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.op_Equality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 220
  summary: >+
    Determines if two instances of [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) are the same.

- id: Microsoft.CodeAnalysis.Text.TextSpan.op_Inequality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.op_Inequality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 228
  summary: >+
    Determines if two instances of [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) are different.

- id: Microsoft.CodeAnalysis.Text.TextSpan.Equals(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Equals(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 236
  summary: >+
    Determines if current instance of [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) is equal to another.

  syntax:
    content:
      CSharp: public bool Equals(TextSpan other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextSpan.Equals(System.Object)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.Equals(System.Object)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 244
  summary: >+
    Determines if current instance of [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) is equal to another.

  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Text.TextSpan.GetHashCode
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.GetHashCode
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 252
  summary: >+
    Produces a hash code for [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan).

  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.CodeAnalysis.Text.TextSpan.ToString
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.ToString
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 260
  summary: >+
    Provides a string representation for [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan).

  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.Text.TextSpan.CompareTo(Microsoft.CodeAnalysis.Text.TextSpan)
  yaml: api/Microsoft.CodeAnalysis.Text.TextSpan.yaml
  href: api/Microsoft.CodeAnalysis.Text.TextSpan
  name:
    CSharp: CompareTo
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Text.TextSpan.CompareTo(Microsoft.CodeAnalysis.Text.TextSpan)
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/dotnet/roslyn.git
      local: D:/Repo/RoslynGit/
      sha1: 6bda666d110ac87a7ad853dbe45e8366d8bb8744
    path: src/Compilers/Core/Portable/Text/TextSpan.cs
    startLine: 268
  summary: >+
    Compares current instance of [Microsoft.CodeAnalysis.Text.TextSpan](#/api/Microsoft.CodeAnalysis.Text.TextSpan) with another.

  syntax:
    content:
      CSharp: public int CompareTo(TextSpan other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: api/Microsoft.CodeAnalysis.Text.TextSpan
    return:
      id: Int32
