id: Microsoft.CodeAnalysis.TextDocument
yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
href: api\Microsoft.CodeAnalysis.TextDocument
name:
  CSharp: TextDocument
qualifiedName:
  CSharp: TextDocument
type: Class
source:
  remote:
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    local: C:\roslyn\
    sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
  path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
  startLine: 10
syntax:
  content:
    CSharp: public class TextDocument
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.TextDocument.Project
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: Project
  qualifiedName:
    CSharp: Project
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 22
  summary: >+
    The project this document belongs to.

  syntax:
    content:
      CSharp: public Project Project
    parameters:
    - id: Project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: api\Microsoft.CodeAnalysis.Project
- id: Microsoft.CodeAnalysis.TextDocument.get_Project
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: get_Project
  qualifiedName:
    CSharp: get_Project
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 22
- id: Microsoft.CodeAnalysis.TextDocument.Id
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: Id
  qualifiedName:
    CSharp: Id
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 41
  summary: >+
    The document's identifier. Many document instances may share the same ID, but only one

    document in a solution may have that ID.

  syntax:
    content:
      CSharp: public DocumentId Id
    parameters:
    - id: Id
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: api\Microsoft.CodeAnalysis.DocumentId
- id: Microsoft.CodeAnalysis.TextDocument.get_Id
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: get_Id
  qualifiedName:
    CSharp: get_Id
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 43
- id: Microsoft.CodeAnalysis.TextDocument.FilePath
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: FilePath
  qualifiedName:
    CSharp: FilePath
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 49
  summary: >+
    The path to the document file or null if there is no document file.

  syntax:
    content:
      CSharp: public string FilePath
    parameters:
    - id: FilePath
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.TextDocument.get_FilePath
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: get_FilePath
  qualifiedName:
    CSharp: get_FilePath
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 51
- id: Microsoft.CodeAnalysis.TextDocument.Name
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: Name
  qualifiedName:
    CSharp: Name
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 57
  summary: >+
    The name of the document.

  syntax:
    content:
      CSharp: public string Name
    parameters:
    - id: Name
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.CodeAnalysis.TextDocument.get_Name
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: get_Name
  qualifiedName:
    CSharp: get_Name
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 59
- id: Microsoft.CodeAnalysis.TextDocument.Folders
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: Folders
  qualifiedName:
    CSharp: Folders
  type: Property
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 68
  summary: >+
    The sequence of logical folders the document is contained in.

  syntax:
    content:
      CSharp: public IReadOnlyList<string> Folders
    parameters:
    - id: Folders
      type:
        id: System.Collections.Generic.IReadOnlyList{System.String}
        name: System.Collections.Generic.IReadOnlyList{System.String}
        isExternal: true
- id: Microsoft.CodeAnalysis.TextDocument.get_Folders
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: get_Folders
  qualifiedName:
    CSharp: get_Folders
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 70
- id: Microsoft.CodeAnalysis.TextDocument.TryGetText(Microsoft.CodeAnalysis.Text.SourceText@)
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: TryGetText
  qualifiedName:
    CSharp: TryGetText
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 79
  summary: >+
    Get the current text for the document if it is already loaded and available.

  syntax:
    content:
      CSharp: public bool TryGetText(out SourceText text)
    parameters:
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.TextDocument.TryGetTextVersion(Microsoft.CodeAnalysis.VersionStamp@)
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: TryGetTextVersion
  qualifiedName:
    CSharp: TryGetTextVersion
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 87
  summary: >+
    Gets the version of the document's text if it is already loaded and available.

  syntax:
    content:
      CSharp: public bool TryGetTextVersion(out VersionStamp version)
    parameters:
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: api\Microsoft.CodeAnalysis.VersionStamp
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.TextDocument.GetTextAsync(System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: GetTextAsync
  qualifiedName:
    CSharp: GetTextAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 95
  summary: >+
    Gets the current text for the document asynchronously.

  syntax:
    content:
      CSharp: public Task<SourceText> GetTextAsync(CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.TextDocument.GetTextVersionAsync(System.Threading.CancellationToken)
  yaml: api\Microsoft.CodeAnalysis.TextDocument.yaml
  href: api\Microsoft.CodeAnalysis.TextDocument
  name:
    CSharp: GetTextVersionAsync
  qualifiedName:
    CSharp: GetTextVersionAsync
  type: Method
  source:
    remote:
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      local: C:\roslyn\
      sha1: 1f481aa6a0c6e8392329364a28316e0b6cd563f3
    path: src\Workspaces\Core\Portable\Workspace\Solution\TextDocument.cs
    startLine: 103
  summary: >+
    Gets the version of the document's text.

  syntax:
    content:
      CSharp: public Task<VersionStamp> GetTextVersionAsync(CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
