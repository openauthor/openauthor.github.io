id: Microsoft.CodeAnalysis.VarianceKind
yaml: api/Microsoft.CodeAnalysis.VarianceKind.yaml
href: api/Microsoft.CodeAnalysis.VarianceKind
name:
  CSharp: VarianceKind
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.VarianceKind
type: Enum
source:
  remote:
    branch: master
    repo: https://github.com/pengbian/roslyn.git
    local: C:/Users/peterbi/Documents/GitHub/roslyn/
    sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
  path: src/Compilers/Core/Portable/Symbols/VarianceKind.cs
  startLine: 7
summary: >+
  An enumeration declaring the kinds of variance supported for generic type parameters.

syntax:
  content:
    CSharp: public enum VarianceKind
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.VarianceKind.None
  yaml: api/Microsoft.CodeAnalysis.VarianceKind.yaml
  href: api/Microsoft.CodeAnalysis.VarianceKind
  name:
    CSharp: None
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.VarianceKind.None
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/VarianceKind.cs
    startLine: 12
  summary: >+
    Invariant.

  syntax:
    content:
      CSharp: None = 0
- id: Microsoft.CodeAnalysis.VarianceKind.Out
  yaml: api/Microsoft.CodeAnalysis.VarianceKind.yaml
  href: api/Microsoft.CodeAnalysis.VarianceKind
  name:
    CSharp: Out
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.VarianceKind.Out
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/VarianceKind.cs
    startLine: 17
  summary: >+
    Covariant (out).

  syntax:
    content:
      CSharp: Out = 1
- id: Microsoft.CodeAnalysis.VarianceKind.In
  yaml: api/Microsoft.CodeAnalysis.VarianceKind.yaml
  href: api/Microsoft.CodeAnalysis.VarianceKind
  name:
    CSharp: In
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.VarianceKind.In
  type: Field
  source:
    remote:
      branch: master
      repo: https://github.com/pengbian/roslyn.git
      local: C:/Users/peterbi/Documents/GitHub/roslyn/
      sha1: 2b5d9bbb0a0cd1ec596f1459763458c4c95c8e52
    path: src/Compilers/Core/Portable/Symbols/VarianceKind.cs
    startLine: 22
  summary: >+
    Contravariant (in).

  syntax:
    content:
      CSharp: In = 2
