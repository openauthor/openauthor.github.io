id: Microsoft.CodeAnalysis.Differencing.Edit`1
href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
name:
  CSharp: Edit`1
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    description: v1.0-5-g7a3c58c
  path: src/Workspaces/Core/Portable/Differencing/Edit.cs
  startLine: 12
summary: Represents an edit operation on a tree or a sequence of nodes.
syntax:
  content:
    CSharp: public struct Edit<TNode>
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.Kind
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: Kind
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.Kind
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 35
  syntax:
    content:
      CSharp: public EditKind Kind { get; }
    parameters:
    - id: Kind
      type:
        id: Microsoft.CodeAnalysis.Differencing.EditKind
        name: EditKind
        href: Microsoft.CodeAnalysis.Differencing.EditKind.yaml
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.OldNode
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: OldNode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.OldNode
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 47
  summary: >-
    Insert:

    default(TNode).



    Delete:

    Deleted node.



    Move, Update:

    Node in the old tree/sequence.
  syntax:
    content:
      CSharp: public TNode OldNode { get; }
    parameters:
    - id: OldNode
      type:
        id: TNode
        name: TNode
        href: TNode
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.NewNode
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: NewNode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.NewNode
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 59
  summary: >-
    Insert:

    Inserted node.



    Delete:

    default(TNode)



    Move, Update:

    Node in the new tree/sequence.
  syntax:
    content:
      CSharp: public TNode NewNode { get; }
    parameters:
    - id: NewNode
      type:
        id: TNode
        name: TNode
        href: TNode
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(System.Object)
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 61
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(Microsoft.CodeAnalysis.Differencing.Edit{`0})
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(Microsoft.CodeAnalysis.Differencing.Edit{`0})
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 66
  syntax:
    content:
      CSharp: public bool Equals(Edit<TNode> other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.Differencing.Edit`1
        name: Edit
        href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.Differencing.Edit`1.GetHashCode
  href: Microsoft.CodeAnalysis.Differencing.Edit`1.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Differencing.Edit`1.GetHashCode
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Differencing/Edit.cs
    startLine: 73
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
