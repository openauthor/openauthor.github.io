id: Microsoft.CodeAnalysis.Editing.SolutionEditor
href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml
name:
  CSharp: SolutionEditor
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Editing.SolutionEditor
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    description: v1.0-5-g7a3c58c
  path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
  startLine: 14
summary: An editor for making changes to multiple documents in a solution.
syntax:
  content:
    CSharp: public class SolutionEditor
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Editing.SolutionEditor.#ctor(Microsoft.CodeAnalysis.Solution)
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml
  name:
    CSharp: SolutionEditor(Microsoft.CodeAnalysis.Solution)
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SolutionEditor.SolutionEditor(Microsoft.CodeAnalysis.Solution)
  type: Constructor
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 19
  syntax:
    content:
      CSharp: public SolutionEditor(Solution solution)
    parameters:
    - id: solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yaml
    return:
      id: Void
- id: Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml
  name:
    CSharp: OriginalSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 28
  summary: The [Microsoft.CodeAnalysis.Solution](Microsoft.CodeAnalysis.Solution.yaml) that was specified when the [Microsoft.CodeAnalysis.Editing.SolutionEditor](Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml) was constructed.
  syntax:
    content:
      CSharp: public Solution OriginalSolution { get; }
    parameters:
    - id: OriginalSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yaml
- id: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml
  name:
    CSharp: GetDocumentEditorAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 36
  summary: Gets the [Microsoft.CodeAnalysis.Editing.DocumentEditor](Microsoft.CodeAnalysis.Editing.DocumentEditor.yaml) for the corresponding [Microsoft.CodeAnalysis.DocumentId](Microsoft.CodeAnalysis.DocumentId.yaml).
  syntax:
    content:
      CSharp: public async Task<DocumentEditor> GetDocumentEditorAsync(DocumentId id, CancellationToken cancellationToken = default (CancellationToken))
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yaml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yaml
  name:
    CSharp: GetChangedSolution
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 51
  summary: Returns the changed [Microsoft.CodeAnalysis.Solution](Microsoft.CodeAnalysis.Solution.yaml).
  syntax:
    content:
      CSharp: public Solution GetChangedSolution()
    parameters: []
    return:
      id: Solution
