id: Microsoft.CodeAnalysis.ProjectId
href: Microsoft.CodeAnalysis.ProjectId.yaml
name:
  CSharp: ProjectId
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.ProjectId
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    description: v1.0-4-gd725e0e
  path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
  startLine: 14
summary: An identifier that can be used to refer to the same [Microsoft.CodeAnalysis.Project](Microsoft.CodeAnalysis.Project.yaml) across versions.
syntax:
  content:
    CSharp: public class ProjectId
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.ProjectId.Id
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: Id
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.Id
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 22
  summary: The system generated unique id.
  syntax:
    content:
      CSharp: public Guid Id { get; private set; }
    parameters:
    - id: Id
      type:
        id: System.Guid
        name: System.Guid
        isExternal: true
- id: Microsoft.CodeAnalysis.ProjectId.CreateNewId(System.String)
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: CreateNewId
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.CreateNewId(System.String)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 40
  summary: Create a new ProjectId instance.
  syntax:
    content:
      CSharp: public static ProjectId CreateNewId(string debugName = null)
    parameters:
    - id: debugName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: An optional name to make this id easier to recognize while debugging.
    return:
      id: ProjectId
- id: Microsoft.CodeAnalysis.ProjectId.ToString
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.ToString
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 55
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
- id: Microsoft.CodeAnalysis.ProjectId.Equals(System.Object)
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 60
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.ProjectId.Equals(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.Equals(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 65
  syntax:
    content:
      CSharp: public bool Equals(ProjectId other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.ProjectId.op_Equality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.op_Equality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 72
  syntax:
    content:
      CSharp: public static bool operator ==(ProjectId left, ProjectId right) { return EqualityComparer<ProjectId>.Default.Equals(left, right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yaml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.ProjectId.op_Inequality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.op_Inequality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 77
  syntax:
    content:
      CSharp: public static bool operator !=(ProjectId left, ProjectId right) { return !(left == right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yaml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yaml
    return:
      id: Boolean
- id: Microsoft.CodeAnalysis.ProjectId.GetHashCode
  href: Microsoft.CodeAnalysis.ProjectId.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.ProjectId.GetHashCode
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectId.cs
    startLine: 82
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
