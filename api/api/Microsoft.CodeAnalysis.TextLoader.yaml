id: Microsoft.CodeAnalysis.TextLoader
href: api/Microsoft.CodeAnalysis.TextLoader.yaml
name:
  CSharp: TextLoader
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.TextLoader
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/chenkennt/roslyn.git
    description: v1.0-3-g8c49d3e
  path: src/Workspaces/Core/Portable/Workspace/Solution/TextLoader.cs
  startLine: 12
summary: A class that represents access to a source text and its version from a storage location.
syntax:
  content:
    CSharp: public abstract class TextLoader
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.TextLoader.LoadTextAndVersionAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  href: api/Microsoft.CodeAnalysis.TextLoader.yaml
  name:
    CSharp: LoadTextAndVersionAsync
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.TextLoader.LoadTextAndVersionAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/TextLoader.cs
    startLine: 17
  summary: Load a text and a version of the document in the workspace.
  syntax:
    content:
      CSharp: public abstract Task<TextAndVersion> LoadTextAndVersionAsync(Workspace workspace, DocumentId documentId, CancellationToken cancellationToken);
    parameters:
    - id: workspace
      type:
        id: Microsoft.CodeAnalysis.Workspace
        name: Workspace
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: Task
- id: Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.TextAndVersion)
  href: api/Microsoft.CodeAnalysis.TextLoader.yaml
  name:
    CSharp: From
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.TextAndVersion)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/TextLoader.cs
    startLine: 22
  summary: Creates a new TextLoader from an already existing source text and version.
  syntax:
    content:
      CSharp: public static TextLoader From(TextAndVersion textAndVersion)
    parameters:
    - id: textAndVersion
      type:
        id: Microsoft.CodeAnalysis.TextAndVersion
        name: TextAndVersion
    return:
      id: TextLoader
- id: Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.VersionStamp,System.String)
  href: api/Microsoft.CodeAnalysis.TextLoader.yaml
  name:
    CSharp: From
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.VersionStamp,System.String)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/TextLoader.cs
    startLine: 38
  summary: >-
    Creates a TextLoader from a SourceTextContainer and version.



    The text obtained from the loader will be the current text of the container at the time

    the loader is accessed.
  syntax:
    content:
      CSharp: public static TextLoader From(SourceTextContainer container, VersionStamp version, string filePath = null)
    parameters:
    - id: container
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
    - id: filePath
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: TextLoader
