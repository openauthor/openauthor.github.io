items:
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  href: Microsoft.Win32.SafeHandles.SafeRegistryHandle.yml
  name: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  type: Class
  source:
    remote: &o0
      path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/SafeHandles/SafeRegistryHandle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/SafeHandles/SafeRegistryHandle.cs
    startLine: 8
  syntax:
    content:
      CSharp: 'public sealed class SafeRegistryHandle : SafeHandle, IDisposable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
    name: CriticalFinalizerObject
    isExternal: true
  - id: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    isExternal: true
  id: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeRegistryHandle.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
  href: Microsoft.Win32.SafeHandles.SafeRegistryHandle.yml
  name: SafeRegistryHandle(IntPtr, bool)
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.SafeRegistryHandle(System.IntPtr, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/SafeHandles/SafeRegistryHandle.cs
    startLine: 14
  syntax:
    content:
      CSharp: '[System.Security.SecurityCritical] public SafeRegistryHandle(IntPtr preexistingHandle, bool ownsHandle): base (IntPtr.Zero, ownsHandle)'
    parameters:
    - id: preexistingHandle
      type:
        id: System.IntPtr
        name: IntPtr
        isExternal: true
    - id: ownsHandle
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.IsInvalid
  href: Microsoft.Win32.SafeHandles.SafeRegistryHandle.yml
  name: IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.IsInvalid
  type: Property
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/SafeHandles/SafeRegistryHandle.cs
    startLine: 20
  syntax:
    content:
      CSharp: public override bool IsInvalid { [System.Security.SecurityCritical] get; }
    parameters:
    - id: IsInvalid
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.Win32.SafeHandles.SafeRegistryHandle.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
  href: Microsoft.Win32.SafeHandles.SafeRegistryHandle.yml
  name: ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle()
  type: Method
  source:
    remote: *o0
    path: src/Microsoft.Win32.Registry/src/Microsoft/Win32/SafeHandles/SafeRegistryHandle.cs
    startLine: 27
  syntax:
    content:
      CSharp: protected override bool ReleaseHandle()
    parameters: []
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
