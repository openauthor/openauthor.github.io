items:
- uid: System.Collections.CollectionBase
  href: System.Collections.CollectionBase.yml
  name: CollectionBase
  fullName: System.Collections.CollectionBase
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 17
  syntax:
    content:
      CSharp: 'public abstract class CollectionBase : IList, ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.CollectionBase
  children:
  - System.Collections.CollectionBase.#ctor
  - System.Collections.CollectionBase.#ctor(System.Int32)
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
- uid: System.Collections.CollectionBase.#ctor
  href: System.Collections.CollectionBase.yml
  name: CollectionBase()
  fullName: System.Collections.CollectionBase.CollectionBase()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 21
  syntax:
    content:
      CSharp: protected CollectionBase()
    parameters: []
  id: System.Collections.CollectionBase.#ctor
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  href: System.Collections.CollectionBase.yml
  name: CollectionBase(int)
  fullName: System.Collections.CollectionBase.CollectionBase(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 26
  syntax:
    content:
      CSharp: protected CollectionBase(int capacity)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.#ctor(System.Int32)
- uid: System.Collections.CollectionBase.InnerList
  href: System.Collections.CollectionBase.yml
  name: InnerList
  fullName: System.Collections.CollectionBase.InnerList
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 32
  syntax:
    content:
      CSharp: protected ArrayList InnerList { get; }
    parameters:
    - id: InnerList
      type:
        id: System.Collections.ArrayList
        name: ArrayList
        href: System.Collections.ArrayList.yml
  id: System.Collections.CollectionBase.InnerList
- uid: System.Collections.CollectionBase.List
  href: System.Collections.CollectionBase.yml
  name: List
  fullName: System.Collections.CollectionBase.List
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 42
  syntax:
    content:
      CSharp: protected IList List { get; }
    parameters:
    - id: List
      type:
        id: System.Collections.IList
        name: IList
        isExternal: true
  id: System.Collections.CollectionBase.List
- uid: System.Collections.CollectionBase.Capacity
  href: System.Collections.CollectionBase.yml
  name: Capacity
  fullName: System.Collections.CollectionBase.Capacity
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 47
  syntax:
    content:
      CSharp: public int Capacity { get; set; }
    parameters:
    - id: Capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Count
  href: System.Collections.CollectionBase.yml
  name: Count
  fullName: System.Collections.CollectionBase.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 60
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.Count
- uid: System.Collections.CollectionBase.Clear
  href: System.Collections.CollectionBase.yml
  name: Clear()
  fullName: System.Collections.CollectionBase.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 68
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Collections.CollectionBase.Clear
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  href: System.Collections.CollectionBase.yml
  name: RemoveAt(int)
  fullName: System.Collections.CollectionBase.RemoveAt(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 75
  syntax:
    content:
      CSharp: public void RemoveAt(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.RemoveAt(System.Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  href: System.Collections.CollectionBase.yml
  name: IList.IsReadOnly
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 95
  syntax:
    content:
      CSharp: bool IList.IsReadOnly { get; }
    parameters:
    - id: System.Collections.IList.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  href: System.Collections.CollectionBase.yml
  name: IList.IsFixedSize
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 100
  syntax:
    content:
      CSharp: bool IList.IsFixedSize { get; }
    parameters:
    - id: System.Collections.IList.IsFixedSize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  href: System.Collections.CollectionBase.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 105
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  href: System.Collections.CollectionBase.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 110
  syntax:
    content:
      CSharp: Object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Collections.CollectionBase.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 115
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  href: System.Collections.CollectionBase.yml
  name: IList.this[int]
  fullName: System.Collections.CollectionBase.System.Collections.IList.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 120
  syntax:
    content:
      CSharp: Object IList.this[int index] { get; set; }
    parameters:
    - id: System.Collections.IList.this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  href: System.Collections.CollectionBase.yml
  name: IList.Contains(object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 150
  syntax:
    content:
      CSharp: bool IList.Contains(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  href: System.Collections.CollectionBase.yml
  name: IList.Add(object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 155
  syntax:
    content:
      CSharp: int IList.Add(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  href: System.Collections.CollectionBase.yml
  name: IList.Remove(object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 173
  syntax:
    content:
      CSharp: void IList.Remove(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  href: System.Collections.CollectionBase.yml
  name: IList.IndexOf(object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 191
  syntax:
    content:
      CSharp: int IList.IndexOf(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  href: System.Collections.CollectionBase.yml
  name: IList.Insert(int, object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 196
  syntax:
    content:
      CSharp: void IList.Insert(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
- uid: System.Collections.CollectionBase.GetEnumerator
  href: System.Collections.CollectionBase.yml
  name: GetEnumerator()
  fullName: System.Collections.CollectionBase.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 215
  syntax:
    content:
      CSharp: public IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.CollectionBase.GetEnumerator
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnSet(int, object, object)
  fullName: System.Collections.CollectionBase.OnSet(int, object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 220
  syntax:
    content:
      CSharp: protected virtual void OnSet(int index, object oldValue, object newValue)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: oldValue
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: newValue
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnInsert(int, object)
  fullName: System.Collections.CollectionBase.OnInsert(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 224
  syntax:
    content:
      CSharp: protected virtual void OnInsert(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
- uid: System.Collections.CollectionBase.OnClear
  href: System.Collections.CollectionBase.yml
  name: OnClear()
  fullName: System.Collections.CollectionBase.OnClear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 228
  syntax:
    content:
      CSharp: protected virtual void OnClear()
    parameters: []
  id: System.Collections.CollectionBase.OnClear
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnRemove(int, object)
  fullName: System.Collections.CollectionBase.OnRemove(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 232
  syntax:
    content:
      CSharp: protected virtual void OnRemove(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnValidate(object)
  fullName: System.Collections.CollectionBase.OnValidate(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 236
  syntax:
    content:
      CSharp: protected virtual void OnValidate(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnValidate(System.Object)
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnSetComplete(int, object, object)
  fullName: System.Collections.CollectionBase.OnSetComplete(int, object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 242
  syntax:
    content:
      CSharp: protected virtual void OnSetComplete(int index, object oldValue, object newValue)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: oldValue
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: newValue
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnInsertComplete(int, object)
  fullName: System.Collections.CollectionBase.OnInsertComplete(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 246
  syntax:
    content:
      CSharp: protected virtual void OnInsertComplete(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
- uid: System.Collections.CollectionBase.OnClearComplete
  href: System.Collections.CollectionBase.yml
  name: OnClearComplete()
  fullName: System.Collections.CollectionBase.OnClearComplete()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 250
  syntax:
    content:
      CSharp: protected virtual void OnClearComplete()
    parameters: []
  id: System.Collections.CollectionBase.OnClearComplete
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  href: System.Collections.CollectionBase.yml
  name: OnRemoveComplete(int, object)
  fullName: System.Collections.CollectionBase.OnRemoveComplete(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/CollectionBase.cs
    startLine: 254
  syntax:
    content:
      CSharp: protected virtual void OnRemoveComplete(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
