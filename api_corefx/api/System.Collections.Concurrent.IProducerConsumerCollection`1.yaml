id: System.Collections.Concurrent.IProducerConsumerCollection`1
href: System.Collections.Concurrent.IProducerConsumerCollection`1.yaml
name:
  CSharp: IProducerConsumerCollection`1
qualifiedName:
  CSharp: System.Collections.Concurrent.IProducerConsumerCollection`1
type: Interface
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/IProducerConsumerCollection.cs
  startLine: 26
summary: Defines methods to manipulate thread-safe collections intended for producer/consumer usage.
syntax:
  content:
    CSharp: public interface IProducerConsumerCollection<T>
items:
- id: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)
  href: System.Collections.Concurrent.IProducerConsumerCollection`1.yaml
  name:
    CSharp: CopyTo
  qualifiedName:
    CSharp: System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/IProducerConsumerCollection.cs
    startLine: 48
  summary: >-
    Copies the elements of the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml) to

    an

    [System.Array](#), starting at a specified index.
  syntax:
    content:
      CSharp: void CopyTo(T[] array, int index);
    parameters:
    - id: array
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: >-
        The one-dimensional [System.Array](#) that is the destination of

        the elements copied from the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml).

        The array must have zero-based indexing.
    - id: index
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: >-
        The zero-based index in  at which copying

        begins.
    return:
      id: Void
- id: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)
  href: System.Collections.Concurrent.IProducerConsumerCollection`1.yaml
  name:
    CSharp: TryAdd
  qualifiedName:
    CSharp: System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/IProducerConsumerCollection.cs
    startLine: 58
  summary: Attempts to add an object to the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml).
  syntax:
    content:
      CSharp: bool TryAdd(T item);
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The object to add to the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml).
    return:
      id: Boolean
      description: true if the object was added successfully; otherwise, false.
- id: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)
  href: System.Collections.Concurrent.IProducerConsumerCollection`1.yaml
  name:
    CSharp: TryTake
  qualifiedName:
    CSharp: System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/IProducerConsumerCollection.cs
    startLine: 69
  summary: Attempts to remove and return an object from the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml).
  syntax:
    content:
      CSharp: bool TryTake(out T item);
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        When this method returns, if the object was removed and returned successfully,  contains the removed object. If no object was available to be removed, the value is

        unspecified.
    return:
      id: Boolean
      description: true if an object was removed and returned successfully; otherwise, false.
- id: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray
  href: System.Collections.Concurrent.IProducerConsumerCollection`1.yaml
  name:
    CSharp: ToArray
  qualifiedName:
    CSharp: System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/IProducerConsumerCollection.cs
    startLine: 75
  summary: Copies the elements contained in the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml) to a new array.
  syntax:
    content:
      CSharp: T[] ToArray();
    parameters: []
    return:
      description: A new array containing the elements copied from the [System.Collections.Concurrent.IProducerConsumerCollection`1](System.Collections.Concurrent.IProducerConsumerCollection`1.yaml).
