items:
- uid: System.Collections.Concurrent.Partitioner`1
  href: System.Collections.Concurrent.Partitioner`1.yml
  name: Partitioner<TSource>
  fullName: System.Collections.Concurrent.Partitioner<TSource>
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/Partitioner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/Partitioner.cs
    startLine: 44
  summary: Represents a particular manner of splitting a data source into multiple partitions.
  syntax:
    content:
      CSharp: public abstract class Partitioner<TSource>
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Concurrent.Partitioner`1
  children:
  - System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
  - System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
  - System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
- uid: System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
  href: System.Collections.Concurrent.Partitioner`1.yml
  name: GetPartitions(int)
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetPartitions(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/Partitioner.cs
    startLine: 51
  summary: Partitions the underlying collection into the given number of partitions.
  syntax:
    content:
      CSharp: public abstract IList<IEnumerator<TSource>> GetPartitions(int partitionCount)
    parameters:
    - id: partitionCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of partitions to create.
    return:
      id: IList
      type:
        id: System.Collections.Generic.IList{System.Collections.Generic.IEnumerator{`0}}
        name: IList<IEnumerator<TSource>>
        isExternal: true
      description: A list containing  enumerators.
  id: System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
- uid: System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
  href: System.Collections.Concurrent.Partitioner`1.yml
  name: SupportsDynamicPartitions
  fullName: System.Collections.Concurrent.Partitioner<TSource>.SupportsDynamicPartitions
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/Partitioner.cs
    startLine: 68
  summary: Gets whether additional partitions can be created dynamically.
  syntax:
    content:
      CSharp: public virtual bool SupportsDynamicPartitions { get; }
    parameters:
    - id: SupportsDynamicPartitions
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
- uid: System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
  href: System.Collections.Concurrent.Partitioner`1.yml
  name: GetDynamicPartitions()
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetDynamicPartitions()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Concurrent/src/System/Collections/Concurrent/Partitioner.cs
    startLine: 93
  summary: >-
    Creates an object that can partition the underlying collection into a variable number of

    partitions.
  syntax:
    content:
      CSharp: public virtual IEnumerable<TSource> GetDynamicPartitions()
    parameters: []
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<TSource>
        isExternal: true
      description: An object that can create partitions over the underlying data source.
  id: System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
