items:
- uid: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  type: Class
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 9
  syntax:
    content:
      CSharp: 'public class LinkedList<T> : ICollection<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Generic.LinkedList`1
  children:
  - System.Collections.Generic.LinkedList`1.#ctor
  - System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.LinkedList`1.Count
  - System.Collections.Generic.LinkedList`1.First
  - System.Collections.Generic.LinkedList`1.Last
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddFirst(`0)
  - System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddLast(`0)
  - System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.Clear
  - System.Collections.Generic.LinkedList`1.Contains(`0)
  - System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.LinkedList`1.Find(`0)
  - System.Collections.Generic.LinkedList`1.FindLast(`0)
  - System.Collections.Generic.LinkedList`1.GetEnumerator
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.LinkedList`1.Remove(`0)
  - System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.RemoveFirst
  - System.Collections.Generic.LinkedList`1.RemoveLast
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Generic.LinkedList`1.#ctor
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList()
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 19
  syntax:
    content:
      CSharp: public LinkedList()
    parameters: []
  id: System.Collections.Generic.LinkedList`1.#ctor
- uid: System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList(IEnumerable<T>)
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 23
  syntax:
    content:
      CSharp: public LinkedList(IEnumerable<T> collection)
    parameters:
    - id: collection
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<T>
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
- uid: System.Collections.Generic.LinkedList`1.Count
  href: System.Collections.Generic.LinkedList`1.yml
  name: Count
  fullName: System.Collections.Generic.LinkedList<T>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 36
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.Count
- uid: System.Collections.Generic.LinkedList`1.First
  href: System.Collections.Generic.LinkedList`1.yml
  name: First
  fullName: System.Collections.Generic.LinkedList<T>.First
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 41
  syntax:
    content:
      CSharp: public LinkedListNode<T> First { get; }
    parameters:
    - id: First
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.First
- uid: System.Collections.Generic.LinkedList`1.Last
  href: System.Collections.Generic.LinkedList`1.yml
  name: Last
  fullName: System.Collections.Generic.LinkedList<T>.Last
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 46
  syntax:
    content:
      CSharp: public LinkedListNode<T> Last { get; }
    parameters:
    - id: Last
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.Last
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 51
  syntax:
    content:
      CSharp: bool ICollection<T>.IsReadOnly { get; }
    parameters:
    - id: System.Collections.Generic.ICollection<T>.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.ICollection<T>.Add(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 56
  syntax:
    content:
      CSharp: void ICollection<T>.Add(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, T)
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 61
  syntax:
    content:
      CSharp: public LinkedListNode<T> AddAfter(LinkedListNode<T> node, T value)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, LinkedListNode<T>)
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 69
  syntax:
    content:
      CSharp: public void AddAfter(LinkedListNode<T> node, LinkedListNode<T> newNode)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
    - id: newNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, T)
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 77
  syntax:
    content:
      CSharp: public LinkedListNode<T> AddBefore(LinkedListNode<T> node, T value)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, LinkedListNode<T>)
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 89
  syntax:
    content:
      CSharp: public void AddBefore(LinkedListNode<T> node, LinkedListNode<T> newNode)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
    - id: newNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
- uid: System.Collections.Generic.LinkedList`1.AddFirst(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 101
  syntax:
    content:
      CSharp: public LinkedListNode<T> AddFirst(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddFirst(`0)
- uid: System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(LinkedListNode<T>)
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(System.Collections.Generic.LinkedListNode<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 116
  syntax:
    content:
      CSharp: public void AddFirst(LinkedListNode<T> node)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
- uid: System.Collections.Generic.LinkedList`1.AddLast(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 132
  syntax:
    content:
      CSharp: public LinkedListNode<T> AddLast(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddLast(`0)
- uid: System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(LinkedListNode<T>)
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(System.Collections.Generic.LinkedListNode<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 146
  syntax:
    content:
      CSharp: public void AddLast(LinkedListNode<T> node)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
- uid: System.Collections.Generic.LinkedList`1.Clear
  href: System.Collections.Generic.LinkedList`1.yml
  name: Clear()
  fullName: System.Collections.Generic.LinkedList<T>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 161
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Collections.Generic.LinkedList`1.Clear
- uid: System.Collections.Generic.LinkedList`1.Contains(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.LinkedList<T>.Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 176
  syntax:
    content:
      CSharp: public bool Contains(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.Contains(`0)
- uid: System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  href: System.Collections.Generic.LinkedList`1.yml
  name: CopyTo(T[], int)
  fullName: System.Collections.Generic.LinkedList<T>.CopyTo(T[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 181
  syntax:
    content:
      CSharp: public void CopyTo(T[] array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: T[]
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.LinkedList`1.Find(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: Find(T)
  fullName: System.Collections.Generic.LinkedList<T>.Find(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 209
  syntax:
    content:
      CSharp: public LinkedListNode<T> Find(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.Find(`0)
- uid: System.Collections.Generic.LinkedList`1.FindLast(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: FindLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.FindLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 241
  syntax:
    content:
      CSharp: public LinkedListNode<T> FindLast(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: LinkedListNode
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.FindLast(`0)
- uid: System.Collections.Generic.LinkedList`1.GetEnumerator
  href: System.Collections.Generic.LinkedList`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 277
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
      type:
        id: System.Collections.Generic.LinkedList`1.Enumerator
        name: Enumerator
        href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  id: System.Collections.Generic.LinkedList`1.GetEnumerator
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  href: System.Collections.Generic.LinkedList`1.yml
  name: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 282
  syntax:
    content:
      CSharp: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{`0}
        name: IEnumerator<T>
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
- uid: System.Collections.Generic.LinkedList`1.Remove(`0)
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.LinkedList<T>.Remove(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 287
  syntax:
    content:
      CSharp: public bool Remove(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.Remove(`0)
- uid: System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(LinkedListNode<T>)
  fullName: System.Collections.Generic.LinkedList<T>.Remove(System.Collections.Generic.LinkedListNode<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 298
  syntax:
    content:
      CSharp: public void Remove(LinkedListNode<T> node)
    parameters:
    - id: node
      type:
        id: System.Collections.Generic.LinkedListNode{`0}
        name: LinkedListNode<T>
        href: System.Collections.Generic.LinkedListNode{`0}
  id: System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
- uid: System.Collections.Generic.LinkedList`1.RemoveFirst
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveFirst()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveFirst()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 304
  syntax:
    content:
      CSharp: public void RemoveFirst()
    parameters: []
  id: System.Collections.Generic.LinkedList`1.RemoveFirst
- uid: System.Collections.Generic.LinkedList`1.RemoveLast
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveLast()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveLast()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 310
  syntax:
    content:
      CSharp: public void RemoveLast()
    parameters: []
  id: System.Collections.Generic.LinkedList`1.RemoveLast
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 386
  syntax:
    content:
      CSharp: bool System.Collections.ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 391
  syntax:
    content:
      CSharp: object System.Collections.ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 403
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Generic.LinkedList`1.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 463
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator
