items:
- uid: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  type: Class
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 18
  syntax:
    content:
      CSharp: 'public class Queue<T> : ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Generic.Queue`1
  children:
  - System.Collections.Generic.Queue`1.#ctor
  - System.Collections.Generic.Queue`1.#ctor(System.Int32)
  - System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.Queue`1.Count
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Queue`1.Clear
  - System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Queue`1.Enqueue(`0)
  - System.Collections.Generic.Queue`1.GetEnumerator
  - System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Queue`1.Dequeue
  - System.Collections.Generic.Queue`1.Peek
  - System.Collections.Generic.Queue`1.Contains(`0)
  - System.Collections.Generic.Queue`1.ToArray
  - System.Collections.Generic.Queue`1.TrimExcess
- uid: System.Collections.Generic.Queue`1.#ctor
  href: System.Collections.Generic.Queue`1.yml
  name: Queue()
  fullName: System.Collections.Generic.Queue<T>.Queue()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 39
  syntax:
    content:
      CSharp: public Queue()
    parameters: []
  id: System.Collections.Generic.Queue`1.#ctor
- uid: System.Collections.Generic.Queue`1.#ctor(System.Int32)
  href: System.Collections.Generic.Queue`1.yml
  name: Queue(int)
  fullName: System.Collections.Generic.Queue<T>.Queue(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 48
  syntax:
    content:
      CSharp: public Queue(int capacity)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.Queue`1.#ctor(System.Int32)
- uid: System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Generic.Queue`1.yml
  name: Queue(IEnumerable<T>)
  fullName: System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 63
  syntax:
    content:
      CSharp: public Queue(IEnumerable<T> collection)
    parameters:
    - id: collection
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<T>
        isExternal: true
  id: System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
- uid: System.Collections.Generic.Queue`1.Count
  href: System.Collections.Generic.Queue`1.yml
  name: Count
  fullName: System.Collections.Generic.Queue<T>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 83
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.Queue`1.Count
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 89
  syntax:
    content:
      CSharp: bool System.Collections.ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 94
  syntax:
    content:
      CSharp: Object System.Collections.ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Generic.Queue`1.Clear
  href: System.Collections.Generic.Queue`1.yml
  name: Clear()
  fullName: System.Collections.Generic.Queue<T>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 108
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Collections.Generic.Queue`1.Clear
- uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  href: System.Collections.Generic.Queue`1.yml
  name: CopyTo(T[], int)
  fullName: System.Collections.Generic.Queue<T>.CopyTo(T[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 128
  syntax:
    content:
      CSharp: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type:
        id: System.Array
        name: T[]
        isExternal: true
    - id: arrayIndex
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 158
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.Generic.Queue`1.Enqueue(`0)
  href: System.Collections.Generic.Queue`1.yml
  name: Enqueue(T)
  fullName: System.Collections.Generic.Queue<T>.Enqueue(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 209
  syntax:
    content:
      CSharp: public void Enqueue(T item)
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Generic.Queue`1.Enqueue(`0)
- uid: System.Collections.Generic.Queue`1.GetEnumerator
  href: System.Collections.Generic.Queue`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 231
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
      type:
        id: System.Collections.Generic.Queue`1.Enumerator
        name: Enumerator
        href: System.Collections.Generic.Queue`1.Enumerator.yml
  id: System.Collections.Generic.Queue`1.GetEnumerator
- uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  href: System.Collections.Generic.Queue`1.yml
  name: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 238
  syntax:
    content:
      CSharp: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{`0}
        name: IEnumerator<T>
        isExternal: true
  id: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
- uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Generic.Queue`1.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 243
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Generic.Queue`1.Dequeue
  href: System.Collections.Generic.Queue`1.yml
  name: Dequeue()
  fullName: System.Collections.Generic.Queue<T>.Dequeue()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 251
  syntax:
    content:
      CSharp: public T Dequeue()
    parameters: []
    return:
      id: T
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Generic.Queue`1.Dequeue
- uid: System.Collections.Generic.Queue`1.Peek
  href: System.Collections.Generic.Queue`1.yml
  name: Peek()
  fullName: System.Collections.Generic.Queue<T>.Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 268
  syntax:
    content:
      CSharp: public T Peek()
    parameters: []
    return:
      id: T
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Generic.Queue`1.Peek
- uid: System.Collections.Generic.Queue`1.Contains(`0)
  href: System.Collections.Generic.Queue`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.Queue<T>.Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 281
  syntax:
    content:
      CSharp: public bool Contains(T item)
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Generic.Queue`1.Contains(`0)
- uid: System.Collections.Generic.Queue`1.ToArray
  href: System.Collections.Generic.Queue`1.yml
  name: ToArray()
  fullName: System.Collections.Generic.Queue<T>.ToArray()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 314
  syntax:
    content:
      CSharp: public T[] ToArray()
    parameters: []
    return:
      type:
        id: System.Array
        name: T[]
        isExternal: true
  id: System.Collections.Generic.Queue`1.ToArray
- uid: System.Collections.Generic.Queue`1.TrimExcess
  href: System.Collections.Generic.Queue`1.yml
  name: TrimExcess()
  fullName: System.Collections.Generic.Queue<T>.TrimExcess()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 358
  syntax:
    content:
      CSharp: public void TrimExcess()
    parameters: []
  id: System.Collections.Generic.Queue`1.TrimExcess
