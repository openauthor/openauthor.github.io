items:
- uid: System.Collections.Hashtable
  href: System.Collections.Hashtable.yml
  name: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 56
  syntax:
    content:
      CSharp: 'public class Hashtable : IDictionary, ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Hashtable
  children:
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.#ctor
  - System.Collections.Hashtable.#ctor(System.Int32)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.Values
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
- uid: System.Collections.Hashtable.EqualityComparer
  href: System.Collections.Hashtable.yml
  name: EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 153
  syntax:
    content:
      CSharp: protected IEqualityComparer EqualityComparer { get; }
    parameters:
    - id: EqualityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.EqualityComparer
- uid: System.Collections.Hashtable.#ctor
  href: System.Collections.Hashtable.yml
  name: Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 169
  syntax:
    content:
      CSharp: 'public Hashtable(): this (0, 1.0f)'
    parameters: []
  id: System.Collections.Hashtable.#ctor
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  href: System.Collections.Hashtable.yml
  name: Hashtable(int)
  fullName: System.Collections.Hashtable.Hashtable(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 180
  syntax:
    content:
      CSharp: 'public Hashtable(int capacity): this (capacity, 1.0f)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Int32)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  href: System.Collections.Hashtable.yml
  name: Hashtable(int, float)
  fullName: System.Collections.Hashtable.Hashtable(int, float)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 195
  syntax:
    content:
      CSharp: public Hashtable(int capacity, float loadFactor)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: loadFactor
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  href: System.Collections.Hashtable.yml
  name: Hashtable(int, float, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(int, float, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 220
  syntax:
    content:
      CSharp: 'public Hashtable(int capacity, float loadFactor, IEqualityComparer equalityComparer): this (capacity, loadFactor)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: loadFactor
      type:
        id: System.Single
        name: float
        isExternal: true
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  href: System.Collections.Hashtable.yml
  name: Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 225
  syntax:
    content:
      CSharp: 'public Hashtable(IEqualityComparer equalityComparer): this (0, 1.0f, equalityComparer)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  href: System.Collections.Hashtable.yml
  name: Hashtable(int, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(int, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 229
  syntax:
    content:
      CSharp: 'public Hashtable(int capacity, IEqualityComparer equalityComparer): this (capacity, 1.0f, equalityComparer)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  href: System.Collections.Hashtable.yml
  name: Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 237
  syntax:
    content:
      CSharp: 'public Hashtable(IDictionary d): this (d, 1.0f)'
    parameters:
    - id: d
      type:
        id: System.Collections.IDictionary
        name: IDictionary
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  href: System.Collections.Hashtable.yml
  name: Hashtable(IDictionary, float)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, float)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 244
  syntax:
    content:
      CSharp: 'public Hashtable(IDictionary d, float loadFactor): this (d, loadFactor, (IEqualityComparer)null)'
    parameters:
    - id: d
      type:
        id: System.Collections.IDictionary
        name: IDictionary
        isExternal: true
    - id: loadFactor
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  href: System.Collections.Hashtable.yml
  name: Hashtable(IDictionary, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 249
  syntax:
    content:
      CSharp: 'public Hashtable(IDictionary d, IEqualityComparer equalityComparer): this (d, 1.0f, equalityComparer)'
    parameters:
    - id: d
      type:
        id: System.Collections.IDictionary
        name: IDictionary
        isExternal: true
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  href: System.Collections.Hashtable.yml
  name: Hashtable(IDictionary, float, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, float, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 254
  syntax:
    content:
      CSharp: 'public Hashtable(IDictionary d, float loadFactor, IEqualityComparer equalityComparer): this ((d != null ? d.Count : 0), loadFactor, equalityComparer)'
    parameters:
    - id: d
      type:
        id: System.Collections.IDictionary
        name: IDictionary
        isExternal: true
    - id: loadFactor
      type:
        id: System.Single
        name: float
        isExternal: true
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  href: System.Collections.Hashtable.yml
  name: Add(object, object)
  fullName: System.Collections.Hashtable.Add(object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 304
  syntax:
    content:
      CSharp: public virtual void Add(object key, object value)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Hashtable.Add(System.Object,System.Object)
- uid: System.Collections.Hashtable.Clear
  href: System.Collections.Hashtable.yml
  name: Clear()
  fullName: System.Collections.Hashtable.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 310
  syntax:
    content:
      CSharp: public virtual void Clear()
    parameters: []
  id: System.Collections.Hashtable.Clear
- uid: System.Collections.Hashtable.Clone
  href: System.Collections.Hashtable.yml
  name: Clone()
  fullName: System.Collections.Hashtable.Clone()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 334
  syntax:
    content:
      CSharp: public virtual object Clone()
    parameters: []
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Hashtable.Clone
- uid: System.Collections.Hashtable.Contains(System.Object)
  href: System.Collections.Hashtable.yml
  name: Contains(object)
  fullName: System.Collections.Hashtable.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 357
  syntax:
    content:
      CSharp: public virtual bool Contains(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.Contains(System.Object)
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  href: System.Collections.Hashtable.yml
  name: ContainsKey(object)
  fullName: System.Collections.Hashtable.ContainsKey(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 365
  syntax:
    content:
      CSharp: public virtual bool ContainsKey(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.ContainsKey(System.Object)
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  href: System.Collections.Hashtable.yml
  name: ContainsValue(object)
  fullName: System.Collections.Hashtable.ContainsValue(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 405
  syntax:
    content:
      CSharp: public virtual bool ContainsValue(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.ContainsValue(System.Object)
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  href: System.Collections.Hashtable.yml
  name: CopyTo(Array, int)
  fullName: System.Collections.Hashtable.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 467
  syntax:
    content:
      CSharp: public virtual void CopyTo(Array array, int arrayIndex)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: arrayIndex
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
- uid: System.Collections.Hashtable.Item(System.Object)
  href: System.Collections.Hashtable.yml
  name: this[object]
  fullName: System.Collections.Hashtable.this[object]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 525
  syntax:
    content:
      CSharp: public virtual Object this[Object key] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Hashtable.Item(System.Object)
- uid: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Hashtable.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 664
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Hashtable.GetEnumerator
  href: System.Collections.Hashtable.yml
  name: GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 674
  syntax:
    content:
      CSharp: public virtual IDictionaryEnumerator GetEnumerator()
    parameters: []
    return:
      id: IDictionaryEnumerator
      type:
        id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        isExternal: true
  id: System.Collections.Hashtable.GetEnumerator
- uid: System.Collections.Hashtable.GetHash(System.Object)
  href: System.Collections.Hashtable.yml
  name: GetHash(object)
  fullName: System.Collections.Hashtable.GetHash(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 682
  syntax:
    content:
      CSharp: protected virtual int GetHash(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Hashtable.GetHash(System.Object)
- uid: System.Collections.Hashtable.IsReadOnly
  href: System.Collections.Hashtable.yml
  name: IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 690
  syntax:
    content:
      CSharp: public virtual bool IsReadOnly { get; }
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.IsReadOnly
- uid: System.Collections.Hashtable.IsFixedSize
  href: System.Collections.Hashtable.yml
  name: IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 695
  syntax:
    content:
      CSharp: public virtual bool IsFixedSize { get; }
    parameters:
    - id: IsFixedSize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.IsFixedSize
- uid: System.Collections.Hashtable.IsSynchronized
  href: System.Collections.Hashtable.yml
  name: IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 701
  syntax:
    content:
      CSharp: public virtual bool IsSynchronized { get; }
    parameters:
    - id: IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.IsSynchronized
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  href: System.Collections.Hashtable.yml
  name: KeyEquals(object, object)
  fullName: System.Collections.Hashtable.KeyEquals(object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 710
  syntax:
    content:
      CSharp: protected virtual bool KeyEquals(object item, object key)
    parameters:
    - id: item
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
- uid: System.Collections.Hashtable.Keys
  href: System.Collections.Hashtable.yml
  name: Keys
  fullName: System.Collections.Hashtable.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 735
  syntax:
    content:
      CSharp: public virtual ICollection Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Hashtable.Keys
- uid: System.Collections.Hashtable.Values
  href: System.Collections.Hashtable.yml
  name: Values
  fullName: System.Collections.Hashtable.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 754
  syntax:
    content:
      CSharp: public virtual ICollection Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Hashtable.Values
- uid: System.Collections.Hashtable.Remove(System.Object)
  href: System.Collections.Hashtable.yml
  name: Remove(object)
  fullName: System.Collections.Hashtable.Remove(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 944
  syntax:
    content:
      CSharp: public virtual void Remove(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Hashtable.Remove(System.Object)
- uid: System.Collections.Hashtable.SyncRoot
  href: System.Collections.Hashtable.yml
  name: SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 989
  syntax:
    content:
      CSharp: public virtual Object SyncRoot { get; }
    parameters:
    - id: SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Hashtable.SyncRoot
- uid: System.Collections.Hashtable.Count
  href: System.Collections.Hashtable.yml
  name: Count
  fullName: System.Collections.Hashtable.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 1003
  syntax:
    content:
      CSharp: public virtual int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Hashtable.Count
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  href: System.Collections.Hashtable.yml
  name: Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 1010
  syntax:
    content:
      CSharp: public static Hashtable Synchronized(Hashtable table)
    parameters:
    - id: table
      type:
        id: System.Collections.Hashtable
        name: Hashtable
        href: System.Collections.Hashtable.yml
    return:
      id: Hashtable
      type:
        id: System.Collections.Hashtable
        name: Hashtable
        href: System.Collections.Hashtable.yml
  id: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
