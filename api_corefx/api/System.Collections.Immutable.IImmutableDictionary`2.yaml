id: System.Collections.Immutable.IImmutableDictionary`2
href: System.Collections.Immutable.IImmutableDictionary`2.yaml
name:
  CSharp: IImmutableDictionary`2
qualifiedName:
  CSharp: System.Collections.Immutable.IImmutableDictionary`2
type: Interface
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
  startLine: 14
summary: An immutable key-value dictionary.
syntax:
  content:
    CSharp: public interface IImmutableDictionary<TKey, TValue>
items:
- id: System.Collections.Immutable.IImmutableDictionary`2.Clear
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: Clear
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.Clear
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 21
  summary: Gets an empty dictionary with equivalent ordering and key/value comparison rules.
  syntax:
    content:
      CSharp: '[Pure] IImmutableDictionary<TKey, TValue> Clear();'
    parameters: []
    return:
      id: IImmutableDictionary
- id: System.Collections.Immutable.IImmutableDictionary`2.Add(`0,`1)
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: Add
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.Add(`0,`1)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 34
  summary: Adds the specified key and value to the dictionary.
  syntax:
    content:
      CSharp: '[Pure] IImmutableDictionary<TKey, TValue> Add(TKey key, TValue value);'
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key of the entry to add.
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The value of the entry to add.
    return:
      id: IImmutableDictionary
      description: The new dictionary containing the additional key-value pair.
- id: System.Collections.Immutable.IImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: AddRange
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 43
  summary: Adds the specified key-value pairs to the dictionary.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] [Pure] IImmutableDictionary<TKey, TValue> AddRange(IEnumerable<KeyValuePair<TKey, TValue>> pairs);'
    parameters:
    - id: pairs
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        isExternal: true
      description: The pairs.
    return:
      id: IImmutableDictionary
      description: The new dictionary containing the additional key-value pairs.
- id: System.Collections.Immutable.IImmutableDictionary`2.SetItem(`0,`1)
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: SetItem
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.SetItem(`0,`1)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 57
  summary: Sets the specified key and value to the dictionary, possibly overwriting an existing value for the given key.
  syntax:
    content:
      CSharp: '[Pure] IImmutableDictionary<TKey, TValue> SetItem(TKey key, TValue value);'
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key of the entry to add.
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The value of the entry to add.
    return:
      id: IImmutableDictionary
      description: The new dictionary containing the additional key-value pair.
- id: System.Collections.Immutable.IImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: SetItems
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 65
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content:
      CSharp: '[Pure] [SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] IImmutableDictionary<TKey, TValue> SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items);'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        isExternal: true
      description: The key=value pairs to set on the dictionary.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      id: IImmutableDictionary
      description: An immutable dictionary.
- id: System.Collections.Immutable.IImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: RemoveRange
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 74
  summary: Removes the specified keys from the dictionary with their associated values.
  syntax:
    content:
      CSharp: '[Pure] IImmutableDictionary<TKey, TValue> RemoveRange(IEnumerable<TKey> keys);'
    parameters:
    - id: keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: System.Collections.Generic.IEnumerable{`0}
        isExternal: true
      description: The keys to remove.
    return:
      id: IImmutableDictionary
      description: A new dictionary with those keys removed; or this instance if those keys are not in the dictionary.
- id: System.Collections.Immutable.IImmutableDictionary`2.Remove(`0)
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.Remove(`0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 82
  summary: Removes the specified key from the dictionary with its associated value.
  syntax:
    content:
      CSharp: '[Pure] IImmutableDictionary<TKey, TValue> Remove(TKey key);'
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key to remove.
    return:
      id: IImmutableDictionary
      description: A new dictionary with the matching entry removed; or this instance if the key is not in the dictionary.
- id: System.Collections.Immutable.IImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: Contains
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 92
  summary: Determines whether this dictionary contains the specified key-value pair.
  syntax:
    content:
      CSharp: '[Pure] bool Contains(KeyValuePair<TKey, TValue> pair);'
    parameters:
    - id: pair
      type:
        id: System.Collections.Generic.KeyValuePair{`0,`1}
        name: System.Collections.Generic.KeyValuePair{`0,`1}
        isExternal: true
      description: The key value pair.
    return:
      id: Boolean
      description: true if this dictionary contains the key-value pair; otherwise, false.
- id: System.Collections.Immutable.IImmutableDictionary`2.TryGetKey(`0,`0@)
  href: System.Collections.Immutable.IImmutableDictionary`2.yaml
  name:
    CSharp: TryGetKey
  qualifiedName:
    CSharp: System.Collections.Immutable.IImmutableDictionary`2.TryGetKey(`0,`0@)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableDictionary.cs
    startLine: 107
  summary: Searches the dictionary for a given key and returns the equal key it finds, if any.
  syntax:
    content:
      CSharp: '[Pure] bool TryGetKey(TKey equalKey, out TKey actualKey);'
    parameters:
    - id: equalKey
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key to search for.
    - id: actualKey
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key from the dictionary that the search found, or  if the search yielded no match.
    return:
      id: Boolean
      description: A value indicating whether the search was successful.
