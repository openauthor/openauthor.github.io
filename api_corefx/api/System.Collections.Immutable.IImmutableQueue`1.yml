items:
- uid: System.Collections.Immutable.IImmutableQueue`1
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: IImmutableQueue<T>
  fullName: System.Collections.Immutable.IImmutableQueue<T>
  type: Interface
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 13
  summary: An immutable queue.
  syntax:
    content:
      CSharp: public interface IImmutableQueue<T>
  id: System.Collections.Immutable.IImmutableQueue`1
  children:
  - System.Collections.Immutable.IImmutableQueue`1.IsEmpty
  - System.Collections.Immutable.IImmutableQueue`1.Clear
  - System.Collections.Immutable.IImmutableQueue`1.Peek
  - System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)
  - System.Collections.Immutable.IImmutableQueue`1.Dequeue
- uid: System.Collections.Immutable.IImmutableQueue`1.IsEmpty
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: IsEmpty
  fullName: System.Collections.Immutable.IImmutableQueue<T>.IsEmpty
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 23
  summary: Gets a value indicating whether this is the empty queue.
  syntax:
    content:
      CSharp: '[Pure] bool IsEmpty { get; }'
    parameters:
    - id: IsEmpty
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.Collections.Immutable.IImmutableQueue`1.IsEmpty
- uid: System.Collections.Immutable.IImmutableQueue`1.Clear
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: Clear()
  fullName: System.Collections.Immutable.IImmutableQueue<T>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 29
  summary: Gets an empty queue.
  syntax:
    content:
      CSharp: '[Pure] IImmutableQueue<T> Clear();'
    parameters: []
    return:
      id: IImmutableQueue
  id: System.Collections.Immutable.IImmutableQueue`1.Clear
- uid: System.Collections.Immutable.IImmutableQueue`1.Peek
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: Peek()
  fullName: System.Collections.Immutable.IImmutableQueue<T>.Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 39
  summary: Gets the element at the front of the queue.
  syntax:
    content:
      CSharp: '[Pure] T Peek();'
    parameters: []
    return:
      id: T
      description: The element on the top of the stack.
  id: System.Collections.Immutable.IImmutableQueue`1.Peek
- uid: System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: Enqueue(T)
  fullName: System.Collections.Immutable.IImmutableQueue<T>.Enqueue(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 49
  summary: Adds an element to the back of the queue.
  syntax:
    content:
      CSharp: '[Pure] IImmutableQueue<T> Enqueue(T value);'
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The value.
    return:
      id: IImmutableQueue
      description: The new queue.
  id: System.Collections.Immutable.IImmutableQueue`1.Enqueue(`0)
- uid: System.Collections.Immutable.IImmutableQueue`1.Dequeue
  href: System.Collections.Immutable.IImmutableQueue`1.yml
  name: Dequeue()
  fullName: System.Collections.Immutable.IImmutableQueue<T>.Dequeue()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableQueue.cs
    startLine: 57
  summary: Returns a queue that is missing the front element.
  syntax:
    content:
      CSharp: '[Pure] IImmutableQueue<T> Dequeue();'
    parameters: []
    return:
      id: IImmutableQueue
      description: A queue; never null.
  id: System.Collections.Immutable.IImmutableQueue`1.Dequeue
