items:
- uid: System.Collections.Immutable.IImmutableStack`1
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: IImmutableStack<T>
  fullName: System.Collections.Immutable.IImmutableStack<T>
  type: Interface
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 13
  summary: An immutable stack.
  syntax:
    content:
      CSharp: 'public interface IImmutableStack<T> : IEnumerable<T>, IEnumerable'
  id: System.Collections.Immutable.IImmutableStack`1
  children:
  - System.Collections.Immutable.IImmutableStack`1.IsEmpty
  - System.Collections.Immutable.IImmutableStack`1.Clear
  - System.Collections.Immutable.IImmutableStack`1.Push(`0)
  - System.Collections.Immutable.IImmutableStack`1.Pop
  - System.Collections.Immutable.IImmutableStack`1.Peek
- uid: System.Collections.Immutable.IImmutableStack`1.IsEmpty
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: IsEmpty
  fullName: System.Collections.Immutable.IImmutableStack<T>.IsEmpty
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 23
  summary: Gets a value indicating whether this is the empty stack.
  syntax:
    content:
      CSharp: '[Pure] bool IsEmpty { get; }'
    parameters:
    - id: IsEmpty
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.IImmutableStack`1.IsEmpty
- uid: System.Collections.Immutable.IImmutableStack`1.Clear
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: Clear()
  fullName: System.Collections.Immutable.IImmutableStack<T>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 29
  summary: Gets an empty stack.
  syntax:
    content:
      CSharp: public IImmutableStack<T> Clear()
    parameters: []
    return:
      id: IImmutableStack
      type:
        id: System.Collections.Immutable.IImmutableStack`1
        name: IImmutableStack<T>
        href: System.Collections.Immutable.IImmutableStack`1.yml
  id: System.Collections.Immutable.IImmutableStack`1.Clear
- uid: System.Collections.Immutable.IImmutableStack`1.Push(`0)
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: Push(T)
  fullName: System.Collections.Immutable.IImmutableStack<T>.Push(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 37
  summary: Pushes an element onto a stack and returns the new stack.
  syntax:
    content:
      CSharp: public IImmutableStack<T> Push(T value)
    parameters:
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The element to push onto the stack.
    return:
      id: IImmutableStack
      type:
        id: System.Collections.Immutable.IImmutableStack`1
        name: IImmutableStack<T>
        href: System.Collections.Immutable.IImmutableStack`1.yml
      description: The new stack.
  id: System.Collections.Immutable.IImmutableStack`1.Push(`0)
- uid: System.Collections.Immutable.IImmutableStack`1.Pop
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: Pop()
  fullName: System.Collections.Immutable.IImmutableStack<T>.Pop()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 45
  summary: Pops the top element off the stack.
  syntax:
    content:
      CSharp: public IImmutableStack<T> Pop()
    parameters: []
    return:
      id: IImmutableStack
      type:
        id: System.Collections.Immutable.IImmutableStack`1
        name: IImmutableStack<T>
        href: System.Collections.Immutable.IImmutableStack`1.yml
      description: The new stack; never null
  id: System.Collections.Immutable.IImmutableStack`1.Pop
- uid: System.Collections.Immutable.IImmutableStack`1.Peek
  href: System.Collections.Immutable.IImmutableStack`1.yml
  name: Peek()
  fullName: System.Collections.Immutable.IImmutableStack<T>.Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/IImmutableStack.cs
    startLine: 52
  summary: Gets the element on the top of the stack.
  syntax:
    content:
      CSharp: public T Peek()
    parameters: []
    return:
      id: T
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Immutable.IImmutableStack`1.Peek
