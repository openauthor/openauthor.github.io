items:
- uid: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: ImmutableArray
  fullName: System.Collections.Immutable.ImmutableArray
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 13
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml).
  syntax:
    content:
      CSharp: public static class ImmutableArray
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: System.Collections.Immutable.ImmutableArray
  children:
  - System.Collections.Immutable.ImmutableArray.Create``1
  - System.Collections.Immutable.ImmutableArray.Create``1(``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)
  - System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableArray.Create``1(``0[])
  - System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
  - System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
  - System.Collections.Immutable.ImmutableArray.CreateBuilder``1
  - System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)
  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
- uid: System.Collections.Immutable.ImmutableArray.Create``1
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>()
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 25
  summary: Creates an empty ImmutableArray{T}.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>()'
    parameters: []
    return:
      id: ImmutableArray
      description: An empty array.
  id: System.Collections.Immutable.ImmutableArray.Create``1
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 37
  summary: Creates an ImmutableArray{T} with the specified element as its only member.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(T item)'
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The element to store in the array.
    return:
      id: ImmutableArray
      description: A 1-element array.
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0)
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 51
  summary: Creates an ImmutableArray{T} with the specified elements.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(T item1, T item2)'
    parameters:
    - id: item1
      type:
        id: T
        name: T
        href: T
      description: The first element to store in the array.
    - id: item2
      type:
        id: T
        name: T
        href: T
      description: The second element to store in the array.
    return:
      id: ImmutableArray
      description: A 2-element array.
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 66
  summary: Creates an ImmutableArray{T} with the specified elements.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(T item1, T item2, T item3)'
    parameters:
    - id: item1
      type:
        id: T
        name: T
        href: T
      description: The first element to store in the array.
    - id: item2
      type:
        id: T
        name: T
        href: T
      description: The second element to store in the array.
    - id: item3
      type:
        id: T
        name: T
        href: T
      description: The third element to store in the array.
    return:
      id: ImmutableArray
      description: A 3-element array.
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T, T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T, T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 82
  summary: Creates an ImmutableArray{T} with the specified elements.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(T item1, T item2, T item3, T item4)'
    parameters:
    - id: item1
      type:
        id: T
        name: T
        href: T
      description: The first element to store in the array.
    - id: item2
      type:
        id: T
        name: T
        href: T
      description: The second element to store in the array.
    - id: item3
      type:
        id: T
        name: T
        href: T
      description: The third element to store in the array.
    - id: item4
      type:
        id: T
        name: T
        href: T
      description: The fourth element to store in the array.
    return:
      id: ImmutableArray
      description: A 4-element array.
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 95
  summary: Creates an ImmutableArray{T} populated with the contents of the specified sequence.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> CreateRange<T>(IEnumerable<T> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The elements to store in the array.
    return:
      id: ImmutableArray
      description: An immutable array.
  id: System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(params T[])
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 146
  summary: Creates an empty ImmutableArray{T}.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(params T[] items)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The elements to store in the array.
    return:
      id: ImmutableArray
      description: An immutable array.
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0[])
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T[], int, int)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T[], int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 171
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray](System.Collections.Immutable.ImmutableArray.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(T[] items, int start, int length)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The array to initialize the array with. A defensive copy is made.
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements from the source array to include in the resulting array.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)
- uid: System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(ImmutableArray<T>, int, int)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(System.Collections.Immutable.ImmutableArray<T>, int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 204
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray](System.Collections.Immutable.ImmutableArray.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T> Create<T>(ImmutableArray<T> items, int start, int length)'
    parameters:
    - id: items
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: >-
        The array to initialize the array with.

        The selected array segment may be copied into a new array.
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements from the source array to include in the resulting array.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TResult>(ImmutableArray<TSource>, Func<TSource, TResult>)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Func<TSource, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 235
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<TResult> CreateRange<TSource, TResult>(ImmutableArray<TSource> items, Func<TSource, TResult> selector)'
    parameters:
    - id: items
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The source array to initialize the resulting array with.
    - id: selector
      type:
        id: System.Func{``0,``1}
        name: System.Func{``0,``1}
        isExternal: true
      description: The function to apply to each element from the source array.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TResult>(ImmutableArray<TSource>, int, int, Func<TSource, TResult>)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, int, int, System.Func<TSource, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 268
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<TResult> CreateRange<TSource, TResult>(ImmutableArray<TSource> items, int start, int length, Func<TSource, TResult> selector)'
    parameters:
    - id: items
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The source array to initialize the resulting array with.
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements from the source array to include in the resulting array.
    - id: selector
      type:
        id: System.Func{``0,``1}
        name: System.Func{``0,``1}
        isExternal: true
      description: The function to apply to each element from the source array included in the resulting array.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource>, Func<TSource, TArg, TResult>, TArg)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TArg, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Func<TSource, TArg, TResult>, TArg)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 302
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<TResult> CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource> items, Func<TSource, TArg, TResult> selector, TArg arg)'
    parameters:
    - id: items
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The source array to initialize the resulting array with.
    - id: selector
      type:
        id: System.Func{``0,``1,``2}
        name: System.Func{``0,``1,``2}
        isExternal: true
      description: The function to apply to each element from the source array.
    - id: arg
      type:
        id: TArg
        name: TArg
        href: TArg
      description: An argument to be passed to the selector mapping function.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource>, int, int, Func<TSource, TArg, TResult>, TArg)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TArg, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, int, int, System.Func<TSource, TArg, TResult>, TArg)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 336
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<TResult> CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource> items, int start, int length, Func<TSource, TArg, TResult> selector, TArg arg)'
    parameters:
    - id: items
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The source array to initialize the resulting array with.
    - id: start
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements from the source array to include in the resulting array.
    - id: selector
      type:
        id: System.Func{``0,``1,``2}
        name: System.Func{``0,``1,``2}
        isExternal: true
      description: The function to apply to each element from the source array included in the resulting array.
    - id: arg
      type:
        id: TArg
        name: TArg
        href: TArg
      description: An argument to be passed to the selector mapping function.
    return:
      id: ImmutableArray
  id: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
- uid: System.Collections.Immutable.ImmutableArray.CreateBuilder``1
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableArray.CreateBuilder<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 364
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1.Builder](System.Collections.Immutable.ImmutableArray`1.Builder.yml) class.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T>.Builder CreateBuilder<T>()'
    parameters: []
    return:
      id: Builder
      description: A new builder.
  id: System.Collections.Immutable.ImmutableArray.CreateBuilder``1
- uid: System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateBuilder<T>(int)
  fullName: System.Collections.Immutable.ImmutableArray.CreateBuilder<T>(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 376
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1.Builder](System.Collections.Immutable.ImmutableArray`1.Builder.yml) class.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<T>.Builder CreateBuilder<T>(int initialCapacity)'
    parameters:
    - id: initialCapacity
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The size of the initial array backing the builder.
    return:
      id: Builder
      description: A new builder.
  id: System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)
- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: ToImmutableArray<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableArray.ToImmutableArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 388
  summary: Enumerates a sequence exactly once and produces an immutable array of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableArray<TSource> ToImmutableArray<TSource>(this IEnumerable<TSource> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    return:
      id: ImmutableArray
      description: An immutable array.
  id: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, T)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 420
  summary: >-
    Searches an entire one-dimensional sorted System.Array for a specific element,

    using the System.IComparable<T> generic interface implemented by each element

    of the System.Array and by the specified object.
  syntax:
    content:
      CSharp: '[Pure] public static int BinarySearch<T>(this ImmutableArray<T> array, T value)'
    parameters:
    - id: array
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The sorted, one-dimensional array to search.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The object to search for.
    return:
      id: Int32
      description: >-
        The index of the specified value in the specified array, if value is found.

        If value is not found and value is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than value. If value is not found and value is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  id: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, T, IComparer<T>)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, T, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 451
  summary: >-
    Searches an entire one-dimensional sorted System.Array for a value using

    the specified System.Collections.Generic.IComparer<T> generic interface.
  syntax:
    content:
      CSharp: '[Pure] public static int BinarySearch<T>(this ImmutableArray<T> array, T value, IComparer<T> comparer)'
    parameters:
    - id: array
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The sorted, one-dimensional array to search.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The object to search for.
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: >-
        The System.Collections.Generic.IComparer<T> implementation to use when comparing

        elements; or null to use the System.IComparable<T> implementation of each

        element.
    return:
      id: Int32
      description: >-
        The index of the specified value in the specified array, if value is found.

        If value is not found and value is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than value. If value is not found and value is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  id: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, int, int, T)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, int, int, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 480
  summary: >-
    Searches a range of elements in a one-dimensional sorted System.Array for

    a value, using the System.IComparable<T> generic interface implemented by

    each element of the System.Array and by the specified value.
  syntax:
    content:
      CSharp: '[Pure] public static int BinarySearch<T>(this ImmutableArray<T> array, int index, int length, T value)'
    parameters:
    - id: array
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The sorted, one-dimensional array to search.
    - id: index
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The starting index of the range to search.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The length of the range to search.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The object to search for.
    return:
      id: Int32
      description: >-
        The index of the specified value in the specified array, if value is found.

        If value is not found and value is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than value. If value is not found and value is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  id: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, int, int, T, IComparer<T>)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, int, int, T, System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 521
  summary: >-
    Searches a range of elements in a one-dimensional sorted System.Array for

    a value, using the specified System.Collections.Generic.IComparer<T> generic

    interface.
  syntax:
    content:
      CSharp: '[Pure] public static int BinarySearch<T>(this ImmutableArray<T> array, int index, int length, T value, IComparer<T> comparer)'
    parameters:
    - id: array
      type:
        id: System.Collections.Immutable.ImmutableArray{``0}
        name: ImmutableArray
        href: System.Collections.Immutable.ImmutableArray{``0}
      description: The sorted, one-dimensional array to search.
    - id: index
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The starting index of the range to search.
    - id: length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The length of the range to search.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The object to search for.
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: >-
        The System.Collections.Generic.IComparer<T> implementation to use when comparing

        elements; or null to use the System.IComparable<T> implementation of each

        element.
    return:
      id: Int32
      description: >-
        The index of the specified value in the specified array, if value is found.

        If value is not found and value is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than value. If value is not found and value is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  id: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
