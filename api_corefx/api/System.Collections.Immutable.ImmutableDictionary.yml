items:
- uid: System.Collections.Immutable.ImmutableDictionary
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ImmutableDictionary
  fullName: System.Collections.Immutable.ImmutableDictionary
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 14
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableDictionary`2](System.Collections.Immutable.ImmutableDictionary`2.yml).
  syntax:
    content:
      CSharp: public class ImmutableDictionary
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Immutable.ImmutableDictionary
  children:
  - System.Collections.Immutable.ImmutableDictionary.Create``2
  - System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: Create<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 23
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>()
    parameters: []
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.Create``2
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: Create<TKey, TValue>(IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 38
  summary: Returns an empty collection with the specified key comparer.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>(IEqualityComparer<TKey> keyComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: Create<TKey, TValue>(IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.Create<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 54
  summary: Returns an empty collection with the specified comparers.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> Create<TKey, TValue>(IEqualityComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TValue>
        isExternal: true
      description: The value comparer.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 67
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateRange<TKey, TValue>(IEqualityComparer<TKey>, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 82
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEqualityComparer<TKey> keyComparer, IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
- uid: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateRange<TKey, TValue>(IEqualityComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 98
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEqualityComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer, IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TValue>
        isExternal: true
      description: The value comparer.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateBuilder<TKey, TValue>()
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 111
  summary: Creates a new immutable dictionary builder.
  syntax:
    content:
      CSharp: public static Builder CreateBuilder<TKey, TValue>()
    parameters: []
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
      description: The new builder.
  id: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 124
  summary: Creates a new immutable dictionary builder.
  syntax:
    content:
      CSharp: public static Builder CreateBuilder<TKey, TValue>(IEqualityComparer<TKey> keyComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
      description: The new builder.
  id: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: CreateBuilder<TKey, TValue>(IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 138
  summary: Creates a new immutable dictionary builder.
  syntax:
    content:
      CSharp: public static Builder CreateBuilder<TKey, TValue>(IEqualityComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer.
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TValue>
        isExternal: true
      description: The value comparer.
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}.Builder
      description: The new builder.
  id: System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 156
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IEqualityComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TValue>
        isExternal: true
      description: The function that will produce the value for the map from each sequence element.
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer to use for the map.
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``2}
        name: IEqualityComparer<TValue>
        isExternal: true
      description: The value comparer to use for the map.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``1,``2}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``1,``2}
      description: The immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 179
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IEqualityComparer<TKey> keyComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TValue>
        isExternal: true
      description: The function that will produce the value for the map from each sequence element.
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer to use for the map.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``1,``2}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``1,``2}
      description: The immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 193
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TSource> ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
      description: The function that will produce the key for the map from each sequence element.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``1,``0}
        name: ImmutableDictionary<TKey, TSource>
        href: System.Collections.Immutable.ImmutableDictionary{``1,``0}
      description: The immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 208
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TSource> ToImmutableDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> keyComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
      description: The function that will produce the key for the map from each sequence element.
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer to use for the map.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``1,``0}
        name: ImmutableDictionary<TKey, TSource>
        href: System.Collections.Immutable.ImmutableDictionary{``1,``0}
      description: The immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 224
  summary: Constructs an immutable dictionary based on some transformation of a sequence.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TValue>
        isExternal: true
      description: The function that will produce the value for the map from each sequence element.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``1,``2}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``1,``2}
      description: The immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 239
  summary: Creates an immutable dictionary given a sequence of key=value pairs.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source, IEqualityComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The sequence of key=value pairs.
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer to use when building the immutable map.
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TValue>
        isExternal: true
      description: The value comparer to use for the immutable map.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: An immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 263
  summary: Creates an immutable dictionary given a sequence of key=value pairs.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source, IEqualityComparer<TKey> keyComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The sequence of key=value pairs.
    - id: keyComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TKey>
        isExternal: true
      description: The key comparer to use when building the immutable map.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: An immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 277
  summary: Creates an immutable dictionary given a sequence of key=value pairs.
  syntax:
    content:
      CSharp: public static ImmutableDictionary<TKey, TValue> ToImmutableDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The sequence of key=value pairs.
    return:
      id: ImmutableDictionary
      type:
        id: System.Collections.Immutable.ImmutableDictionary{``0,``1}
        name: ImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableDictionary{``0,``1}
      description: An immutable map.
  id: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
- uid: System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: Contains<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.Contains<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 295
  summary: Determines whether this map contains the specified key-value pair.
  syntax:
    content:
      CSharp: public static bool Contains<TKey, TValue>(IImmutableDictionary<TKey, TValue> map, TKey key, TValue value)
    parameters:
    - id: map
      type:
        id: System.Collections.Immutable.IImmutableDictionary{``0,``1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{``0,``1}
      description: The map to search.
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key to check for.
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The value to check for on a matching key, if found.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if this map contains the key-value pair; otherwise, false.
  id: System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 309
  summary: Gets the value for a given key if a matching key exists in the dictionary.
  syntax:
    content:
      CSharp: public static TValue GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue> dictionary, TKey key)
    parameters:
    - id: dictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{``0,``1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{``0,``1}
      description: The dictionary to retrieve the value from.
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key to search for.
    return:
      id: TValue
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The value for the key, or the default value of type  if no matching key was found.
  id: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  href: System.Collections.Immutable.ImmutableDictionary.yml
  name: GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey, TValue>(System.Collections.Immutable.IImmutableDictionary<TKey, TValue>, TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableDictionary.cs
    startLine: 326
  summary: Gets the value for a given key if a matching key exists in the dictionary.
  syntax:
    content:
      CSharp: public static TValue GetValueOrDefault<TKey, TValue>(IImmutableDictionary<TKey, TValue> dictionary, TKey key, TValue defaultValue)
    parameters:
    - id: dictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{``0,``1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{``0,``1}
      description: The dictionary to retrieve the value from.
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key to search for.
    - id: defaultValue
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The default value to return if no matching key is found in the dictionary.
    return:
      id: TValue
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The value for the key, or  if no matching key was found.
  id: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
