id: System.Collections.Immutable.ImmutableHashSet
href: System.Collections.Immutable.ImmutableHashSet.yaml
name:
  CSharp: ImmutableHashSet
qualifiedName:
  CSharp: System.Collections.Immutable.ImmutableHashSet
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
  startLine: 11
summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableHashSet`1](System.Collections.Immutable.ImmutableHashSet`1.yaml).
syntax:
  content:
    CSharp: public static class ImmutableHashSet
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Collections.Immutable.ImmutableHashSet.Create``1
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 18
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>()'
    parameters: []
    return:
      id: ImmutableHashSet
      description: The immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 32
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer.
    return:
      id: ImmutableHashSet
      description: The immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 44
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>(T item)'
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 57
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer, T item)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: CreateRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 69
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> CreateRange<T>(IEnumerable<T> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: CreateRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 82
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> CreateRange<T>(IEqualityComparer<T> equalityComparer, IEnumerable<T> items)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 94
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>(params T[] items)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 107
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer, params T[] items)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer.
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: CreateBuilder
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 118
  summary: Creates a new immutable hash set builder.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T>.Builder CreateBuilder<T>()'
    parameters: []
    return:
      id: Builder
      description: The immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: CreateBuilder
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 132
  summary: Creates a new immutable hash set builder.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<T>.Builder CreateBuilder<T>(IEqualityComparer<T> equalityComparer)'
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer.
    return:
      id: Builder
      description: The immutable collection.
- id: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: ToImmutableHashSet
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 145
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(this IEnumerable<TSource> source, IEqualityComparer<TSource> equalityComparer)'
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer to use for initializing and adding members to the hash set.
    return:
      id: ImmutableHashSet
      description: An immutable set.
- id: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yaml
  name:
    CSharp: ToImmutableHashSet
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 163
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(this IEnumerable<TSource> source)'
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    return:
      id: ImmutableHashSet
      description: An immutable set.
