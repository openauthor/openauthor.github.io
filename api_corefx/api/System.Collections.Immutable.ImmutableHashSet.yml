items:
- uid: System.Collections.Immutable.ImmutableHashSet
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: ImmutableHashSet
  fullName: System.Collections.Immutable.ImmutableHashSet
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 11
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableHashSet`1](System.Collections.Immutable.ImmutableHashSet`1.yml).
  syntax:
    content:
      CSharp: public class ImmutableHashSet
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Immutable.ImmutableHashSet
  children:
  - System.Collections.Immutable.ImmutableHashSet.Create``1
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 18
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>()
    parameters: []
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 32
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<T>
        isExternal: true
      description: The equality comparer.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 44
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>(T item)
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>(IEqualityComparer<T>, T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 57
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer, T item)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<T>
        isExternal: true
      description: The equality comparer.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 69
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> CreateRange<T>(IEnumerable<T> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<T>
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(System.Collections.Generic.IEqualityComparer<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 82
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> CreateRange<T>(IEqualityComparer<T> equalityComparer, IEnumerable<T> items)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<T>
        isExternal: true
      description: The equality comparer.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<T>
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>(params T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 94
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>(params T[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: T[]
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: Create<T>(IEqualityComparer<T>, params T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(System.Collections.Generic.IEqualityComparer<T>, params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 107
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<T> Create<T>(IEqualityComparer<T> equalityComparer, params T[] items)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<T>
        isExternal: true
      description: The equality comparer.
    - id: items
      type:
        id: System.Array
        name: T[]
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<T>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 118
  summary: Creates a new immutable hash set builder.
  syntax:
    content:
      CSharp: public static Builder CreateBuilder<T>()
    parameters: []
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: CreateBuilder<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>(System.Collections.Generic.IEqualityComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 132
  summary: Creates a new immutable hash set builder.
  syntax:
    content:
      CSharp: public static Builder CreateBuilder<T>(IEqualityComparer<T> equalityComparer)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<T>
        isExternal: true
      description: The equality comparer.
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableHashSet{``0}.Builder
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 145
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(IEnumerable<TSource> source, IEqualityComparer<TSource> equalityComparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate.
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
      description: The equality comparer to use for initializing and adding members to the hash set.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<TSource>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: An immutable set.
  id: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableHashSet.yml
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet.cs
    startLine: 163
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: public static ImmutableHashSet<TSource> ToImmutableHashSet<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
      description: The sequence to enumerate.
    return:
      id: ImmutableHashSet
      type:
        id: System.Collections.Immutable.ImmutableHashSet{``0}
        name: ImmutableHashSet<TSource>
        href: System.Collections.Immutable.ImmutableHashSet{``0}
      description: An immutable set.
  id: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
