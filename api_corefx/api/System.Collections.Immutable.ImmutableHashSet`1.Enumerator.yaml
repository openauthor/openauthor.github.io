id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator
href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yaml
name:
  CSharp: Enumerator
qualifiedName:
  CSharp: System.Collections.Immutable.ImmutableHashSet`1.Enumerator
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
  startLine: 15
summary: Enumerates the contents of the collection in an allocation-free manner.
syntax:
  content:
    CSharp: public struct Enumerator
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Current
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yaml
  name:
    CSharp: Current
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 53
  summary: Gets the current element.
  syntax:
    content:
      CSharp: public T Current { get; }
    parameters:
    - id: Current
      type:
        id: T
        name: T
        href: T
- id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.MoveNext
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yaml
  name:
    CSharp: MoveNext
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.MoveNext
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 77
  summary: Advances the enumerator to the next element of the collection.
  syntax:
    content:
      CSharp: public bool MoveNext()
    parameters: []
    return:
      id: Boolean
      description: true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
- id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Reset
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yaml
  name:
    CSharp: Reset
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Reset
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 99
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  syntax:
    content:
      CSharp: public void Reset()
    parameters: []
    return:
      id: Void
- id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Dispose
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yaml
  name:
    CSharp: Dispose
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Dispose
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 112
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
    return:
      id: Void
