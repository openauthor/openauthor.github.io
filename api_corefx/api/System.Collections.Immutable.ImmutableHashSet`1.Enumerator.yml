items:
- uid: System.Collections.Immutable.ImmutableHashSet`1.Enumerator
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yml
  name: Enumerator
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Enumerator
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 15
  summary: Enumerates the contents of the collection in an allocation-free manner.
  syntax:
    content:
      CSharp: public struct Enumerator
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator
  children:
  - System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Current
  - System.Collections.Immutable.ImmutableHashSet`1.Enumerator.MoveNext
  - System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Reset
  - System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Dispose
- uid: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Current
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yml
  name: Current
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 53
  summary: Gets the current element.
  syntax:
    content:
      CSharp: public T Current { get; }
    parameters:
    - id: Current
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Current
- uid: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.MoveNext
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yml
  name: MoveNext()
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Enumerator.MoveNext()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 77
  summary: Advances the enumerator to the next element of the collection.
  syntax:
    content:
      CSharp: public bool MoveNext()
    parameters: []
    return:
      id: Boolean
      description: true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
  id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.MoveNext
- uid: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Reset
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yml
  name: Reset()
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Enumerator.Reset()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 99
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  syntax:
    content:
      CSharp: public void Reset()
    parameters: []
  id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Reset
- uid: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Dispose
  href: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.yml
  name: Dispose()
  fullName: System.Collections.Immutable.ImmutableHashSet<T>.Enumerator.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableHashSet`1+Enumerator.cs
    startLine: 112
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
  id: System.Collections.Immutable.ImmutableHashSet`1.Enumerator.Dispose
