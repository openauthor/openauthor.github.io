id: System.Collections.Immutable.ImmutableList
href: System.Collections.Immutable.ImmutableList.yaml
name:
  CSharp: ImmutableList
qualifiedName:
  CSharp: System.Collections.Immutable.ImmutableList
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
  startLine: 12
summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableList`1](System.Collections.Immutable.ImmutableList`1.yaml).
syntax:
  content:
    CSharp: public static class ImmutableList
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Collections.Immutable.ImmutableList.Create``1
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.Create``1
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 19
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<T> Create<T>()'
    parameters: []
    return:
      id: ImmutableList
      description: The immutable collection.
- id: System.Collections.Immutable.ImmutableList.Create``1(``0)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.Create``1(``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 31
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<T> Create<T>(T item)'
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableList
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: CreateRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 43
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<T> CreateRange<T>(IEnumerable<T> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableList
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableList.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.Create``1(``0[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 55
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<T> Create<T>(params T[] items)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableList
      description: The new immutable collection.
- id: System.Collections.Immutable.ImmutableList.CreateBuilder``1
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: CreateBuilder
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.CreateBuilder``1
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 66
  summary: Creates a new immutable list builder.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<T>.Builder CreateBuilder<T>()'
    parameters: []
    return:
      id: Builder
      description: The immutable collection builder.
- id: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: ToImmutableList
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 78
  summary: Enumerates a sequence exactly once and produces an immutable list of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableList<TSource> ToImmutableList<TSource>(this IEnumerable<TSource> source)'
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    return:
      id: ImmutableList
      description: An immutable list.
- id: System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: Replace
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 98
  summary: Replaces the first equal element in the list with the specified element.
  syntax:
    content:
      CSharp: '[Pure] public static IImmutableList<T> Replace<T>(this IImmutableList<T> list, T oldValue, T newValue)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: oldValue
      type:
        id: T
        name: T
        href: T
      description: The element to replace.
    - id: newValue
      type:
        id: T
        name: T
        href: T
      description: The element to replace the old element with.
    return:
      id: IImmutableList
      description: The new list -- even if the value being replaced is equal to the new value for that position.
- id: System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 111
  summary: Removes the specified value from this list.
  syntax:
    content:
      CSharp: '[Pure] public static IImmutableList<T> Remove<T>(this IImmutableList<T> list, T value)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: The value to remove.
    return:
      id: IImmutableList
      description: A new list with the element removed, or this list if the element is not in this list.
- id: System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: RemoveRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 126
  summary: Removes the specified values from this list.
  syntax:
    content:
      CSharp: '[Pure] public static IImmutableList<T> RemoveRange<T>(this IImmutableList<T> list, IEnumerable<T> items)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to remove if matches are found in this list.
    return:
      id: IImmutableList
      description: A new list with the elements removed.
- id: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: IndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 147
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the ImmutableList<T>
  syntax:
    content:
      CSharp: '[Pure] public static int IndexOf<T>(this IImmutableList<T> list, T item)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    return:
      id: Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the ImmutableList<T> that extends from index

        to the last element, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: IndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 169
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the ImmutableList<T>
  syntax:
    content:
      CSharp: '[Pure] public static int IndexOf<T>(this IImmutableList<T> list, T item, IEqualityComparer<T> equalityComparer)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer to use in the search.
    return:
      id: Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the ImmutableList<T> that extends from index

        to the last element, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: IndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 195
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the range of elements in the ImmutableList<T>

    that extends from the specified index to the last element.
  syntax:
    content:
      CSharp: '[Pure] public static int IndexOf<T>(this IImmutableList<T> list, T item, int startIndex)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: startIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: >-
        The zero-based starting index of the search. 0 (zero) is valid in an empty

        list.
    return:
      id: Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the ImmutableList<T> that extends from index

        to the last element, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: IndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 224
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the range of elements in the ImmutableList<T>

    that extends from the specified index to the last element.
  syntax:
    content:
      CSharp: '[Pure] public static int IndexOf<T>(this IImmutableList<T> list, T item, int startIndex, int count)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: startIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: >-
        The zero-based starting index of the search. 0 (zero) is valid in an empty

        list.
    - id: count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements in the section to search.
    return:
      id: Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the ImmutableList<T> that extends from index

        to the last element, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: LastIndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 244
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the entire ImmutableList<T>.
  syntax:
    content:
      CSharp: '[Pure] public static int LastIndexOf<T>(this IImmutableList<T> list, T item)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    return:
      id: Int32
      description: >-
        The zero-based index of the last occurrence of item within the entire the

        ImmutableList<T>, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: LastIndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 272
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the entire ImmutableList<T>.
  syntax:
    content:
      CSharp: '[Pure] public static int LastIndexOf<T>(this IImmutableList<T> list, T item, IEqualityComparer<T> equalityComparer)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: equalityComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: System.Collections.Generic.IEqualityComparer{``0}
        isExternal: true
      description: The equality comparer to use in the search.
    return:
      id: Int32
      description: >-
        The zero-based index of the last occurrence of item within the entire the

        ImmutableList<T>, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: LastIndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 304
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the range of elements in the ImmutableList<T>

    that extends from the first element to the specified index.
  syntax:
    content:
      CSharp: '[Pure] public static int LastIndexOf<T>(this IImmutableList<T> list, T item, int startIndex)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: startIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The zero-based starting index of the backward search.
    return:
      id: Int32
      description: >-
        The zero-based index of the last occurrence of item within the range of elements

        in the ImmutableList<T> that extends from the first element

        to index, if found; otherwise, -1.
- id: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  href: System.Collections.Immutable.ImmutableList.yaml
  name:
    CSharp: LastIndexOf
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 338
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the range of elements in the ImmutableList<T>

    that extends from the first element to the specified index.
  syntax:
    content:
      CSharp: '[Pure] public static int LastIndexOf<T>(this IImmutableList<T> list, T item, int startIndex, int count)'
    parameters:
    - id: list
      type:
        id: System.Collections.Immutable.IImmutableList{``0}
        name: IImmutableList
        href: System.Collections.Immutable.IImmutableList{``0}
      description: The list to search.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: >-
        The object to locate in the ImmutableList<T>. The value

        can be null for reference types.
    - id: startIndex
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The zero-based starting index of the backward search.
    - id: count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of elements in the section to search.
    return:
      id: Int32
      description: >-
        The zero-based index of the last occurrence of item within the range of elements

        in the ImmutableList<T> that extends from the first element

        to index, if found; otherwise, -1.
