items:
- uid: System.Collections.Immutable.ImmutableQueue
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: ImmutableQueue
  fullName: System.Collections.Immutable.ImmutableQueue
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 13
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableQueue`1](System.Collections.Immutable.ImmutableQueue`1.yml).
  syntax:
    content:
      CSharp: public static class ImmutableQueue
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: System.Collections.Immutable.ImmutableQueue
  children:
  - System.Collections.Immutable.ImmutableQueue.Create``1
  - System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  - System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  - System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
- uid: System.Collections.Immutable.ImmutableQueue.Create``1
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: Create<T>()
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 21
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableQueue<T> Create<T>()'
    parameters: []
    return:
      id: ImmutableQueue
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableQueue.Create``1
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 33
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableQueue<T> Create<T>(T item)'
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableQueue
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableQueue.Create``1(``0)
- uid: System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableQueue.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 45
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableQueue<T> CreateRange<T>(IEnumerable<T> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableQueue
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: Create<T>(params T[])
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 65
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableQueue<T> Create<T>(params T[] items)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableQueue
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
- uid: System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  href: System.Collections.Immutable.ImmutableQueue.yml
  name: Dequeue<T>(IImmutableQueue<T>, out T)
  fullName: System.Collections.Immutable.ImmutableQueue.Dequeue<T>(System.Collections.Immutable.IImmutableQueue<T>, out T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue.cs
    startLine: 87
  summary: Retrieves the item at the head of the queue, and returns a queue with the head element removed.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", MessageId = "1#")] [Pure] public static IImmutableQueue<T> Dequeue<T>(this IImmutableQueue<T> queue, out T value)'
    parameters:
    - id: queue
      type:
        id: System.Collections.Immutable.IImmutableQueue{``0}
        name: IImmutableQueue
        href: System.Collections.Immutable.IImmutableQueue{``0}
      description: The queue to dequeue from.
    - id: value
      type:
        id: T
        name: T
        href: T
      description: Receives the value from the head of the queue.
    return:
      id: IImmutableQueue
      description: The new queue with the head element removed.
  id: System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
