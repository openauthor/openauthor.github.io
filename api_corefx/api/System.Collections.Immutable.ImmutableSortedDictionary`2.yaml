id: System.Collections.Immutable.ImmutableSortedDictionary`2
href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
name:
  CSharp: ImmutableSortedDictionary`2
qualifiedName:
  CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
  startLine: 19
summary: An immutable sorted dictionary implementation.
syntax:
  content:
    CSharp: public sealed partial class ImmutableSortedDictionary<TKey, TValue>
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Empty
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  type: Field
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 27
  summary: An empty sorted dictionary with default sort and equality comparers.
  syntax:
    content:
      CSharp: Empty
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Clear
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 85
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> Clear()
    parameters: []
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: ValueComparer
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 98
  summary: Gets the value comparer used to determine whether values are equal.
  syntax:
    content:
      CSharp: public IEqualityComparer<TValue> ValueComparer { get; }
    parameters:
    - id: ValueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{`1}
        name: System.Collections.Generic.IEqualityComparer{`1}
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: IsEmpty
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 106
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public bool IsEmpty { get; }
    parameters:
    - id: IsEmpty
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Count
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 114
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Keys
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 122
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public IEnumerable<TKey> Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: System.Collections.Generic.IEnumerable{`0}
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Values
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 130
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public IEnumerable<TValue> Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.Generic.IEnumerable{`1}
        name: System.Collections.Generic.IEnumerable{`1}
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: KeyComparer
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 179
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public IComparer<TKey> KeyComparer { get; }
    parameters:
    - id: KeyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: System.Collections.Generic.IComparer{`0}
        isExternal: true
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 199
  summary: Gets the  with the specified key.
  syntax:
    content:
      CSharp: public TValue this[TKey key] { get; }
    parameters:
    - id: this[]
      type:
        id: TValue
        name: TValue
        href: TValue
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: ToBuilder
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 237
  summary: >-
    Creates a collection with the same contents as this collection that

    can be efficiently mutated across multiple operations using standard

    mutable interfaces.
  syntax:
    content:
      CSharp: '[Pure] public Builder ToBuilder()'
    parameters: []
    return:
      id: Builder
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Add
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 249
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> Add(TKey key, TValue value)'
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: SetItem
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 262
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> SetItem(TKey key, TValue value)'
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: SetItems
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 278
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] [Pure] public ImmutableSortedDictionary<TKey, TValue> SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        isExternal: true
      description: The key=value pairs to set on the map.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      id: ImmutableSortedDictionary
      description: An immutable dictionary.
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: AddRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 291
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] [Pure] public ImmutableSortedDictionary<TKey, TValue> AddRange(IEnumerable<KeyValuePair<TKey, TValue>> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        isExternal: true
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 304
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> Remove(TKey value)'
    parameters:
    - id: value
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: RemoveRange
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 317
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> RemoveRange(IEnumerable<TKey> keys)'
    parameters:
    - id: keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: System.Collections.Generic.IEnumerable{`0}
        isExternal: true
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: WithComparers
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 342
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)'
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: System.Collections.Generic.IComparer{`0}
        isExternal: true
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{`1}
        name: System.Collections.Generic.IEqualityComparer{`1}
        isExternal: true
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: WithComparers
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 383
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: '[Pure] public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer)'
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: System.Collections.Generic.IComparer{`0}
        isExternal: true
    return:
      id: ImmutableSortedDictionary
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: ContainsValue
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 401
  summary: >-
    Determines whether the ImmutableSortedMap<TKey,TValue>

    contains an element with the specified value.
  syntax:
    content:
      CSharp: '[Pure] public bool ContainsValue(TValue value)'
    parameters:
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: >-
        The value to locate in the ImmutableSortedMap<TKey,TValue>.

        The value can be null for reference types.
    return:
      id: Boolean
      description: >-
        true if the ImmutableSortedMap<TKey,TValue> contains

        an element with the specified value; otherwise, false.
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: ContainsKey
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 469
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: Contains
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 478
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public bool Contains(KeyValuePair<TKey, TValue> pair)
    parameters:
    - id: pair
      type:
        id: System.Collections.Generic.KeyValuePair{`0,`1}
        name: System.Collections.Generic.KeyValuePair{`0,`1}
        isExternal: true
    return:
      id: Boolean
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: TryGetValue
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 486
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: Boolean
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: TryGetKey
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 495
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yaml) interface.
  syntax:
    content:
      CSharp: public bool TryGetKey(TKey equalKey, out TKey actualKey)
    parameters:
    - id: equalKey
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: actualKey
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
- id: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yaml
  name:
    CSharp: GetEnumerator
  qualifiedName:
    CSharp: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 765
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
      description: A [System.Collections.Generic.IEnumerator`1](#) that can be used to iterate through the collection.
