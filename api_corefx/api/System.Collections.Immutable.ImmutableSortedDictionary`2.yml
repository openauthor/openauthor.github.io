items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ImmutableSortedDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 19
  summary: An immutable sorted dictionary implementation.
  syntax:
    content:
      CSharp: 'public sealed class ImmutableSortedDictionary<TKey, TValue> : IImmutableDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, ISortKeyCollection<TKey>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Empty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Empty
  type: Field
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 27
  summary: An empty sorted dictionary with default sort and equality comparers.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Security", "CA2104:DoNotDeclareReadOnlyMutableReferenceTypes")] public static readonly ImmutableSortedDictionary<TKey, TValue> Empty;'
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 85
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> Clear()
    parameters: []
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ValueComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ValueComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 98
  summary: Gets the value comparer used to determine whether values are equal.
  syntax:
    content:
      CSharp: public IEqualityComparer<TValue> ValueComparer { get; }
    parameters:
    - id: ValueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{`1}
        name: IEqualityComparer<TValue>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IsEmpty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.IsEmpty
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 106
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public bool IsEmpty { get; }
    parameters:
    - id: IsEmpty
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Count
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 114
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 122
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public IEnumerable<TKey> Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<TKey>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 130
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public IEnumerable<TValue> Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.Generic.IEnumerable{`1}
        name: IEnumerable<TValue>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 138
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Clear()
    parameters: []
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 150
  summary: Gets the keys.
  syntax:
    content:
      CSharp: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }
    parameters:
    - id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
      type:
        id: System.Collections.Generic.ICollection{`0}
        name: ICollection<TKey>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 158
  summary: Gets the values.
  syntax:
    content:
      CSharp: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }
    parameters:
    - id: System.Collections.Generic.IDictionary<TKey,TValue>.Values
      type:
        id: System.Collections.Generic.ICollection{`1}
        name: ICollection<TValue>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 167
  syntax:
    content:
      CSharp: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }
    parameters:
    - id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: KeyComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.KeyComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 179
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public IComparer<TKey> KeyComparer { get; }
    parameters:
    - id: KeyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: IComparer<TKey>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: this[TKey]
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 199
  summary: Gets the  with the specified key.
  syntax:
    content:
      CSharp: public TValue this[TKey key] { get; }
    parameters:
    - id: this[]
      type:
        id: TValue
        name: TValue
        href: TValue
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 220
  summary: Gets or sets the  with the specified key.
  syntax:
    content:
      CSharp: TValue IDictionary<TKey, TValue>.this[TKey key] { get; set; }
    parameters:
    - id: System.Collections.Generic.IDictionary<TKey,TValue>.this[]
      type:
        id: TValue
        name: TValue
        href: TValue
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ToBuilder()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ToBuilder()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 237
  summary: >-
    Creates a collection with the same contents as this collection that

    can be efficiently mutated across multiple operations using standard

    mutable interfaces.
  syntax:
    content:
      CSharp: public Builder ToBuilder()
    parameters: []
    return:
      id: Builder
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
        name: Builder
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 249
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> Add(TKey key, TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.SetItem(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 262
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> SetItem(TKey key, TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: SetItems(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.SetItems(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 278
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The key=value pairs to set on the map.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
      description: An immutable dictionary.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 291
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> AddRange(IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 304
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> Remove(TKey value)
    parameters:
    - id: value
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.RemoveRange(System.Collections.Generic.IEnumerable<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 317
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> RemoveRange(IEnumerable<TKey> keys)
    parameters:
    - id: keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<TKey>
        isExternal: true
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.WithComparers(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 342
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: IComparer<TKey>
        isExternal: true
    - id: valueComparer
      type:
        id: System.Collections.Generic.IEqualityComparer{`1}
        name: IEqualityComparer<TValue>
        isExternal: true
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: WithComparers(IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.WithComparers(System.Collections.Generic.IComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 383
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer)
    parameters:
    - id: keyComparer
      type:
        id: System.Collections.Generic.IComparer{`0}
        name: IComparer<TKey>
        isExternal: true
    return:
      id: ImmutableSortedDictionary
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2
        name: ImmutableSortedDictionary<TKey, TValue>
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ContainsValue(TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ContainsValue(TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 401
  summary: >-
    Determines whether the [System.Collections.Immutable.ImmutableSortedDictionary`2](System.Collections.Immutable.ImmutableSortedDictionary`2.yml)

    contains an element with the specified value.
  syntax:
    content:
      CSharp: public bool ContainsValue(TValue value)
    parameters:
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: >-
        The value to locate in the [System.Collections.Immutable.ImmutableSortedDictionary`2](System.Collections.Immutable.ImmutableSortedDictionary`2.yml).

        The value can be null for reference types.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the [System.Collections.Immutable.ImmutableSortedDictionary`2](System.Collections.Immutable.ImmutableSortedDictionary`2.yml) contains

        an element with the specified value; otherwise, false.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 414
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Add(TKey key, TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.SetItem(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 423
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.SetItem(TKey key, TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.SetItems(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.SetItems(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 434
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: The key=value pairs to set on the map.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
      description: An immutable dictionary.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 442
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.AddRange(IEnumerable<KeyValuePair<TKey, TValue>> pairs)
    parameters:
    - id: pairs
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: IEnumerable<KeyValuePair<TKey, TValue>>
        isExternal: true
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.RemoveRange(System.Collections.Generic.IEnumerable<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 451
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.RemoveRange(IEnumerable<TKey> keys)
    parameters:
    - id: keys
      type:
        id: System.Collections.Generic.IEnumerable{`0}
        name: IEnumerable<TKey>
        isExternal: true
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 460
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Remove(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: IImmutableDictionary
      type:
        id: System.Collections.Immutable.IImmutableDictionary{`0,`1}
        name: IImmutableDictionary<TKey, TValue>
        href: System.Collections.Immutable.IImmutableDictionary{`0,`1}
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ContainsKey(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 469
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 478
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public bool Contains(KeyValuePair<TKey, TValue> pair)
    parameters:
    - id: pair
      type:
        id: System.Collections.Generic.KeyValuePair{`0,`1}
        name: KeyValuePair<TKey, TValue>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: TryGetValue(TKey, out TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 486
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: TryGetKey(TKey, out TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.TryGetKey(TKey, out TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 495
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content:
      CSharp: public bool TryGetKey(TKey equalKey, out TKey actualKey)
    parameters:
    - id: equalKey
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: actualKey
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 518
  summary: Adds an element with the provided key and value to the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content:
      CSharp: void IDictionary<TKey, TValue>.Add(TKey key, TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The object to use as the key of the element to add.
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
      description: The object to use as the value of the element to add.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 535
  summary: Removes the element with the specified key from the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content:
      CSharp: bool IDictionary<TKey, TValue>.Remove(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
      description: The key of the element to remove.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if the element is successfully removed; otherwise, false.  This method also returns false if  was not found in the original [System.Collections.Generic.IDictionary`2]().
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 544
  syntax:
    content:
      CSharp: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item)
    parameters:
    - id: item
      type:
        id: System.Collections.Generic.KeyValuePair{`0,`1}
        name: KeyValuePair<TKey, TValue>
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 549
  syntax:
    content:
      CSharp: void ICollection<KeyValuePair<TKey, TValue>>.Clear()
    parameters: []
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 554
  syntax:
    content:
      CSharp: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item)
    parameters:
    - id: item
      type:
        id: System.Collections.Generic.KeyValuePair{`0,`1}
        name: KeyValuePair<TKey, TValue>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 559
  syntax:
    content:
      CSharp: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    parameters:
    - id: array
      type:
        id: System.Array
        name: KeyValuePair<TKey, TValue>[]
        isExternal: true
    - id: arrayIndex
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.IsFixedSize
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 579
  summary: Gets a value indicating whether the [System.Collections.IDictionary]() object has a fixed size.
  syntax:
    content:
      CSharp: bool IDictionary.IsFixedSize { get; }
    parameters:
    - id: System.Collections.IDictionary.IsFixedSize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 589
  summary: Gets a value indicating whether the [System.Collections.Generic.ICollection`1]() is read-only.
  syntax:
    content:
      CSharp: bool IDictionary.IsReadOnly { get; }
    parameters:
    - id: System.Collections.IDictionary.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 600
  summary: Gets an [System.Collections.Generic.ICollection`1]() containing the keys of the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content:
      CSharp: ICollection IDictionary.Keys { get; }
    parameters:
    - id: System.Collections.IDictionary.Keys
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 611
  summary: Gets an [System.Collections.Generic.ICollection`1]() containing the values in the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content:
      CSharp: ICollection IDictionary.Values { get; }
    parameters:
    - id: System.Collections.IDictionary.Values
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Add(object, object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Add(object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 625
  summary: Adds an element with the provided key and value to the [System.Collections.IDictionary]() object.
  syntax:
    content:
      CSharp: void IDictionary.Add(object key, object value)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The [System.Object]() to use as the key of the element to add.
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The [System.Object]() to use as the value of the element to add.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Contains(object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 637
  summary: Determines whether the [System.Collections.IDictionary]() object contains an element with the specified key.
  syntax:
    content:
      CSharp: bool IDictionary.Contains(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The key to locate in the [System.Collections.IDictionary]() object.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if the [System.Collections.IDictionary]() contains an element with the key; otherwise, false.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 649
  summary: Returns an [System.Collections.IDictionaryEnumerator]() object for the [System.Collections.IDictionary]() object.
  syntax:
    content:
      CSharp: IDictionaryEnumerator IDictionary.GetEnumerator()
    parameters: []
    return:
      id: IDictionaryEnumerator
      type:
        id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        isExternal: true
      description: An [System.Collections.IDictionaryEnumerator]() object for the [System.Collections.IDictionary]() object.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Remove(object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 658
  summary: Removes the element with the specified key from the [System.Collections.IDictionary]() object.
  syntax:
    content:
      CSharp: void IDictionary.Remove(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The key of the element to remove.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.this[object]
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.this[object]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 668
  summary: Gets or sets the element with the specified key.
  syntax:
    content:
      CSharp: object IDictionary.this[object key] { get; set; }
    parameters:
    - id: System.Collections.IDictionary.this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 678
  summary: Clears this instance.
  syntax:
    content:
      CSharp: void IDictionary.Clear()
    parameters: []
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 692
  summary: Copies the elements of the [System.Collections.ICollection]() to an [System.Array](), starting at a particular [System.Array]() index.
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
      description: The one-dimensional [System.Array]() that is the destination of the elements copied from [System.Collections.ICollection](). The [System.Array]() must have zero-based indexing.
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The zero-based index in  at which copying begins.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 705
  summary: Gets an object that can be used to synchronize access to the [System.Collections.ICollection]().
  syntax:
    content:
      CSharp: '[DebuggerBrowsable(DebuggerBrowsableState.Never)] object ICollection.SyncRoot { get; }'
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 715
  summary: Gets a value indicating whether access to the [System.Collections.ICollection]() is synchronized (thread safe).
  syntax:
    content:
      CSharp: '[DebuggerBrowsable(DebuggerBrowsableState.Never)] bool ICollection.IsSynchronized { get; }'
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 735
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content:
      CSharp: IEnumerator<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
        name: IEnumerator<KeyValuePair<TKey, TValue>>
        isExternal: true
      description: A [System.Collections.Generic.IEnumerator`1]() that can be used to iterate through the collection.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 751
  summary: Returns an enumerator that iterates through a collection.
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
      description: An [System.Collections.IEnumerator]() object that can be used to iterate through the collection.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 765
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content:
      CSharp: public Enumerator GetEnumerator()
    parameters: []
    return:
      id: Enumerator
      type:
        id: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
        name: Enumerator
        href: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator.yml
      description: A [System.Collections.Generic.IEnumerator`1]() that can be used to iterate through the collection.
  id: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
