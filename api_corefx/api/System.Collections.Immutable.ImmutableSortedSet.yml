items:
- uid: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ImmutableSortedSet
  fullName: System.Collections.Immutable.ImmutableSortedSet
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 11
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableSortedSet`1](System.Collections.Immutable.ImmutableSortedSet`1.yml).
  syntax:
    content:
      CSharp: public static class ImmutableSortedSet
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: System.Collections.Immutable.ImmutableSortedSet
  children:
  - System.Collections.Immutable.ImmutableSortedSet.Create``1
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)
  - System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])
  - System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1
  - System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>()
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 18
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>()'
    parameters: []
    return:
      id: ImmutableSortedSet
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 32
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer.
    return:
      id: ImmutableSortedSet
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 44
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>(T item)'
    parameters:
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>, T)
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 57
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer, T item)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer.
    - id: item
      type:
        id: T
        name: T
        href: T
      description: The item to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 69
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> CreateRange<T>(IEnumerable<T> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateRange<T>(IComparer<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateRange<T>(System.Collections.Generic.IComparer<T>, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 82
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> CreateRange<T>(IComparer<T> comparer, IEnumerable<T> items)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer.
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(params T[])
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 94
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>(params T[] items)'
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>, params T[])
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>, params T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 107
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer, params T[] items)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer.
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The items to prepopulate.
    return:
      id: ImmutableSortedSet
      description: The new immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder<T>()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 118
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T>.Builder CreateBuilder<T>()'
    parameters: []
    return:
      id: Builder
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateBuilder<T>(IComparer<T>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder<T>(System.Collections.Generic.IComparer<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 132
  summary: Returns an empty collection.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<T>.Builder CreateBuilder<T>(IComparer<T> comparer)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer.
    return:
      id: Builder
      description: The immutable collection.
  id: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 145
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<TSource> ToImmutableSortedSet<TSource>(this IEnumerable<TSource> source, IComparer<TSource> comparer)'
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``0}
        name: System.Collections.Generic.IComparer{``0}
        isExternal: true
      description: The comparer to use for initializing and adding members to the sorted set.
    return:
      id: ImmutableSortedSet
      description: An immutable set.
  id: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 163
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content:
      CSharp: '[Pure] public static ImmutableSortedSet<TSource> ToImmutableSortedSet<TSource>(this IEnumerable<TSource> source)'
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: System.Collections.Generic.IEnumerable{``0}
        isExternal: true
      description: The sequence to enumerate.
    return:
      id: ImmutableSortedSet
      description: An immutable set.
  id: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
