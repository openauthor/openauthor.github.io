items:
- uid: System.Collections.Immutable.ImmutableStack`1.Enumerator
  href: System.Collections.Immutable.ImmutableStack`1.Enumerator.yml
  name: Enumerator
  fullName: System.Collections.Immutable.ImmutableStack<T>.Enumerator
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableStack`1.cs
    startLine: 248
  summary: Enumerates a stack with no memory allocations.
  syntax:
    content:
      CSharp: public struct Enumerator
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Collections.Immutable.ImmutableStack`1.Enumerator
  children:
  - System.Collections.Immutable.ImmutableStack`1.Enumerator.Current
  - System.Collections.Immutable.ImmutableStack`1.Enumerator.MoveNext
- uid: System.Collections.Immutable.ImmutableStack`1.Enumerator.Current
  href: System.Collections.Immutable.ImmutableStack`1.Enumerator.yml
  name: Current
  fullName: System.Collections.Immutable.ImmutableStack<T>.Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableStack`1.cs
    startLine: 275
  summary: Gets the current element.
  syntax:
    content:
      CSharp: public T Current { get; }
    parameters:
    - id: Current
      type:
        id: T
        name: T
        href: T
  id: System.Collections.Immutable.ImmutableStack`1.Enumerator.Current
- uid: System.Collections.Immutable.ImmutableStack`1.Enumerator.MoveNext
  href: System.Collections.Immutable.ImmutableStack`1.Enumerator.yml
  name: MoveNext()
  fullName: System.Collections.Immutable.ImmutableStack<T>.Enumerator.MoveNext()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableStack`1.cs
    startLine: 294
  summary: Moves to the first or next element.
  syntax:
    content:
      CSharp: public bool MoveNext()
    parameters: []
    return:
      id: Boolean
      description: A value indicating whether there are any more elements.
  id: System.Collections.Immutable.ImmutableStack`1.Enumerator.MoveNext
