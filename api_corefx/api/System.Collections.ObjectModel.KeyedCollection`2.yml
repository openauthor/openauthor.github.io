items:
- uid: System.Collections.ObjectModel.KeyedCollection`2
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 10
  syntax:
    content:
      CSharp: public abstract class KeyedCollection<TKey, TItem>
  inheritance:
  - id: Collection{`1}
    name: Collection{`1}
    isExternal: true
  id: System.Collections.ObjectModel.KeyedCollection`2
  children:
  - System.Collections.ObjectModel.KeyedCollection`2.Comparer
  - System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  - System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 47
  syntax:
    content:
      CSharp: public IEqualityComparer<TKey> Comparer { get; }
    parameters:
    - id: Comparer
      type:
        id: IEqualityComparer{`0}
        name: IEqualityComparer{`0}
        isExternal: true
  id: System.Collections.ObjectModel.KeyedCollection`2.Comparer
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: this[TKey]
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.this[TKey]
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 55
  syntax:
    content:
      CSharp: public TItem this[TKey key] { get; }
    parameters:
    - id: this[]
      type:
        id: TItem
        name: TItem
        href: TItem
  id: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 78
  syntax:
    content:
      CSharp: public bool Contains(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
  id: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  href: System.Collections.ObjectModel.KeyedCollection`2.yml
  name: Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/KeyedCollection.cs
    startLine: 117
  syntax:
    content:
      CSharp: public bool Remove(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
  id: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
