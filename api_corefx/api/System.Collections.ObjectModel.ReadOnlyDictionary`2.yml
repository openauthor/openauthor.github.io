items:
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 11
  syntax:
    content:
      CSharp: public class ReadOnlyDictionary<TKey, TValue>
  inheritance:
  - id: IDictionary{`0,`1}
    name: IDictionary{`0,`1}
    isExternal: true
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2
  children:
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(IDictionary{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(IDictionary{`0,`1})
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ReadOnlyDictionary(IDictionary<TKey, TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(IDictionary<TKey, TValue>)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 20
  syntax:
    content:
      CSharp: public ReadOnlyDictionary(IDictionary<TKey, TValue> dictionary)
    parameters:
    - id: dictionary
      type:
        id: IDictionary{`0,`1}
        name: IDictionary{`0,`1}
        isExternal: true
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(IDictionary{`0,`1})
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 35
  syntax:
    content:
      CSharp: public KeyCollection Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
        name: KeyCollection
        href: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.yml
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 48
  syntax:
    content:
      CSharp: public ValueCollection Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
        name: ValueCollection
        href: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.yml
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: ContainsKey(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 63
  syntax:
    content:
      CSharp: public bool ContainsKey(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: TryGetValue(TKey, out TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 76
  syntax:
    content:
      CSharp: public bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    - id: value
      type:
        id: TValue
        name: TValue
        href: TValue
    return:
      id: Boolean
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: this[TKey]
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 89
  syntax:
    content:
      CSharp: public TValue this[TKey key] { get; }
    parameters:
    - id: this[]
      type:
        id: TValue
        name: TValue
        href: TValue
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 123
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  href: System.Collections.ObjectModel.ReadOnlyDictionary`2.yml
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 162
  syntax:
    content:
      CSharp: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
  id: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
