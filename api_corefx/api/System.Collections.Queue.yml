items:
- uid: System.Collections.Queue
  href: System.Collections.Queue.yml
  name: Queue
  fullName: System.Collections.Queue
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 20
  syntax:
    content:
      CSharp: 'public class Queue : ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Queue
  children:
  - System.Collections.Queue.#ctor
  - System.Collections.Queue.#ctor(System.Int32)
  - System.Collections.Queue.#ctor(System.Int32,System.Single)
  - System.Collections.Queue.#ctor(System.Collections.ICollection)
  - System.Collections.Queue.Count
  - System.Collections.Queue.Clone
  - System.Collections.Queue.IsSynchronized
  - System.Collections.Queue.SyncRoot
  - System.Collections.Queue.Clear
  - System.Collections.Queue.CopyTo(System.Array,System.Int32)
  - System.Collections.Queue.Enqueue(System.Object)
  - System.Collections.Queue.GetEnumerator
  - System.Collections.Queue.Dequeue
  - System.Collections.Queue.Peek
  - System.Collections.Queue.Synchronized(System.Collections.Queue)
  - System.Collections.Queue.Contains(System.Object)
  - System.Collections.Queue.ToArray
  - System.Collections.Queue.TrimToSize
- uid: System.Collections.Queue.#ctor
  href: System.Collections.Queue.yml
  name: Queue()
  fullName: System.Collections.Queue.Queue()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 37
  syntax:
    content:
      CSharp: 'public Queue(): this (32, (float)2.0)'
    parameters: []
  id: System.Collections.Queue.#ctor
- uid: System.Collections.Queue.#ctor(System.Int32)
  href: System.Collections.Queue.yml
  name: Queue(int)
  fullName: System.Collections.Queue.Queue(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 45
  syntax:
    content:
      CSharp: 'public Queue(int capacity): this (capacity, (float)2.0)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Queue.#ctor(System.Int32)
- uid: System.Collections.Queue.#ctor(System.Int32,System.Single)
  href: System.Collections.Queue.yml
  name: Queue(int, float)
  fullName: System.Collections.Queue.Queue(int, float)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 53
  syntax:
    content:
      CSharp: public Queue(int capacity, float growFactor)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: growFactor
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Collections.Queue.#ctor(System.Int32,System.Single)
- uid: System.Collections.Queue.#ctor(System.Collections.ICollection)
  href: System.Collections.Queue.yml
  name: Queue(ICollection)
  fullName: System.Collections.Queue.Queue(System.Collections.ICollection)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 71
  syntax:
    content:
      CSharp: 'public Queue(ICollection col): this ((col == null ? 32 : col.Count))'
    parameters:
    - id: col
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Queue.#ctor(System.Collections.ICollection)
- uid: System.Collections.Queue.Count
  href: System.Collections.Queue.yml
  name: Count
  fullName: System.Collections.Queue.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 82
  syntax:
    content:
      CSharp: public virtual int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Queue.Count
- uid: System.Collections.Queue.Clone
  href: System.Collections.Queue.yml
  name: Clone()
  fullName: System.Collections.Queue.Clone()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 87
  syntax:
    content:
      CSharp: public virtual object Clone()
    parameters: []
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Queue.Clone
- uid: System.Collections.Queue.IsSynchronized
  href: System.Collections.Queue.yml
  name: IsSynchronized
  fullName: System.Collections.Queue.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 103
  syntax:
    content:
      CSharp: public virtual bool IsSynchronized { get; }
    parameters:
    - id: IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Queue.IsSynchronized
- uid: System.Collections.Queue.SyncRoot
  href: System.Collections.Queue.yml
  name: SyncRoot
  fullName: System.Collections.Queue.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 108
  syntax:
    content:
      CSharp: public virtual Object SyncRoot { get; }
    parameters:
    - id: SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Queue.SyncRoot
- uid: System.Collections.Queue.Clear
  href: System.Collections.Queue.yml
  name: Clear()
  fullName: System.Collections.Queue.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 121
  syntax:
    content:
      CSharp: public virtual void Clear()
    parameters: []
  id: System.Collections.Queue.Clear
- uid: System.Collections.Queue.CopyTo(System.Array,System.Int32)
  href: System.Collections.Queue.yml
  name: CopyTo(Array, int)
  fullName: System.Collections.Queue.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 140
  syntax:
    content:
      CSharp: public virtual void CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Queue.CopyTo(System.Array,System.Int32)
- uid: System.Collections.Queue.Enqueue(System.Object)
  href: System.Collections.Queue.yml
  name: Enqueue(object)
  fullName: System.Collections.Queue.Enqueue(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 165
  syntax:
    content:
      CSharp: public virtual void Enqueue(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Queue.Enqueue(System.Object)
- uid: System.Collections.Queue.GetEnumerator
  href: System.Collections.Queue.yml
  name: GetEnumerator()
  fullName: System.Collections.Queue.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 186
  syntax:
    content:
      CSharp: public virtual IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Queue.GetEnumerator
- uid: System.Collections.Queue.Dequeue
  href: System.Collections.Queue.yml
  name: Dequeue()
  fullName: System.Collections.Queue.Dequeue()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 193
  syntax:
    content:
      CSharp: public virtual object Dequeue()
    parameters: []
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Queue.Dequeue
- uid: System.Collections.Queue.Peek
  href: System.Collections.Queue.yml
  name: Peek()
  fullName: System.Collections.Queue.Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 210
  syntax:
    content:
      CSharp: public virtual object Peek()
    parameters: []
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Queue.Peek
- uid: System.Collections.Queue.Synchronized(System.Collections.Queue)
  href: System.Collections.Queue.yml
  name: Synchronized(Queue)
  fullName: System.Collections.Queue.Synchronized(System.Collections.Queue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 223
  syntax:
    content:
      CSharp: public static Queue Synchronized(Queue queue)
    parameters:
    - id: queue
      type:
        id: System.Collections.Queue
        name: Queue
        href: System.Collections.Queue.yml
    return:
      id: Queue
      type:
        id: System.Collections.Queue
        name: Queue
        href: System.Collections.Queue.yml
  id: System.Collections.Queue.Synchronized(System.Collections.Queue)
- uid: System.Collections.Queue.Contains(System.Object)
  href: System.Collections.Queue.yml
  name: Contains(object)
  fullName: System.Collections.Queue.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 235
  syntax:
    content:
      CSharp: public virtual bool Contains(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Queue.Contains(System.Object)
- uid: System.Collections.Queue.ToArray
  href: System.Collections.Queue.yml
  name: ToArray()
  fullName: System.Collections.Queue.ToArray()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 266
  syntax:
    content:
      CSharp: public virtual object[] ToArray()
    parameters: []
    return:
      type:
        id: System.Array
        name: object[]
        isExternal: true
  id: System.Collections.Queue.ToArray
- uid: System.Collections.Queue.TrimToSize
  href: System.Collections.Queue.yml
  name: TrimToSize()
  fullName: System.Collections.Queue.TrimToSize()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 310
  syntax:
    content:
      CSharp: public virtual void TrimToSize()
    parameters: []
  id: System.Collections.Queue.TrimToSize
