items:
- uid: System.Collections.Specialized.HybridDictionary
  href: System.Collections.Specialized.HybridDictionary.yml
  name: HybridDictionary
  fullName: System.Collections.Specialized.HybridDictionary
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 18
  syntax:
    content:
      CSharp: 'public class HybridDictionary : IDictionary, ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Specialized.HybridDictionary
  children:
  - System.Collections.Specialized.HybridDictionary.#ctor
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  - System.Collections.Specialized.HybridDictionary.Item(System.Object)
  - System.Collections.Specialized.HybridDictionary.Count
  - System.Collections.Specialized.HybridDictionary.Keys
  - System.Collections.Specialized.HybridDictionary.IsReadOnly
  - System.Collections.Specialized.HybridDictionary.IsFixedSize
  - System.Collections.Specialized.HybridDictionary.IsSynchronized
  - System.Collections.Specialized.HybridDictionary.SyncRoot
  - System.Collections.Specialized.HybridDictionary.Values
  - System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.HybridDictionary.Clear
  - System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  - System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.HybridDictionary.GetEnumerator
  - System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.HybridDictionary.Remove(System.Object)
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  href: System.Collections.Specialized.HybridDictionary.yml
  name: HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 31
  syntax:
    content:
      CSharp: public HybridDictionary()
    parameters: []
  id: System.Collections.Specialized.HybridDictionary.#ctor
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: HybridDictionary(int)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 35
  syntax:
    content:
      CSharp: 'public HybridDictionary(int initialSize): this (initialSize, false)'
    parameters:
    - id: initialSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: HybridDictionary(bool)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 39
  syntax:
    content:
      CSharp: public HybridDictionary(bool caseInsensitive)
    parameters:
    - id: caseInsensitive
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: HybridDictionary(int, bool)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(int, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 44
  syntax:
    content:
      CSharp: public HybridDictionary(int initialSize, bool caseInsensitive)
    parameters:
    - id: initialSize
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: caseInsensitive
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: this[object]
  fullName: System.Collections.Specialized.HybridDictionary.this[object]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 60
  syntax:
    content:
      CSharp: public object this[object key] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Item(System.Object)
- uid: System.Collections.Specialized.HybridDictionary.Count
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 153
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.Keys
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 173
  syntax:
    content:
      CSharp: public ICollection Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Keys
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  href: System.Collections.Specialized.HybridDictionary.yml
  name: IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 188
  syntax:
    content:
      CSharp: public bool IsReadOnly { get; }
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  href: System.Collections.Specialized.HybridDictionary.yml
  name: IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 196
  syntax:
    content:
      CSharp: public bool IsFixedSize { get; }
    parameters:
    - id: IsFixedSize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  href: System.Collections.Specialized.HybridDictionary.yml
  name: IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 204
  syntax:
    content:
      CSharp: public bool IsSynchronized { get; }
    parameters:
    - id: IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  href: System.Collections.Specialized.HybridDictionary.yml
  name: SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 212
  syntax:
    content:
      CSharp: public object SyncRoot { get; }
    parameters:
    - id: SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.Values
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 220
  syntax:
    content:
      CSharp: public ICollection Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Values
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Add(object, object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 235
  syntax:
    content:
      CSharp: public void Add(object key, object value)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
- uid: System.Collections.Specialized.HybridDictionary.Clear
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 263
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Collections.Specialized.HybridDictionary.Clear
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Contains(object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 280
  syntax:
    content:
      CSharp: public bool Contains(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: CopyTo(Array, int)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 301
  syntax:
    content:
      CSharp: public void CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  href: System.Collections.Specialized.HybridDictionary.yml
  name: GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 313
  syntax:
    content:
      CSharp: public IDictionaryEnumerator GetEnumerator()
    parameters: []
    return:
      id: IDictionaryEnumerator
      type:
        id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Specialized.HybridDictionary.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 326
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  href: System.Collections.Specialized.HybridDictionary.yml
  name: Remove(object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/HybridDictionary.cs
    startLine: 339
  syntax:
    content:
      CSharp: public void Remove(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
