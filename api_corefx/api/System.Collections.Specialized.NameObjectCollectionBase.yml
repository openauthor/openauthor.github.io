items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 21
  syntax:
    content:
      CSharp: 'public abstract class NameObjectCollectionBase : ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 38
  syntax:
    content:
      CSharp: 'protected NameObjectCollectionBase(): this (s_defaultComparer)'
    parameters: []
  id: System.Collections.Specialized.NameObjectCollectionBase.#ctor
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 42
  syntax:
    content:
      CSharp: protected NameObjectCollectionBase(IEqualityComparer equalityComparer)
    parameters:
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(int, IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(int, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 48
  syntax:
    content:
      CSharp: 'protected NameObjectCollectionBase(Int32 capacity, IEqualityComparer equalityComparer): this (equalityComparer)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: equalityComparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(int)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 58
  syntax:
    content:
      CSharp: protected NameObjectCollectionBase(int capacity)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 108
  syntax:
    content:
      CSharp: protected bool IsReadOnly { get; set; }
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 118
  syntax:
    content:
      CSharp: protected bool BaseHasKeys()
    parameters: []
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseAdd(string, object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(string, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 131
  syntax:
    content:
      CSharp: protected void BaseAdd(string name, object value)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseRemove(string)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 160
  syntax:
    content:
      CSharp: protected void BaseRemove(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseRemoveAt(int)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 197
  syntax:
    content:
      CSharp: protected void BaseRemoveAt(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 224
  syntax:
    content:
      CSharp: protected void BaseClear()
    parameters: []
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGet(string)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 240
  syntax:
    content:
      CSharp: protected object BaseGet(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseSet(string, object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(string, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 252
  syntax:
    content:
      CSharp: protected void BaseSet(string name, object value)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGet(int)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 277
  syntax:
    content:
      CSharp: protected object BaseGet(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetKey(int)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 288
  syntax:
    content:
      CSharp: protected string BaseGetKey(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseSet(int, object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(int, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 298
  syntax:
    content:
      CSharp: protected void BaseSet(int index, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 315
  syntax:
    content:
      CSharp: public virtual IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 323
  syntax:
    content:
      CSharp: public virtual int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.Count
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 331
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 357
  syntax:
    content:
      CSharp: Object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 369
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 382
  syntax:
    content:
      CSharp: protected string[] BaseGetAllKeys()
    parameters: []
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 397
  syntax:
    content:
      CSharp: protected object[] BaseGetAllValues()
    parameters: []
    return:
      type:
        id: System.Array
        name: object[]
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 412
  syntax:
    content:
      CSharp: protected object[] BaseGetAllValues(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: object[]
        isExternal: true
  id: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 437
  syntax:
    content:
      CSharp: public virtual KeysCollection Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
        name: KeysCollection
        href: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.yml
  id: System.Collections.Specialized.NameObjectCollectionBase.Keys
