items:
- uid: System.Collections.Specialized.OrderedDictionary
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: OrderedDictionary
  fullName: System.Collections.Specialized.OrderedDictionary
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 19
  syntax:
    content:
      CSharp: 'public class OrderedDictionary : IOrderedDictionary, IDictionary, ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Collections.Specialized.OrderedDictionary
  children:
  - System.Collections.Specialized.OrderedDictionary.#ctor
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.OrderedDictionary.Count
  - System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Specialized.OrderedDictionary.IsReadOnly
  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.OrderedDictionary.Keys
  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
  - System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.Item(System.Object)
  - System.Collections.Specialized.OrderedDictionary.Values
  - System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.OrderedDictionary.Clear
  - System.Collections.Specialized.OrderedDictionary.AsReadOnly
  - System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
  - System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  - System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
  - System.Collections.Specialized.OrderedDictionary.GetEnumerator
  - System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.#ctor
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: OrderedDictionary()
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 28
  syntax:
    content:
      CSharp: 'public OrderedDictionary(): this (0)'
    parameters: []
  id: System.Collections.Specialized.OrderedDictionary.#ctor
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: OrderedDictionary(int)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 32
  syntax:
    content:
      CSharp: 'public OrderedDictionary(int capacity): this (capacity, null)'
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: OrderedDictionary(IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 36
  syntax:
    content:
      CSharp: 'public OrderedDictionary(IEqualityComparer comparer): this (0, comparer)'
    parameters:
    - id: comparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: OrderedDictionary(int, IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(int, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 40
  syntax:
    content:
      CSharp: public OrderedDictionary(int capacity, IEqualityComparer comparer)
    parameters:
    - id: capacity
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.IEqualityComparer
        name: IEqualityComparer
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
- uid: System.Collections.Specialized.OrderedDictionary.Count
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Count
  fullName: System.Collections.Specialized.OrderedDictionary.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 63
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Count
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: IDictionary.IsFixedSize
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 74
  syntax:
    content:
      CSharp: bool IDictionary.IsFixedSize { get; }
    parameters:
    - id: System.Collections.IDictionary.IsFixedSize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: IsReadOnly
  fullName: System.Collections.Specialized.OrderedDictionary.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 85
  syntax:
    content:
      CSharp: public bool IsReadOnly { get; }
    parameters:
    - id: IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.IsReadOnly
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: ICollection.IsSynchronized
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 96
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
- uid: System.Collections.Specialized.OrderedDictionary.Keys
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Keys
  fullName: System.Collections.Specialized.OrderedDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 107
  syntax:
    content:
      CSharp: public ICollection Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Keys
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: ICollection.SyncRoot
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 142
  syntax:
    content:
      CSharp: object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: this[int]
  fullName: System.Collections.Specialized.OrderedDictionary.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 157
  syntax:
    content:
      CSharp: public object this[int index] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Object)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: this[object]
  fullName: System.Collections.Specialized.OrderedDictionary.this[object]
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 182
  syntax:
    content:
      CSharp: public object this[object key] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Item(System.Object)
- uid: System.Collections.Specialized.OrderedDictionary.Values
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Values
  fullName: System.Collections.Specialized.OrderedDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 209
  syntax:
    content:
      CSharp: public ICollection Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.ICollection
        name: ICollection
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Values
- uid: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Add(object, object)
  fullName: System.Collections.Specialized.OrderedDictionary.Add(object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 220
  syntax:
    content:
      CSharp: public void Add(object key, object value)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
- uid: System.Collections.Specialized.OrderedDictionary.Clear
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Clear()
  fullName: System.Collections.Specialized.OrderedDictionary.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 233
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Collections.Specialized.OrderedDictionary.Clear
- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: AsReadOnly()
  fullName: System.Collections.Specialized.OrderedDictionary.AsReadOnly()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 246
  syntax:
    content:
      CSharp: public OrderedDictionary AsReadOnly()
    parameters: []
    return:
      id: OrderedDictionary
      type:
        id: System.Collections.Specialized.OrderedDictionary
        name: OrderedDictionary
        href: System.Collections.Specialized.OrderedDictionary.yml
  id: System.Collections.Specialized.OrderedDictionary.AsReadOnly
- uid: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Contains(object)
  fullName: System.Collections.Specialized.OrderedDictionary.Contains(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 254
  syntax:
    content:
      CSharp: public bool Contains(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
- uid: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: CopyTo(Array, int)
  fullName: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 262
  syntax:
    content:
      CSharp: public void CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
- uid: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Insert(int, object, object)
  fullName: System.Collections.Specialized.OrderedDictionary.Insert(int, object, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 293
  syntax:
    content:
      CSharp: public void Insert(int index, object key, object value)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: RemoveAt(int)
  fullName: System.Collections.Specialized.OrderedDictionary.RemoveAt(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 310
  syntax:
    content:
      CSharp: public void RemoveAt(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
- uid: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: Remove(object)
  fullName: System.Collections.Specialized.OrderedDictionary.Remove(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 328
  syntax:
    content:
      CSharp: public void Remove(object key)
    parameters:
    - id: key
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 350
  syntax:
    content:
      CSharp: public virtual IDictionaryEnumerator GetEnumerator()
    parameters: []
    return:
      id: IDictionaryEnumerator
      type:
        id: System.Collections.IDictionaryEnumerator
        name: IDictionaryEnumerator
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.GetEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Specialized.OrderedDictionary.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/OrderedDictionary.cs
    startLine: 357
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
