items:
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: FilterUIHintAttribute
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 10
  summary: An attribute used to specify the filtering behavior for a column.
  syntax:
    content:
      CSharp: public sealed class FilterUIHintAttribute
  inheritance:
  - id: Attribute
    name: Attribute
    isExternal: true
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute
  children:
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: FilterUIHint
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 20
  summary: >-
    Gets the name of the control that is most appropriate for this associated

    property or field
  syntax:
    content:
      CSharp: public string FilterUIHint { get; }
    parameters:
    - id: FilterUIHint
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: PresentationLayer
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 32
  summary: >-
    Gets the name of the presentation layer that supports the control type

    in [System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint](System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml)
  syntax:
    content:
      CSharp: public string PresentationLayer { get; }
    parameters:
    - id: PresentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: ControlParameters
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 45
  summary: Gets the name-value pairs used as parameters to the control's constructor
  syntax:
    content:
      CSharp: public IDictionary<string, object> ControlParameters { get; }
    parameters:
    - id: ControlParameters
      type:
        id: IDictionary{System.String,System.Object}
        name: IDictionary{System.String,System.Object}
        isExternal: true
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: FilterUIHintAttribute(string)
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHintAttribute(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 58
  summary: >-
    Constructor that accepts the name of the control, without specifying

    which presentation layer to use
  syntax:
    content:
      CSharp: 'public FilterUIHintAttribute(string filterUIHint): this (filterUIHint, null, Array.Empty<object>())'
    parameters:
    - id: filterUIHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the UI control.
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: FilterUIHintAttribute(string, string)
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHintAttribute(string, string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 70
  summary: >-
    Constructor that accepts both the name of the control as well as the

    presentation layer
  syntax:
    content:
      CSharp: 'public FilterUIHintAttribute(string filterUIHint, string presentationLayer): this (filterUIHint, presentationLayer, Array.Empty<object>())'
    parameters:
    - id: filterUIHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the control to use
    - id: presentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: >-
        The name of the presentation layer that

        supports this control
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: FilterUIHintAttribute(string, string, params object[])
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHintAttribute(string, string, params object[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 82
  summary: >-
    Full constructor that accepts the name of the control, presentation layer,

    and optional parameters to use when constructing the control
  syntax:
    content:
      CSharp: public FilterUIHintAttribute(string filterUIHint, string presentationLayer, params object[] controlParameters)
    parameters:
    - id: filterUIHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the control
    - id: presentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The presentation layer
    - id: controlParameters
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The list of parameters for the control
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: GetHashCode()
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 93
  summary: Returns the hash code for this FilterUIHintAttribute.
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      description: A 32-bit signed integer hash code.
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode
- uid: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)
  href: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.yml
  name: Equals(object)
  fullName: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/FilterUIHintAttribute.cs
    startLine: 105
  summary: >-
    Determines whether this instance of FilterUIHintAttribute and a specified object,

    which must also be a FilterUIHintAttribute object, have the same value.
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: An System.Object.
    return:
      id: Boolean
      description: >-
        true if obj is a FilterUIHintAttribute and its value is the same

        as this instance; otherwise, false.
  id: System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)
