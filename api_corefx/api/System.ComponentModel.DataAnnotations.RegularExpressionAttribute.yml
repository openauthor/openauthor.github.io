items:
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  href: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.yml
  name: RegularExpressionAttribute
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
    startLine: 11
  summary: Regular expression validation attribute
  syntax:
    content:
      CSharp: 'public class RegularExpressionAttribute : ValidationAttribute, _Attribute'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Attribute
    name: Attribute
    isExternal: true
  - id: System.ComponentModel.DataAnnotations.ValidationAttribute
    name: ValidationAttribute
    href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  children:
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  href: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.yml
  name: RegularExpressionAttribute(string)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.RegularExpressionAttribute(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
    startLine: 19
  summary: Constructor that accepts the regular expression pattern
  syntax:
    content:
      CSharp: 'public RegularExpressionAttribute(string pattern): base (() => SR.RegexAttribute_ValidationError)'
    parameters:
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
      description: The regular expression to use.  It cannot be null.
  id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  href: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.yml
  name: Pattern
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
    startLine: 28
  summary: Gets the regular expression pattern to use
  syntax:
    content:
      CSharp: public string Pattern { get; }
    parameters:
    - id: Pattern
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
  href: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.yml
  name: IsValid(object)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
    startLine: 42
  summary: Override of [System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)
  syntax:
    content:
      CSharp: public override bool IsValid(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to test for validity.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if the given value matches the current regular expression pattern
  id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
  href: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.yml
  name: FormatErrorMessage(string)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(string)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/RegularExpressionAttribute.cs
    startLine: 70
  summary: Override of [System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)
  syntax:
    content:
      CSharp: public override string FormatErrorMessage(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The user-visible name to include in the formatted message.
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: The localized message to present to the user
  id: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
