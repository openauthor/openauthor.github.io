items:
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: UIHintAttribute
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 13
  summary: Attribute to provide a hint to the presentation layer about what control it should use
  syntax:
    content:
      CSharp: public class UIHintAttribute
  inheritance:
  - id: Attribute
    name: Attribute
    isExternal: true
  id: System.ComponentModel.DataAnnotations.UIHintAttribute
  children:
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
  - System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  - System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  - System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  - System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
  - System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: UIHintAttribute(string)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 22
  summary: Constructor that accepts the name of the control, without specifying which presentation layer to use
  syntax:
    content:
      CSharp: 'public UIHintAttribute(string uiHint): this (uiHint, null, Array.Empty<object>())'
    parameters:
    - id: uiHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the UI control.
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: UIHintAttribute(string, string)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(string, string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 32
  summary: Constructor that accepts both the name of the control as well as the presentation layer
  syntax:
    content:
      CSharp: 'public UIHintAttribute(string uiHint, string presentationLayer): this (uiHint, presentationLayer, Array.Empty<object>())'
    parameters:
    - id: uiHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the control to use
    - id: presentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the presentation layer that supports this control
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: UIHintAttribute(string, string, params object[])
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHintAttribute(string, string, params object[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 44
  summary: >-
    Full constructor that accepts the name of the control, presentation layer, and optional parameters

    to use when constructing the control
  syntax:
    content:
      CSharp: public UIHintAttribute(string uiHint, string presentationLayer, params object[] controlParameters)
    parameters:
    - id: uiHint
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The name of the control
    - id: presentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The presentation layer
    - id: controlParameters
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: The list of parameters for the control
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: UIHint
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 52
  summary: Gets the name of the control that is most appropriate for this associated property or field
  syntax:
    content:
      CSharp: public string UIHint { get; }
    parameters:
    - id: UIHint
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: PresentationLayer
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 60
  summary: Gets the name of the presentation layer that supports the control type in [System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint](System.ComponentModel.DataAnnotations.UIHintAttribute.yml)
  syntax:
    content:
      CSharp: public string PresentationLayer { get; }
    parameters:
    - id: PresentationLayer
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: ControlParameters
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 69
  summary: Gets the name-value pairs used as parameters to the control's constructor
  syntax:
    content:
      CSharp: public IDictionary<string, object> ControlParameters { get; }
    parameters:
    - id: ControlParameters
      type:
        id: IDictionary{System.String,System.Object}
        name: IDictionary{System.String,System.Object}
        isExternal: true
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: GetHashCode()
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 74
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode
- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
  href: System.ComponentModel.DataAnnotations.UIHintAttribute.yml
  name: Equals(object)
  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/UIHintAttribute.cs
    startLine: 79
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
  id: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)
