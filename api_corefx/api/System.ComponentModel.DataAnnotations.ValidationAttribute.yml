items:
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 20
  summary: >-
    Base class for all validation attributes.

    Override  to implement validation logic.
  syntax:
    content:
      CSharp: 'public abstract class ValidationAttribute : Attribute, _Attribute'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Attribute
    name: Attribute
    isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute
  children:
  - System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor
  - System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ValidationAttribute()
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ValidationAttribute()
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 42
  summary: Default constructor for any validation attribute.
  syntax:
    content:
      CSharp: 'protected ValidationAttribute(): this (() => SR.ValidationAttribute_ValidationError)'
    parameters: []
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ValidationAttribute(string)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ValidationAttribute(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 51
  summary: Constructor that accepts a fixed validation error message.
  syntax:
    content:
      CSharp: 'protected ValidationAttribute(string errorMessage): this (() => errorMessage)'
    parameters:
    - id: errorMessage
      type:
        id: System.String
        name: string
        isExternal: true
      description: A non-localized error message to use in [System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString](System.ComponentModel.DataAnnotations.ValidationAttribute.yml).
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ValidationAttribute(Func<string>)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ValidationAttribute(System.Func<string>)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 62
  summary: >-
    Allows for providing a resource accessor function that will be used by the [System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)

    property to retrieve the error message.  An example would be to have something like

    CustomAttribute() : base( () => MyResources.MyErrorMessage ) {}.
  syntax:
    content:
      CSharp: protected ValidationAttribute(Func<string> errorMessageAccessor)
    parameters:
    - id: errorMessageAccessor
      type:
        id: System.Func{System.String}
        name: Func<string>
        isExternal: true
      description: The [System.Func`1]() that will return an error message.
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ErrorMessageString
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 100
  summary: >-
    Gets the localized error message string, coming either from [System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage](System.ComponentModel.DataAnnotations.ValidationAttribute.yml), or from evaluating the

    [System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType](System.ComponentModel.DataAnnotations.ValidationAttribute.yml) and [System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName](System.ComponentModel.DataAnnotations.ValidationAttribute.yml) pair.
  syntax:
    content:
      CSharp: protected string ErrorMessageString { get; }
    parameters:
    - id: ErrorMessageString
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: RequiresValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 120
  syntax:
    content:
      CSharp: public virtual bool RequiresValidationContext { get; }
    parameters:
    - id: RequiresValidationContext
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ErrorMessage
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 136
  summary: Gets or sets and explicit error message string.
  syntax:
    content:
      CSharp: public string ErrorMessage { get; set; }
    parameters:
    - id: ErrorMessage
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ErrorMessageResourceName
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 166
  summary: Gets or sets the resource name (property name) to use as the key for lookups on the resource type.
  syntax:
    content:
      CSharp: public string ErrorMessageResourceName { get; set; }
    parameters:
    - id: ErrorMessageResourceName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ErrorMessageResourceType
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 187
  summary: Gets or sets the resource type to use for error message lookups.
  syntax:
    content:
      CSharp: public Type ErrorMessageResourceType { get; set; }
    parameters:
    - id: ErrorMessageResourceType
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: FormatErrorMessage(string)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(string)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 326
  summary: Formats the error message to present to the user.
  syntax:
    content:
      CSharp: public virtual string FormatErrorMessage(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The user-visible name to include in the formatted message.
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: The localized string describing the validation error
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: IsValid(object)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 350
  summary: >-
    Gets the value indicating whether or not the specified  is valid

    with respect to the current validation attribute.



    Derived classes should not override this method as it is only available for backwards compatibility.

    Instead, implement .
  syntax:
    content:
      CSharp: public virtual bool IsValid(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to validate
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if the  is acceptable, false if it is not acceptable
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: IsValid(object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 384
  summary: >-
    Protected virtual method to override and implement validation logic.



    Derived classes should override this method instead of , which is deprecated.
  syntax:
    content:
      CSharp: protected virtual ValidationResult IsValid(object value, ValidationContext validationContext)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to validate.
    - id: validationContext
      type:
        id: System.ComponentModel.DataAnnotations.ValidationContext
        name: ValidationContext
        href: System.ComponentModel.DataAnnotations.ValidationContext.yml
      description: >-
        A [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) instance that provides

        context about the validation operation, such as the object and member being validated.
    return:
      id: ValidationResult
      type:
        id: System.ComponentModel.DataAnnotations.ValidationResult
        name: ValidationResult
        href: System.ComponentModel.DataAnnotations.ValidationResult.yml
      description: >-
        When validation is valid, [System.ComponentModel.DataAnnotations.ValidationResult.Success](System.ComponentModel.DataAnnotations.ValidationResult.yml).



        When validation is invalid, an instance of .
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: GetValidationResult(object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 433
  summary: >-
    Tests whether the given  is valid with respect to the current

    validation attribute without throwing a [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml)
  syntax:
    content:
      CSharp: public ValidationResult GetValidationResult(object value, ValidationContext validationContext)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to validate
    - id: validationContext
      type:
        id: System.ComponentModel.DataAnnotations.ValidationContext
        name: ValidationContext
        href: System.ComponentModel.DataAnnotations.ValidationContext.yml
      description: >-
        A [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) instance that provides

        context about the validation operation, such as the object and member being validated.
    return:
      id: ValidationResult
      type:
        id: System.ComponentModel.DataAnnotations.ValidationResult
        name: ValidationResult
        href: System.ComponentModel.DataAnnotations.ValidationResult.yml
      description: >-
        When validation is valid, [System.ComponentModel.DataAnnotations.ValidationResult.Success](System.ComponentModel.DataAnnotations.ValidationResult.yml).



        When validation is invalid, an instance of .
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: Validate(object, string)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(object, string)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 474
  summary: >-
    Validates the specified  and throws [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if it is not.



    The overloaded  is the recommended entry point as it

    can provide additional context to the  being validated.
  syntax:
    content:
      CSharp: public void Validate(object value, string name)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to validate
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The string to be included in the validation error message if  is not valid
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: Validate(object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationAttribute.cs
    startLine: 503
  summary: Validates the specified  and throws [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if it is not.
  syntax:
    content:
      CSharp: public void Validate(object value, ValidationContext validationContext)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The value to validate
    - id: validationContext
      type:
        id: System.ComponentModel.DataAnnotations.ValidationContext
        name: ValidationContext
        href: System.ComponentModel.DataAnnotations.ValidationContext.yml
      description: Additional context that may be used for validation.  It cannot be null.
  id: System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
