id: System.ComponentModel.DataAnnotations.ValidationContext
href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
name:
  CSharp: ValidationContext
qualifiedName:
  CSharp: System.ComponentModel.DataAnnotations.ValidationContext
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
  startLine: 23
summary: Describes the context in which a validation is being performed.
syntax:
  content:
    CSharp: public sealed class ValidationContext
inheritance:
- id: IServiceProvider
  name: IServiceProvider
  isExternal: true
items:
- id: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: ValidationContext(System.Object)
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 45
  summary: Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yaml) for a given object instance being validated.
  syntax:
    content:
      CSharp: 'public ValidationContext(object instance): this (instance, null, null)'
    parameters:
    - id: instance
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The object instance being validated.  It cannot be null.
    return:
      id: Void
- id: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,IDictionary{System.Object,System.Object})
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: ValidationContext(System.Object,IDictionary{System.Object,System.Object})
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object,IDictionary{System.Object,System.Object})
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 61
  summary: >-
    Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yaml) for a given object instance and an optional

    property bag of .
  syntax:
    content:
      CSharp: 'public ValidationContext(object instance, IDictionary<object, object> items): this (instance, null, items)'
    parameters:
    - id: instance
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The object instance being validated.  It cannot be null.
    - id: items
      type:
        id: IDictionary{System.Object,System.Object}
        name: IDictionary{System.Object,System.Object}
        isExternal: true
      description: >-
        Optional set of key/value pairs to make available to consumers via [System.ComponentModel.DataAnnotations.ValidationContext.Items](System.ComponentModel.DataAnnotations.ValidationContext.yaml).

        If null, an empty dictionary will be created.  If not null, the set of key/value pairs will be copied into a

        new dictionary, preventing consumers from modifying the original dictionary.
    return:
      id: Void
- id: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,IServiceProvider,IDictionary{System.Object,System.Object})
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: ValidationContext(System.Object,IServiceProvider,IDictionary{System.Object,System.Object})
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object,IServiceProvider,IDictionary{System.Object,System.Object})
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 82
  summary: >-
    Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yaml) for a given object instance, an optional

    , and an optional

    property bag of .
  syntax:
    content:
      CSharp: public ValidationContext(object instance, IServiceProvider serviceProvider, IDictionary<object, object> items)
    parameters:
    - id: instance
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The object instance being validated.  It cannot be null.
    - id: serviceProvider
      type:
        id: IServiceProvider
        name: IServiceProvider
        isExternal: true
      description: >-
        Optional @!:IServiceProvider- to use when [System.ComponentModel.DataAnnotations.ValidationContext.GetService(Type)](System.ComponentModel.DataAnnotations.ValidationContext.yaml) is called.

        If it is null, [System.ComponentModel.DataAnnotations.ValidationContext.GetService(Type)](System.ComponentModel.DataAnnotations.ValidationContext.yaml) will always return null.
    - id: items
      type:
        id: IDictionary{System.Object,System.Object}
        name: IDictionary{System.Object,System.Object}
        isExternal: true
      description: >-
        Optional set of key/value pairs to make available to consumers via [System.ComponentModel.DataAnnotations.ValidationContext.Items](System.ComponentModel.DataAnnotations.ValidationContext.yaml).

        If null, an empty dictionary will be created.  If not null, the set of key/value pairs will be copied into a

        new dictionary, preventing consumers from modifying the original dictionary.
    return:
      id: Void
- id: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: ObjectInstance
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 120
  summary: >-
    Gets the object instance being validated.  While it will not be null, the state of the instance is indeterminate

    as it might only be partially initialized during validation.

    Consume this instance with caution!
  syntax:
    content:
      CSharp: public object ObjectInstance { get; }
    parameters:
    - id: ObjectInstance
      type:
        id: System.Object
        name: System.Object
        isExternal: true
- id: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: ObjectType
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 128
  summary: Gets the type of the object being validated.  It will not be null.
  syntax:
    content:
      CSharp: public Type ObjectType { get; }
    parameters:
    - id: ObjectType
      type:
        id: Type
        name: Type
        isExternal: true
- id: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: DisplayName
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 142
  summary: Gets or sets the user-visible name of the type or property being validated.
  syntax:
    content:
      CSharp: public string DisplayName { get; set; }
    parameters:
    - id: DisplayName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: MemberName
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 173
  summary: Gets or sets the name of the type or property being validated.
  syntax:
    content:
      CSharp: public string MemberName { get; set; }
    parameters:
    - id: MemberName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.ComponentModel.DataAnnotations.ValidationContext.Items
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: Items
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.Items
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 186
  summary: Gets the dictionary of key/value pairs associated with this context.
  syntax:
    content:
      CSharp: public IDictionary<object, object> Items { get; }
    parameters:
    - id: Items
      type:
        id: IDictionary{System.Object,System.Object}
        name: IDictionary{System.Object,System.Object}
        isExternal: true
- id: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(Func{Type,System.Object})
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: InitializeServiceProvider
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(Func{Type,System.Object})
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 231
  summary: >-
    Initializes the [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yaml) with a service provider that can return

    service instances by @!:Type- when [System.ComponentModel.DataAnnotations.ValidationContext.GetService(Type)](System.ComponentModel.DataAnnotations.ValidationContext.yaml) is called.
  syntax:
    content:
      CSharp: public void InitializeServiceProvider(Func<Type, object> serviceProvider)
    parameters:
    - id: serviceProvider
      type:
        id: Func{Type,System.Object}
        name: Func{Type,System.Object}
        isExternal: true
      description: >-
        A  that can return service instances given the

        desired  when  is called.

        If it is null,  will always return null.
    return:
      id: Void
- id: System.ComponentModel.DataAnnotations.ValidationContext.GetService(Type)
  href: System.ComponentModel.DataAnnotations.ValidationContext.yaml
  name:
    CSharp: GetService
  qualifiedName:
    CSharp: System.ComponentModel.DataAnnotations.ValidationContext.GetService(Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 245
  summary: See @!:IServiceProvider.GetService(Type)-.
  syntax:
    content:
      CSharp: public object GetService(Type serviceType)
    parameters:
    - id: serviceType
      type:
        id: Type
        name: Type
        isExternal: true
      description: The type of the service needed.
    return:
      id: Object
      description: An instance of that service or null if it is not available.
