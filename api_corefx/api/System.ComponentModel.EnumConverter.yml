items:
- uid: System.ComponentModel.EnumConverter
  href: System.ComponentModel.EnumConverter.yml
  name: EnumConverter
  fullName: System.ComponentModel.EnumConverter
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 14
  syntax:
    content:
      CSharp: 'public class EnumConverter : TypeConverter'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ComponentModel.TypeConverter
    name: TypeConverter
    href: System.ComponentModel.TypeConverter.yml
  id: System.ComponentModel.EnumConverter
  children:
  - System.ComponentModel.EnumConverter.#ctor(System.Type)
  - System.ComponentModel.EnumConverter.EnumType
  - System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  href: System.ComponentModel.EnumConverter.yml
  name: EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(System.Type)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 32
  syntax:
    content:
      CSharp: public EnumConverter(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.ComponentModel.EnumConverter.#ctor(System.Type)
- uid: System.ComponentModel.EnumConverter.EnumType
  href: System.ComponentModel.EnumConverter.yml
  name: EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 40
  syntax:
    content:
      CSharp: protected Type EnumType { get; }
    parameters:
    - id: EnumType
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.ComponentModel.EnumConverter.EnumType
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  href: System.ComponentModel.EnumConverter.yml
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 54
  syntax:
    content:
      CSharp: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        href: System.ComponentModel.ITypeDescriptorContext.yml
    - id: sourceType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  href: System.ComponentModel.EnumConverter.yml
  name: CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 67
  syntax:
    content:
      CSharp: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        href: System.ComponentModel.ITypeDescriptorContext.yml
    - id: destinationType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  href: System.ComponentModel.EnumConverter.yml
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 80
  syntax:
    content:
      CSharp: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        href: System.ComponentModel.ITypeDescriptorContext.yml
    - id: culture
      type:
        id: System.Globalization.CultureInfo
        name: CultureInfo
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  href: System.ComponentModel.EnumConverter.yml
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 125
  syntax:
    content:
      CSharp: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        href: System.ComponentModel.ITypeDescriptorContext.yml
    - id: culture
      type:
        id: System.Globalization.CultureInfo
        name: CultureInfo
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: destinationType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
