items:
- uid: System.Diagnostics.FileVersionInfo
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.Windows.cs
    startLine: 9
  summary: Provides version information for a physical file on disk.
  syntax:
    content:
      CSharp: public sealed class FileVersionInfo
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Diagnostics.FileVersionInfo
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.ToString
- uid: System.Diagnostics.FileVersionInfo.Comments
  href: System.Diagnostics.FileVersionInfo.yml
  name: Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  source:
    remote: &o0
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 45
  summary: Gets the comments associated with the file.
  syntax:
    content:
      CSharp: public string Comments { get; }
    parameters:
    - id: Comments
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.Comments
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  href: System.Diagnostics.FileVersionInfo.yml
  name: CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 53
  summary: Gets the name of the company that produced the file.
  syntax:
    content:
      CSharp: public string CompanyName { get; }
    parameters:
    - id: CompanyName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 61
  summary: Gets the build number of the file.
  syntax:
    content:
      CSharp: public int FileBuildPart { get; }
    parameters:
    - id: FileBuildPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileBuildPart
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 69
  summary: Gets the description of the file.
  syntax:
    content:
      CSharp: public string FileDescription { get; }
    parameters:
    - id: FileDescription
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 77
  summary: Gets the major part of the version number.
  syntax:
    content:
      CSharp: public int FileMajorPart { get; }
    parameters:
    - id: FileMajorPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 85
  summary: Gets the minor part of the version number of the file.
  syntax:
    content:
      CSharp: public int FileMinorPart { get; }
    parameters:
    - id: FileMinorPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 93
  summary: Gets the name of the file that this instance of System.Windows.Forms.FileVersionInfo describes.
  syntax:
    content:
      CSharp: public string FileName { get; }
    parameters:
    - id: FileName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  href: System.Diagnostics.FileVersionInfo.yml
  name: FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 101
  summary: Gets the file private part number.
  syntax:
    content:
      CSharp: public int FilePrivatePart { get; }
    parameters:
    - id: FilePrivatePart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  href: System.Diagnostics.FileVersionInfo.yml
  name: FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 109
  summary: Gets the file version number.
  syntax:
    content:
      CSharp: public string FileVersion { get; }
    parameters:
    - id: FileVersion
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.InternalName
  href: System.Diagnostics.FileVersionInfo.yml
  name: InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 117
  summary: Gets the internal name of the file, if one exists.
  syntax:
    content:
      CSharp: public string InternalName { get; }
    parameters:
    - id: InternalName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  href: System.Diagnostics.FileVersionInfo.yml
  name: IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 126
  summary: >-
    Gets a value that specifies whether the file contains debugging information

    or is compiled with debugging features enabled.
  syntax:
    content:
      CSharp: public bool IsDebug { get; }
    parameters:
    - id: IsDebug
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.IsDebug
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  href: System.Diagnostics.FileVersionInfo.yml
  name: IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 135
  summary: >-
    Gets a value that specifies whether the file has been modified and is not identical to

    the original shipping file of the same version number.
  syntax:
    content:
      CSharp: public bool IsPatched { get; }
    parameters:
    - id: IsPatched
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  href: System.Diagnostics.FileVersionInfo.yml
  name: IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 143
  summary: Gets a value that specifies whether the file was built using standard release procedures.
  syntax:
    content:
      CSharp: public bool IsPrivateBuild { get; }
    parameters:
    - id: IsPrivateBuild
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  href: System.Diagnostics.FileVersionInfo.yml
  name: IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 152
  summary: >-
    Gets a value that specifies whether the file

    is a development version, rather than a commercially released product.
  syntax:
    content:
      CSharp: public bool IsPreRelease { get; }
    parameters:
    - id: IsPreRelease
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  href: System.Diagnostics.FileVersionInfo.yml
  name: IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 160
  summary: Gets a value that specifies whether the file is a special build.
  syntax:
    content:
      CSharp: public bool IsSpecialBuild { get; }
    parameters:
    - id: IsSpecialBuild
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language
  href: System.Diagnostics.FileVersionInfo.yml
  name: Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 168
  summary: Gets the default language string for the version info block.
  syntax:
    content:
      CSharp: public string Language { get; }
    parameters:
    - id: Language
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  href: System.Diagnostics.FileVersionInfo.yml
  name: LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 176
  summary: Gets all copyright notices that apply to the specified file.
  syntax:
    content:
      CSharp: public string LegalCopyright { get; }
    parameters:
    - id: LegalCopyright
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  href: System.Diagnostics.FileVersionInfo.yml
  name: LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 184
  summary: Gets the trademarks and registered trademarks that apply to the file.
  syntax:
    content:
      CSharp: public string LegalTrademarks { get; }
    parameters:
    - id: LegalTrademarks
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  href: System.Diagnostics.FileVersionInfo.yml
  name: OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 192
  summary: Gets the name the file was created with.
  syntax:
    content:
      CSharp: public string OriginalFilename { get; }
    parameters:
    - id: OriginalFilename
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  href: System.Diagnostics.FileVersionInfo.yml
  name: PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 200
  summary: Gets information about a private version of the file.
  syntax:
    content:
      CSharp: public string PrivateBuild { get; }
    parameters:
    - id: PrivateBuild
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 208
  summary: Gets the build number of the product this file is associated with.
  syntax:
    content:
      CSharp: public int ProductBuildPart { get; }
    parameters:
    - id: ProductBuildPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 216
  summary: Gets the major part of the version number for the product this file is associated with.
  syntax:
    content:
      CSharp: public int ProductMajorPart { get; }
    parameters:
    - id: ProductMajorPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 224
  summary: Gets the minor part of the version number for the product the file is associated with.
  syntax:
    content:
      CSharp: public int ProductMinorPart { get; }
    parameters:
    - id: ProductMinorPart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 232
  summary: Gets the name of the product this file is distributed with.
  syntax:
    content:
      CSharp: public string ProductName { get; }
    parameters:
    - id: ProductName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 240
  summary: Gets the private part number of the product this file is associated with.
  syntax:
    content:
      CSharp: public int ProductPrivatePart { get; }
    parameters:
    - id: ProductPrivatePart
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  href: System.Diagnostics.FileVersionInfo.yml
  name: ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 248
  summary: Gets the version of the product this file is distributed with.
  syntax:
    content:
      CSharp: public string ProductVersion { get; }
    parameters:
    - id: ProductVersion
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  href: System.Diagnostics.FileVersionInfo.yml
  name: SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 256
  summary: Gets the special build information for the file.
  syntax:
    content:
      CSharp: public string SpecialBuild { get; }
    parameters:
    - id: SpecialBuild
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  href: System.Diagnostics.FileVersionInfo.yml
  name: GetVersionInfo(string)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 264
  summary: Returns a System.Windows.Forms.FileVersionInfo representing the version information associated with the specified file.
  syntax:
    content:
      CSharp: public static FileVersionInfo GetVersionInfo(string fileName)
    parameters:
    - id: fileName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: FileVersionInfo
      type:
        id: System.Diagnostics.FileVersionInfo
        name: FileVersionInfo
        href: System.Diagnostics.FileVersionInfo.yml
  id: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
- uid: System.Diagnostics.FileVersionInfo.ToString
  href: System.Diagnostics.FileVersionInfo.yml
  name: ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 279
  summary: >-
    Returns a partial list of properties in System.Windows.Forms.FileVersionInfo

    and their values.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Diagnostics.FileVersionInfo.ToString
