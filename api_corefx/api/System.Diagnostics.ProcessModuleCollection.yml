items:
- uid: System.Diagnostics.ProcessModuleCollection
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ProcessModuleCollection
  fullName: System.Diagnostics.ProcessModuleCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 11
  syntax:
    content:
      CSharp: 'public class ProcessModuleCollection : ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Diagnostics.ProcessModuleCollection
  children:
  - System.Diagnostics.ProcessModuleCollection.#ctor
  - System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
  - System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
  - System.Diagnostics.ProcessModuleCollection.InnerList
  - System.Diagnostics.ProcessModuleCollection.Count
  - System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.ProcessModuleCollection.GetEnumerator
  - System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  - System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  - System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
- uid: System.Diagnostics.ProcessModuleCollection.#ctor
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ProcessModuleCollection()
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 18
  syntax:
    content:
      CSharp: protected ProcessModuleCollection()
    parameters: []
  id: System.Diagnostics.ProcessModuleCollection.#ctor
- uid: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ProcessModuleCollection(ProcessModule[])
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection(System.Diagnostics.ProcessModule[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 25
  syntax:
    content:
      CSharp: public ProcessModuleCollection(ProcessModule[] processModules)
    parameters:
    - id: processModules
      type:
        id: System.Array
        name: ProcessModule[]
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
- uid: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: this[int]
  fullName: System.Diagnostics.ProcessModuleCollection.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 33
  syntax:
    content:
      CSharp: public ProcessModule this[int index] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Diagnostics.ProcessModule
        name: ProcessModule
        href: System.Diagnostics.ProcessModule.yml
  id: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
- uid: System.Diagnostics.ProcessModuleCollection.InnerList
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: InnerList
  fullName: System.Diagnostics.ProcessModuleCollection.InnerList
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 38
  syntax:
    content:
      CSharp: protected List<ProcessModule> InnerList { get; }
    parameters:
    - id: InnerList
      type:
        id: System.Collections.Generic.List{System.Diagnostics.ProcessModule}
        name: List<ProcessModule>
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.InnerList
- uid: System.Diagnostics.ProcessModuleCollection.Count
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: Count
  fullName: System.Diagnostics.ProcessModuleCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 48
  syntax:
    content:
      CSharp: public virtual int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.Count
- uid: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#IsSynchronized
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ICollection.IsSynchronized
  fullName: System.Diagnostics.ProcessModuleCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 53
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#IsSynchronized
- uid: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#SyncRoot
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ICollection.SyncRoot
  fullName: System.Diagnostics.ProcessModuleCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 58
  syntax:
    content:
      CSharp: object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#SyncRoot
- uid: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Diagnostics.ProcessModuleCollection.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 63
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Diagnostics.ProcessModuleCollection.GetEnumerator
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: GetEnumerator()
  fullName: System.Diagnostics.ProcessModuleCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 68
  syntax:
    content:
      CSharp: public virtual IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.GetEnumerator
- uid: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: IndexOf(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 76
  syntax:
    content:
      CSharp: public int IndexOf(ProcessModule module)
    parameters:
    - id: module
      type:
        id: System.Diagnostics.ProcessModule
        name: ProcessModule
        href: System.Diagnostics.ProcessModule.yml
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
- uid: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: Contains(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 84
  syntax:
    content:
      CSharp: public bool Contains(ProcessModule module)
    parameters:
    - id: module
      type:
        id: System.Diagnostics.ProcessModule
        name: ProcessModule
        href: System.Diagnostics.ProcessModule.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
- uid: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
  href: System.Diagnostics.ProcessModuleCollection.yml
  name: CopyTo(ProcessModule[], int)
  fullName: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessModuleCollection.cs
    startLine: 92
  syntax:
    content:
      CSharp: public void CopyTo(ProcessModule[] array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: ProcessModule[]
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
