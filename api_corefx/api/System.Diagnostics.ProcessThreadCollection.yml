items:
- uid: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 11
  syntax:
    content:
      CSharp: 'public class ProcessThreadCollection : ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Diagnostics.ProcessThreadCollection
  children:
  - System.Diagnostics.ProcessThreadCollection.#ctor
  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  - System.Diagnostics.ProcessThreadCollection.InnerList
  - System.Diagnostics.ProcessThreadCollection.Count
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.ProcessThreadCollection.GetEnumerator
  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 18
  syntax:
    content:
      CSharp: protected ProcessThreadCollection()
    parameters: []
  id: System.Diagnostics.ProcessThreadCollection.#ctor
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(System.Diagnostics.ProcessThread[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 25
  syntax:
    content:
      CSharp: public ProcessThreadCollection(ProcessThread[] processThreads)
    parameters:
    - id: processThreads
      type:
        id: System.Array
        name: ProcessThread[]
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
- uid: System.Diagnostics.ProcessThreadCollection.InnerList
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: InnerList
  fullName: System.Diagnostics.ProcessThreadCollection.InnerList
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 30
  syntax:
    content:
      CSharp: protected List<ProcessThread> InnerList { get; }
    parameters:
    - id: InnerList
      type:
        id: System.Collections.Generic.List{System.Diagnostics.ProcessThread}
        name: List<ProcessThread>
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.InnerList
- uid: System.Diagnostics.ProcessThreadCollection.Count
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Count
  fullName: System.Diagnostics.ProcessThreadCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 40
  syntax:
    content:
      CSharp: public virtual int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.Count
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#IsSynchronized
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.IsSynchronized
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 45
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#IsSynchronized
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#SyncRoot
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.SyncRoot
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 50
  syntax:
    content:
      CSharp: object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#SyncRoot
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 55
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Diagnostics.ProcessThreadCollection.GetEnumerator
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: GetEnumerator()
  fullName: System.Diagnostics.ProcessThreadCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 60
  syntax:
    content:
      CSharp: public virtual IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.GetEnumerator
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: this[int]
  fullName: System.Diagnostics.ProcessThreadCollection.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 68
  syntax:
    content:
      CSharp: public ProcessThread this[int index] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
  id: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 76
  syntax:
    content:
      CSharp: public int Add(ProcessThread thread)
    parameters:
    - id: thread
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Insert(int, ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(int, System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 84
  syntax:
    content:
      CSharp: public void Insert(int index, ProcessThread thread)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: thread
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
  id: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 92
  syntax:
    content:
      CSharp: public int IndexOf(ProcessThread thread)
    parameters:
    - id: thread
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 100
  syntax:
    content:
      CSharp: public bool Contains(ProcessThread thread)
    parameters:
    - id: thread
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 108
  syntax:
    content:
      CSharp: public void Remove(ProcessThread thread)
    parameters:
    - id: thread
      type:
        id: System.Diagnostics.ProcessThread
        name: ProcessThread
        href: System.Diagnostics.ProcessThread.yml
  id: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: CopyTo(ProcessThread[], int)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 116
  syntax:
    content:
      CSharp: public void CopyTo(ProcessThread[] array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: ProcessThread[]
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
