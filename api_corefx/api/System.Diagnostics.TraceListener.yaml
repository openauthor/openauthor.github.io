id: System.Diagnostics.TraceListener
href: System.Diagnostics.TraceListener.yaml
name:
  CSharp: TraceListener
qualifiedName:
  CSharp: System.Diagnostics.TraceListener
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
  startLine: 15
syntax:
  content:
    CSharp: public abstract class TraceListener
inheritance:
- id: IDisposable
  name: IDisposable
  isExternal: true
items:
- id: System.Diagnostics.TraceListener.Name
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 44
  syntax:
    content:
      CSharp: public virtual string Name { get; set; }
    parameters:
    - id: Name
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.Diagnostics.TraceListener.IsThreadSafe
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: IsThreadSafe
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.IsThreadSafe
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 51
  syntax:
    content:
      CSharp: public virtual bool IsThreadSafe { get; }
    parameters:
    - id: IsThreadSafe
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Diagnostics.TraceListener.Dispose
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Dispose
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Dispose
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 58
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Flush
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Flush
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Flush
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 74
  syntax:
    content:
      CSharp: public virtual void Flush()
    parameters: []
    return:
      id: Void
- id: System.Diagnostics.TraceListener.IndentLevel
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: IndentLevel
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.IndentLevel
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 82
  syntax:
    content:
      CSharp: public int IndentLevel { get; set; }
    parameters:
    - id: IndentLevel
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Diagnostics.TraceListener.IndentSize
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: IndentSize
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.IndentSize
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 98
  syntax:
    content:
      CSharp: public int IndentSize { get; set; }
    parameters:
    - id: IndentSize
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Diagnostics.TraceListener.Filter
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Filter
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Filter
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 113
  syntax:
    content:
      CSharp: public TraceFilter Filter { get; set; }
    parameters:
    - id: Filter
      type:
        id: System.Diagnostics.TraceFilter
        name: TraceFilter
        href: System.Diagnostics.TraceFilter.yaml
- id: System.Diagnostics.TraceListener.TraceOutputOptions
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceOutputOptions
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceOutputOptions
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 142
  syntax:
    content:
      CSharp: public TraceOptions TraceOutputOptions { get; set; }
    parameters:
    - id: TraceOutputOptions
      type:
        id: System.Diagnostics.TraceOptions
        name: TraceOptions
        href: System.Diagnostics.TraceOptions.yaml
- id: System.Diagnostics.TraceListener.Fail(System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Fail
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Fail(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 159
  syntax:
    content:
      CSharp: public virtual void Fail(string message)
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Fail
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 167
  syntax:
    content:
      CSharp: public virtual void Fail(string message, string detailMessage)
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: detailMessage
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Write(System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Write
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Write(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 186
  syntax:
    content:
      CSharp: public abstract void Write(string message);
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Write(System.Object)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Write
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Write(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 192
  syntax:
    content:
      CSharp: public virtual void Write(object o)
    parameters:
    - id: o
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Write(System.String,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Write
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Write(System.String,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 206
  syntax:
    content:
      CSharp: public virtual void Write(string message, string category)
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: Write
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 222
  syntax:
    content:
      CSharp: public virtual void Write(object o, string category)
    parameters:
    - id: o
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.WriteLine(System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: WriteLine
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.WriteLine(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 260
  syntax:
    content:
      CSharp: public abstract void WriteLine(string message);
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.WriteLine(System.Object)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: WriteLine
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.WriteLine(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 267
  syntax:
    content:
      CSharp: public virtual void WriteLine(object o)
    parameters:
    - id: o
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: WriteLine
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 280
  syntax:
    content:
      CSharp: public virtual void WriteLine(string message, string category)
    parameters:
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: WriteLine
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 297
  syntax:
    content:
      CSharp: public virtual void WriteLine(object o, string category)
    parameters:
    - id: o
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    - id: category
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceData
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 308
  syntax:
    content:
      CSharp: public virtual void TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, int id, object data)
    parameters:
    - id: eventCache
      type:
        id: System.Diagnostics.TraceEventCache
        name: TraceEventCache
        href: System.Diagnostics.TraceEventCache.yaml
    - id: source
      type:
        id: String
        name: String
        isExternal: true
    - id: eventType
      type:
        id: System.Diagnostics.TraceEventType
        name: TraceEventType
        href: System.Diagnostics.TraceEventType.yaml
    - id: id
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: data
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceData
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 322
  syntax:
    content:
      CSharp: public virtual void TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, int id, params object[] data)
    parameters:
    - id: eventCache
      type:
        id: System.Diagnostics.TraceEventCache
        name: TraceEventCache
        href: System.Diagnostics.TraceEventCache.yaml
    - id: source
      type:
        id: String
        name: String
        isExternal: true
    - id: eventType
      type:
        id: System.Diagnostics.TraceEventType
        name: TraceEventType
        href: System.Diagnostics.TraceEventType.yaml
    - id: id
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: data
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceEvent
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 346
  syntax:
    content:
      CSharp: public virtual void TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, int id)
    parameters:
    - id: eventCache
      type:
        id: System.Diagnostics.TraceEventCache
        name: TraceEventCache
        href: System.Diagnostics.TraceEventCache.yaml
    - id: source
      type:
        id: String
        name: String
        isExternal: true
    - id: eventType
      type:
        id: System.Diagnostics.TraceEventType
        name: TraceEventType
        href: System.Diagnostics.TraceEventType.yaml
    - id: id
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceEvent
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 352
  syntax:
    content:
      CSharp: public virtual void TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, int id, string message)
    parameters:
    - id: eventCache
      type:
        id: System.Diagnostics.TraceEventCache
        name: TraceEventCache
        href: System.Diagnostics.TraceEventCache.yaml
    - id: source
      type:
        id: String
        name: String
        isExternal: true
    - id: eventType
      type:
        id: System.Diagnostics.TraceEventType
        name: TraceEventType
        href: System.Diagnostics.TraceEventType.yaml
    - id: id
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: message
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  href: System.Diagnostics.TraceListener.yaml
  name:
    CSharp: TraceEvent
  qualifiedName:
    CSharp: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceListener.cs
    startLine: 363
  syntax:
    content:
      CSharp: public virtual void TraceEvent(TraceEventCache eventCache, String source, TraceEventType eventType, int id, string format, params object[] args)
    parameters:
    - id: eventCache
      type:
        id: System.Diagnostics.TraceEventCache
        name: TraceEventCache
        href: System.Diagnostics.TraceEventCache.yaml
    - id: source
      type:
        id: String
        name: String
        isExternal: true
    - id: eventType
      type:
        id: System.Diagnostics.TraceEventType
        name: TraceEventType
        href: System.Diagnostics.TraceEventType.yaml
    - id: id
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: format
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: args
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: Void
