items:
- uid: System.Dynamic.CallInfo
  href: System.Dynamic.CallInfo.yml
  name: CallInfo
  fullName: System.Dynamic.CallInfo
  type: Class
  source:
    remote: &o0
      path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 26
  summary: Describes arguments in the dynamic binding process.
  syntax:
    content:
      CSharp: public sealed class CallInfo
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Dynamic.CallInfo
  children:
  - System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
  - System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  - System.Dynamic.CallInfo.ArgumentCount
  - System.Dynamic.CallInfo.ArgumentNames
  - System.Dynamic.CallInfo.GetHashCode
  - System.Dynamic.CallInfo.Equals(System.Object)
- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
  href: System.Dynamic.CallInfo.yml
  name: CallInfo(int, params string[])
  fullName: System.Dynamic.CallInfo.CallInfo(int, params string[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 37
  summary: Creates a new PositionalArgumentInfo.
  syntax:
    content:
      CSharp: 'public CallInfo(int argCount, params string[] argNames): this (argCount, (IEnumerable<string>)argNames)'
    parameters:
    - id: argCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of arguments.
    - id: argNames
      type:
        id: System.Array
        name: string[]
        isExternal: true
      description: The argument names.
  id: System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])
- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
  href: System.Dynamic.CallInfo.yml
  name: CallInfo(int, IEnumerable<string>)
  fullName: System.Dynamic.CallInfo.CallInfo(int, System.Collections.Generic.IEnumerable<string>)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 48
  summary: Creates a new CallInfo that represents arguments in the dynamic binding process.
  syntax:
    content:
      CSharp: public CallInfo(int argCount, IEnumerable<string> argNames)
    parameters:
    - id: argCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of arguments.
    - id: argNames
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: IEnumerable<string>
        isExternal: true
      description: The argument names.
  id: System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})
- uid: System.Dynamic.CallInfo.ArgumentCount
  href: System.Dynamic.CallInfo.yml
  name: ArgumentCount
  fullName: System.Dynamic.CallInfo.ArgumentCount
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 64
  summary: The number of arguments.
  syntax:
    content:
      CSharp: public int ArgumentCount { get; }
    parameters:
    - id: ArgumentCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Dynamic.CallInfo.ArgumentCount
- uid: System.Dynamic.CallInfo.ArgumentNames
  href: System.Dynamic.CallInfo.yml
  name: ArgumentNames
  fullName: System.Dynamic.CallInfo.ArgumentNames
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 72
  summary: The argument names.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<string> ArgumentNames { get; }
    parameters:
    - id: ArgumentNames
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
        name: ReadOnlyCollection<string>
        isExternal: true
  id: System.Dynamic.CallInfo.ArgumentNames
- uid: System.Dynamic.CallInfo.GetHashCode
  href: System.Dynamic.CallInfo.yml
  name: GetHashCode()
  fullName: System.Dynamic.CallInfo.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 81
  summary: Serves as a hash function for the current CallInfo.
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: A hash code for the current CallInfo.
  id: System.Dynamic.CallInfo.GetHashCode
- uid: System.Dynamic.CallInfo.Equals(System.Object)
  href: System.Dynamic.CallInfo.yml
  name: Equals(object)
  fullName: System.Dynamic.CallInfo.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/CallInfo.cs
    startLine: 91
  summary: Determines whether the specified CallInfo instance is considered equal to the current.
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The instance of CallInfo to compare with the current instance.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if the specified instance is equal to the current one otherwise, false.
  id: System.Dynamic.CallInfo.Equals(System.Object)
