items:
- uid: System.IO.Compression.GZipStream
  href: System.IO.Compression.GZipStream.yml
  name: GZipStream
  fullName: System.IO.Compression.GZipStream
  type: Class
  source:
    remote: &o0
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 9
  syntax:
    content:
      CSharp: 'public class GZipStream : Stream, IDisposable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
  - id: System.IO.Stream
    name: Stream
    isExternal: true
  id: System.IO.Compression.GZipStream
  children:
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.GZipStream.CanRead
  - System.IO.Compression.GZipStream.CanWrite
  - System.IO.Compression.GZipStream.CanSeek
  - System.IO.Compression.GZipStream.Length
  - System.IO.Compression.GZipStream.Position
  - System.IO.Compression.GZipStream.Flush
  - System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Compression.GZipStream.SetLength(System.Int64)
  - System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.Dispose(System.Boolean)
  - System.IO.Compression.GZipStream.BaseStream
  - System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  href: System.IO.Compression.GZipStream.yml
  name: GZipStream(Stream, CompressionMode)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 14
  syntax:
    content:
      CSharp: 'public GZipStream(Stream stream, CompressionMode mode): this (stream, mode, false)'
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
    - id: mode
      type:
        id: System.IO.Compression.CompressionMode
        name: CompressionMode
        href: System.IO.Compression.CompressionMode.yml
  id: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  href: System.IO.Compression.GZipStream.yml
  name: GZipStream(Stream, CompressionMode, bool)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 21
  syntax:
    content:
      CSharp: public GZipStream(Stream stream, CompressionMode mode, bool leaveOpen)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
    - id: mode
      type:
        id: System.IO.Compression.CompressionMode
        name: CompressionMode
        href: System.IO.Compression.CompressionMode.yml
    - id: leaveOpen
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  href: System.IO.Compression.GZipStream.yml
  name: GZipStream(Stream, CompressionLevel)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 29
  syntax:
    content:
      CSharp: 'public GZipStream(Stream stream, CompressionLevel compressionLevel): this (stream, compressionLevel, false)'
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
    - id: compressionLevel
      type:
        id: System.IO.Compression.CompressionLevel
        name: CompressionLevel
        href: System.IO.Compression.CompressionLevel.yml
  id: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  href: System.IO.Compression.GZipStream.yml
  name: GZipStream(Stream, CompressionLevel, bool)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 37
  syntax:
    content:
      CSharp: public GZipStream(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
    - id: compressionLevel
      type:
        id: System.IO.Compression.CompressionLevel
        name: CompressionLevel
        href: System.IO.Compression.CompressionLevel.yml
    - id: leaveOpen
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
- uid: System.IO.Compression.GZipStream.CanRead
  href: System.IO.Compression.GZipStream.yml
  name: CanRead
  fullName: System.IO.Compression.GZipStream.CanRead
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 59
  syntax:
    content:
      CSharp: public override bool CanRead { get; }
    parameters:
    - id: CanRead
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.CanRead
- uid: System.IO.Compression.GZipStream.CanWrite
  href: System.IO.Compression.GZipStream.yml
  name: CanWrite
  fullName: System.IO.Compression.GZipStream.CanWrite
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 72
  syntax:
    content:
      CSharp: public override bool CanWrite { get; }
    parameters:
    - id: CanWrite
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.CanWrite
- uid: System.IO.Compression.GZipStream.CanSeek
  href: System.IO.Compression.GZipStream.yml
  name: CanSeek
  fullName: System.IO.Compression.GZipStream.CanSeek
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 85
  syntax:
    content:
      CSharp: public override bool CanSeek { get; }
    parameters:
    - id: CanSeek
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.CanSeek
- uid: System.IO.Compression.GZipStream.Length
  href: System.IO.Compression.GZipStream.yml
  name: Length
  fullName: System.IO.Compression.GZipStream.Length
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 98
  syntax:
    content:
      CSharp: public override long Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Compression.GZipStream.Length
- uid: System.IO.Compression.GZipStream.Position
  href: System.IO.Compression.GZipStream.yml
  name: Position
  fullName: System.IO.Compression.GZipStream.Position
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 106
  syntax:
    content:
      CSharp: public override long Position { get; set; }
    parameters:
    - id: Position
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Compression.GZipStream.Position
- uid: System.IO.Compression.GZipStream.Flush
  href: System.IO.Compression.GZipStream.yml
  name: Flush()
  fullName: System.IO.Compression.GZipStream.Flush()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 119
  syntax:
    content:
      CSharp: public override void Flush()
    parameters: []
  id: System.IO.Compression.GZipStream.Flush
- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  href: System.IO.Compression.GZipStream.yml
  name: Seek(long, SeekOrigin)
  fullName: System.IO.Compression.GZipStream.Seek(long, System.IO.SeekOrigin)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 126
  syntax:
    content:
      CSharp: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: long
        isExternal: true
    - id: origin
      type:
        id: System.IO.SeekOrigin
        name: SeekOrigin
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)
  href: System.IO.Compression.GZipStream.yml
  name: SetLength(long)
  fullName: System.IO.Compression.GZipStream.SetLength(long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 131
  syntax:
    content:
      CSharp: public override void SetLength(long value)
    parameters:
    - id: value
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Compression.GZipStream.SetLength(System.Int64)
- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  href: System.IO.Compression.GZipStream.yml
  name: Read(byte[], int, int)
  fullName: System.IO.Compression.GZipStream.Read(byte[], int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 136
  syntax:
    content:
      CSharp: public override int Read(byte[] array, int offset, int count)
    parameters:
    - id: array
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  href: System.IO.Compression.GZipStream.yml
  name: Write(byte[], int, int)
  fullName: System.IO.Compression.GZipStream.Write(byte[], int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 142
  syntax:
    content:
      CSharp: public override void Write(byte[] array, int offset, int count)
    parameters:
    - id: array
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)
  href: System.IO.Compression.GZipStream.yml
  name: Dispose(bool)
  fullName: System.IO.Compression.GZipStream.Dispose(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 148
  syntax:
    content:
      CSharp: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Compression.GZipStream.Dispose(System.Boolean)
- uid: System.IO.Compression.GZipStream.BaseStream
  href: System.IO.Compression.GZipStream.yml
  name: BaseStream
  fullName: System.IO.Compression.GZipStream.BaseStream
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 164
  syntax:
    content:
      CSharp: public Stream BaseStream { get; }
    parameters:
    - id: BaseStream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
  id: System.IO.Compression.GZipStream.BaseStream
- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  href: System.IO.Compression.GZipStream.yml
  name: ReadAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Compression.GZipStream.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 179
  syntax:
    content:
      CSharp: public override Task<int> ReadAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: array
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{System.Int32}
        name: Task<int>
        isExternal: true
  id: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  href: System.IO.Compression.GZipStream.yml
  name: WriteAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Compression.GZipStream.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 185
  syntax:
    content:
      CSharp: public override Task WriteAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: array
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)
  href: System.IO.Compression.GZipStream.yml
  name: FlushAsync(CancellationToken)
  fullName: System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 191
  syntax:
    content:
      CSharp: public override Task FlushAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)
