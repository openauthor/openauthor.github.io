id: System.IO.Compression.ZipArchive
href: System.IO.Compression.ZipArchive.yaml
name:
  CSharp: ZipArchive
qualifiedName:
  CSharp: System.IO.Compression.ZipArchive
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
  startLine: 14
syntax:
  content:
    CSharp: public class ZipArchive
inheritance:
- id: IDisposable
  name: IDisposable
  isExternal: true
items:
- id: System.IO.Compression.ZipArchive.#ctor(Stream)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: ZipArchive(Stream)
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.ZipArchive(Stream)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 50
  summary: Initializes a new instance of ZipArchive on the given stream for reading.
  syntax:
    content:
      CSharp: 'public ZipArchive(Stream stream): this (stream, ZipArchiveMode.Read, leaveOpen: false, entryNameEncoding: null)'
    parameters:
    - id: stream
      type:
        id: Stream
        name: Stream
        isExternal: true
      description: The stream containing the archive to be read.
    return:
      id: Void
- id: System.IO.Compression.ZipArchive.#ctor(Stream,System.IO.Compression.ZipArchiveMode)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: ZipArchive(Stream,System.IO.Compression.ZipArchiveMode)
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.ZipArchive(Stream,System.IO.Compression.ZipArchiveMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 62
  summary: Initializes a new instance of ZipArchive on the given stream in the specified mode.
  syntax:
    content:
      CSharp: 'public ZipArchive(Stream stream, ZipArchiveMode mode): this (stream, mode, leaveOpen: false, entryNameEncoding: null)'
    parameters:
    - id: stream
      type:
        id: Stream
        name: Stream
        isExternal: true
      description: The input or output stream.
    - id: mode
      type:
        id: System.IO.Compression.ZipArchiveMode
        name: ZipArchiveMode
        href: System.IO.Compression.ZipArchiveMode.yaml
      description: See the description of the ZipArchiveMode enum. Read requires the stream to support reading, Create requires the stream to support writing, and Update requires the stream to support reading, writing, and seeking.
    return:
      id: Void
- id: System.IO.Compression.ZipArchive.#ctor(Stream,System.IO.Compression.ZipArchiveMode,Boolean)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: ZipArchive(Stream,System.IO.Compression.ZipArchiveMode,Boolean)
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.ZipArchive(Stream,System.IO.Compression.ZipArchiveMode,Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 75
  summary: Initializes a new instance of ZipArchive on the given stream in the specified mode, specifying whether to leave the stream open.
  syntax:
    content:
      CSharp: 'public ZipArchive(Stream stream, ZipArchiveMode mode, Boolean leaveOpen): this (stream, mode, leaveOpen, entryNameEncoding: null)'
    parameters:
    - id: stream
      type:
        id: Stream
        name: Stream
        isExternal: true
      description: The input or output stream.
    - id: mode
      type:
        id: System.IO.Compression.ZipArchiveMode
        name: ZipArchiveMode
        href: System.IO.Compression.ZipArchiveMode.yaml
      description: See the description of the ZipArchiveMode enum. Read requires the stream to support reading, Create requires the stream to support writing, and Update requires the stream to support reading, writing, and seeking.
    - id: leaveOpen
      type:
        id: Boolean
        name: Boolean
        isExternal: true
      description: true to leave the stream open upon disposing the ZipArchive, otherwise false.
    return:
      id: Void
- id: System.IO.Compression.ZipArchive.#ctor(Stream,System.IO.Compression.ZipArchiveMode,Boolean,Encoding)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: ZipArchive(Stream,System.IO.Compression.ZipArchiveMode,Boolean,Encoding)
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.ZipArchive(Stream,System.IO.Compression.ZipArchiveMode,Boolean,Encoding)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 128
  summary: Initializes a new instance of ZipArchive on the given stream in the specified mode, specifying whether to leave the stream open.
  syntax:
    content:
      CSharp: public ZipArchive(Stream stream, ZipArchiveMode mode, Boolean leaveOpen, Encoding entryNameEncoding)
    parameters:
    - id: stream
      type:
        id: Stream
        name: Stream
        isExternal: true
      description: The input or output stream.
    - id: mode
      type:
        id: System.IO.Compression.ZipArchiveMode
        name: ZipArchiveMode
        href: System.IO.Compression.ZipArchiveMode.yaml
      description: See the description of the ZipArchiveMode enum. Read requires the stream to support reading, Create requires the stream to support writing, and Update requires the stream to support reading, writing, and seeking.
    - id: leaveOpen
      type:
        id: Boolean
        name: Boolean
        isExternal: true
      description: true to leave the stream open upon disposing the ZipArchive, otherwise false.
    - id: entryNameEncoding
      type:
        id: Encoding
        name: Encoding
        isExternal: true
      description: >-
        The encoding to use when reading or writing entry names in this ZipArchive.

        ///     NOTE: Specifying this parameter to values other than null is discouraged.

        However, this may be necessary for interoperability with ZIP archive tools and libraries that do not correctly support

        UTF-8 encoding for entry names.

        This value is used as follows:Reading (opening) ZIP archive files:If entryNameEncoding is not specified (== null):For entries where the language encoding flag (EFS) in the general purpose bit flag of the local file header is not set,

        use the current system default code page (Encoding.Default) in order to decode the entry name.For entries where the language encoding flag (EFS) in the general purpose bit flag of the local file header is set,

        use UTF-8 (Encoding.UTF8) in order to decode the entry name.If entryNameEncoding is specified (!= null):For entries where the language encoding flag (EFS) in the general purpose bit flag of the local file header is not set,

        use the specified entryNameEncoding in order to decode the entry name.For entries where the language encoding flag (EFS) in the general purpose bit flag of the local file header is set,

        use UTF-8 (Encoding.UTF8) in order to decode the entry name.Writing (saving) ZIP archive files:If entryNameEncoding is not specified (== null):For entry names that contain characters outside the ASCII range,

        the language encoding flag (EFS) will be set in the general purpose bit flag of the local file header,

        and UTF-8 (Encoding.UTF8) will be used in order to encode the entry name into bytes.For entry names that do not contain characters outside the ASCII range,

        the language encoding flag (EFS) will not be set in the general purpose bit flag of the local file header,

        and the current system default code page (Encoding.Default) will be used to encode the entry names into bytes.If entryNameEncoding is specified (!= null):The specified entryNameEncoding will always be used to encode the entry names into bytes.

        The language encoding flag (EFS) in the general purpose bit flag of the local file header will be set if and only

        if the specified entryNameEncoding is a UTF-8 encoding.Note that Unicode encodings other than UTF-8 may not be currently used for the entryNameEncoding,

        otherwise an  is thrown.
    return:
      id: Void
- id: System.IO.Compression.ZipArchive.Entries
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: Entries
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.Entries
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 149
  summary: The collection of entries that are currently in the ZipArchive. This may not accurately represent the actual entries that are present in the underlying file or stream.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<ZipArchiveEntry> Entries { get; }
    parameters:
    - id: Entries
      type:
        id: ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
        name: ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
        isExternal: true
- id: System.IO.Compression.ZipArchive.Mode
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: Mode
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.Mode
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 169
  summary: The ZipArchiveMode that the ZipArchive was initialized with.
  syntax:
    content:
      CSharp: public ZipArchiveMode Mode { get; }
    parameters:
    - id: Mode
      type:
        id: System.IO.Compression.ZipArchiveMode
        name: ZipArchiveMode
        href: System.IO.Compression.ZipArchiveMode.yaml
- id: System.IO.Compression.ZipArchive.CreateEntry(String)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: CreateEntry
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.CreateEntry(String)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 198
  summary: >-
    Creates an empty entry in the Zip archive with the specified entry name.

    There are no restrictions on the names of entries.

    The last write time of the entry is set to the current time.

    If an entry with the specified name already exists in the archive, a second entry will be created that has an identical name.

    Since no CompressionLevel is specified, the default provided by the implementation of the underlying compression

    algorithm will be used; the ZipArchive will not impose its own default.

    (Currently, the underlying compression algorithm is provided by the System.IO.Compression.DeflateStream class.)
  syntax:
    content:
      CSharp: public ZipArchiveEntry CreateEntry(String entryName)
    parameters:
    - id: entryName
      type:
        id: String
        name: String
        isExternal: true
      description: A path relative to the root of the archive, indicating the name of the entry to be created.
    return:
      id: ZipArchiveEntry
      description: A wrapper for the newly created file entry in the archive.
- id: System.IO.Compression.ZipArchive.CreateEntry(String,System.IO.Compression.CompressionLevel)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: CreateEntry
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.CreateEntry(String,System.IO.Compression.CompressionLevel)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 217
  summary: Creates an empty entry in the Zip archive with the specified entry name. There are no restrictions on the names of entries. The last write time of the entry is set to the current time. If an entry with the specified name already exists in the archive, a second entry will be created that has an identical name.
  syntax:
    content:
      CSharp: public ZipArchiveEntry CreateEntry(String entryName, CompressionLevel compressionLevel)
    parameters:
    - id: entryName
      type:
        id: String
        name: String
        isExternal: true
      description: A path relative to the root of the archive, indicating the name of the entry to be created.
    - id: compressionLevel
      type:
        id: System.IO.Compression.CompressionLevel
        name: CompressionLevel
        href: System.IO.Compression.CompressionLevel.yaml
      description: The level of the compression (speed/memory vs. compressed size trade-off).
    return:
      id: ZipArchiveEntry
      description: A wrapper for the newly created file entry in the archive.
- id: System.IO.Compression.ZipArchive.Dispose
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: Dispose
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.Dispose
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 264
  summary: Finishes writing the archive and releases all resources used by the ZipArchive object, unless the object was constructed with leaveOpen as true. Any streams from opened entries in the ZipArchive still open will throw exceptions on subsequent writes, as the underlying streams will have been closed.
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
    return:
      id: Void
- id: System.IO.Compression.ZipArchive.GetEntry(String)
  href: System.IO.Compression.ZipArchive.yaml
  name:
    CSharp: GetEntry
  qualifiedName:
    CSharp: System.IO.Compression.ZipArchive.GetEntry(String)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 281
  summary: Retrieves a wrapper for the file entry in the archive with the specified name. Names are compared using ordinal comparison. If there are multiple entries in the archive with the specified name, the first one found will be returned.
  syntax:
    content:
      CSharp: public ZipArchiveEntry GetEntry(String entryName)
    parameters:
    - id: entryName
      type:
        id: String
        name: String
        isExternal: true
      description: A path relative to the root of the archive, identifying the desired entry.
    return:
      id: ZipArchiveEntry
      description: A wrapper for the file entry in the archive. If no entry in the archive exists with the specified name, null will be returned.
