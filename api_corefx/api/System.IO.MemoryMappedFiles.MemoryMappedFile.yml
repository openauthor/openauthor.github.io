items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.Windows.cs
    startLine: 11
  syntax:
    content:
      CSharp: public partial class MemoryMappedFile
  inheritance:
  - id: IDisposable
    name: IDisposable
    isExternal: true
  id: System.IO.MemoryMappedFiles.MemoryMappedFile
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: OpenExisting(string)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(string)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 44
  syntax:
    content:
      CSharp: public static MemoryMappedFile OpenExisting(string mapName)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: OpenExisting(string, MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(string, System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 49
  syntax:
    content:
      CSharp: public static MemoryMappedFile OpenExisting(string mapName, MemoryMappedFileRights desiredAccessRights)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: desiredAccessRights
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileRights
        name: MemoryMappedFileRights
        href: System.IO.MemoryMappedFiles.MemoryMappedFileRights.yml
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,HandleInheritability)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: OpenExisting(string, MemoryMappedFileRights, HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(string, System.IO.MemoryMappedFiles.MemoryMappedFileRights, HandleInheritability)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 54
  syntax:
    content:
      CSharp: '[SecurityCritical] public static MemoryMappedFile OpenExisting(string mapName, MemoryMappedFileRights desiredAccessRights, HandleInheritability inheritability)'
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: desiredAccessRights
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileRights
        name: MemoryMappedFileRights
        href: System.IO.MemoryMappedFiles.MemoryMappedFileRights.yml
    - id: inheritability
      type:
        id: HandleInheritability
        name: HandleInheritability
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(string)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(string)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 90
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateFromFile(string path)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(string, FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(string, FileMode)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 94
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateFromFile(string path, FileMode mode)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: mode
      type:
        id: FileMode
        name: FileMode
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(string, FileMode, string)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(string, FileMode, string)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 99
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateFromFile(string path, FileMode mode, string mapName)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: mode
      type:
        id: FileMode
        name: FileMode
        isExternal: true
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(string, FileMode, string, long)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(string, FileMode, string, long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 104
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateFromFile(string path, FileMode mode, string mapName, long capacity)
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: mode
      type:
        id: FileMode
        name: FileMode
        isExternal: true
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(string, FileMode, string, long, MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(string, FileMode, string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 109
  syntax:
    content:
      CSharp: '[SecurityCritical] public static MemoryMappedFile CreateFromFile(string path, FileMode mode, string mapName, long capacity, MemoryMappedFileAccess access)'
    parameters:
    - id: path
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: mode
      type:
        id: FileMode
        name: FileMode
        isExternal: true
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,HandleInheritability,System.Boolean)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateFromFile(FileStream, string, long, MemoryMappedFileAccess, HandleInheritability, bool)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream, string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess, HandleInheritability, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 186
  syntax:
    content:
      CSharp: '[SecurityCritical] public static MemoryMappedFile CreateFromFile(FileStream fileStream, string mapName, long capacity, MemoryMappedFileAccess access, HandleInheritability inheritability, bool leaveOpen)'
    parameters:
    - id: fileStream
      type:
        id: FileStream
        name: FileStream
        isExternal: true
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    - id: inheritability
      type:
        id: HandleInheritability
        name: HandleInheritability
        isExternal: true
    - id: leaveOpen
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,HandleInheritability,System.Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateNew(string, long)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(string, long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 254
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateNew(string mapName, long capacity)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateNew(string, long, MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 260
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateNew(string mapName, long capacity, MemoryMappedFileAccess access)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateNew(string, long, MemoryMappedFileAccess, MemoryMappedFileOptions, HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess, System.IO.MemoryMappedFiles.MemoryMappedFileOptions, HandleInheritability)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 266
  syntax:
    content:
      CSharp: '[SecurityCritical] public static MemoryMappedFile CreateNew(string mapName, long capacity, MemoryMappedFileAccess access, MemoryMappedFileOptions options, HandleInheritability inheritability)'
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    - id: options
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
        name: MemoryMappedFileOptions
        href: System.IO.MemoryMappedFiles.MemoryMappedFileOptions.yml
    - id: inheritability
      type:
        id: HandleInheritability
        name: HandleInheritability
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateOrOpen(string, long)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(string, long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 315
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateOrOpen(string mapName, long capacity)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateOrOpen(string, long, MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 321
  syntax:
    content:
      CSharp: public static MemoryMappedFile CreateOrOpen(string mapName, long capacity, MemoryMappedFileAccess access)
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateOrOpen(string, long, MemoryMappedFileAccess, MemoryMappedFileOptions, HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(string, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess, System.IO.MemoryMappedFiles.MemoryMappedFileOptions, HandleInheritability)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 327
  syntax:
    content:
      CSharp: '[SecurityCritical] public static MemoryMappedFile CreateOrOpen(string mapName, long capacity, MemoryMappedFileAccess access, MemoryMappedFileOptions options, HandleInheritability inheritability)'
    parameters:
    - id: mapName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: capacity
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    - id: options
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
        name: MemoryMappedFileOptions
        href: System.IO.MemoryMappedFiles.MemoryMappedFileOptions.yml
    - id: inheritability
      type:
        id: HandleInheritability
        name: HandleInheritability
        isExternal: true
    return:
      id: MemoryMappedFile
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 382
  syntax:
    content:
      CSharp: public MemoryMappedViewStream CreateViewStream()
    parameters: []
    return:
      id: MemoryMappedViewStream
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewStream(long, long)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(long, long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 387
  syntax:
    content:
      CSharp: public MemoryMappedViewStream CreateViewStream(long offset, long size)
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: size
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: MemoryMappedViewStream
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewStream(long, long, MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(long, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 392
  syntax:
    content:
      CSharp: '[SecurityCritical] public MemoryMappedViewStream CreateViewStream(long offset, long size, MemoryMappedFileAccess access)'
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: size
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    return:
      id: MemoryMappedViewStream
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 420
  syntax:
    content:
      CSharp: public MemoryMappedViewAccessor CreateViewAccessor()
    parameters: []
    return:
      id: MemoryMappedViewAccessor
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewAccessor(long, long)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(long, long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 425
  syntax:
    content:
      CSharp: public MemoryMappedViewAccessor CreateViewAccessor(long offset, long size)
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: size
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: MemoryMappedViewAccessor
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: CreateViewAccessor(long, long, MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(long, long, System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 430
  syntax:
    content:
      CSharp: '[SecurityCritical] public MemoryMappedViewAccessor CreateViewAccessor(long offset, long size, MemoryMappedFileAccess access)'
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: size
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    - id: access
      type:
        id: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
        name: MemoryMappedFileAccess
        href: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.yml
    return:
      id: MemoryMappedViewAccessor
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 457
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  href: System.IO.MemoryMappedFiles.MemoryMappedFile.yml
  name: SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  type: Property
  source:
    remote: *o0
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedFile.cs
    startLine: 482
  syntax:
    content:
      CSharp: public SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { [SecurityCritical] get; }
    parameters:
    - id: SafeMemoryMappedFileHandle
      type:
        id: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
        name: SafeMemoryMappedFileHandle
        href: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  id: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
