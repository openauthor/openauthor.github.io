id: System.IO.Pipes.NamedPipeClientStream
href: System.IO.Pipes.NamedPipeClientStream.yaml
name:
  CSharp: NamedPipeClientStream
qualifiedName:
  CSharp: System.IO.Pipes.NamedPipeClientStream
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.Windows.cs
  startLine: 16
summary: >-
  Named pipe client. Use this to open the client end of a named pipes created with

  NamedPipeServerStream.
syntax:
  content:
    CSharp: public sealed partial class NamedPipeClientStream
inheritance:
- id: Stream
  name: Stream
  isExternal: true
- id: System.IO.Pipes.PipeStream
  name: PipeStream
  href: System.IO.Pipes.PipeStream.yaml
items:
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(String)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(String)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 27
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(String pipeName): this (".", pipeName, PipeDirection.InOut, PipeOptions.None, TokenImpersonationLevel.None, HandleInheritability.None)'
    parameters:
    - id: pipeName
      type:
        id: String
        name: String
        isExternal: true
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(String,String)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(String,String)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 33
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(String serverName, String pipeName): this (serverName, pipeName, PipeDirection.InOut, PipeOptions.None, TokenImpersonationLevel.None, HandleInheritability.None)'
    parameters:
    - id: serverName
      type:
        id: String
        name: String
        isExternal: true
    - id: pipeName
      type:
        id: String
        name: String
        isExternal: true
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(String,String,System.IO.Pipes.PipeDirection)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 39
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction): this (serverName, pipeName, direction, PipeOptions.None, TokenImpersonationLevel.None, HandleInheritability.None)'
    parameters:
    - id: serverName
      type:
        id: String
        name: String
        isExternal: true
    - id: pipeName
      type:
        id: String
        name: String
        isExternal: true
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yaml
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 45
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction, PipeOptions options): this (serverName, pipeName, direction, options, TokenImpersonationLevel.None, HandleInheritability.None)'
    parameters:
    - id: serverName
      type:
        id: String
        name: String
        isExternal: true
    - id: pipeName
      type:
        id: String
        name: String
        isExternal: true
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yaml
    - id: options
      type:
        id: System.IO.Pipes.PipeOptions
        name: PipeOptions
        href: System.IO.Pipes.PipeOptions.yaml
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,TokenImpersonationLevel)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,TokenImpersonationLevel)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,TokenImpersonationLevel)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 51
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(String serverName, String pipeName, PipeDirection direction, PipeOptions options, TokenImpersonationLevel impersonationLevel): this (serverName, pipeName, direction, options, impersonationLevel, HandleInheritability.None)'
    parameters:
    - id: serverName
      type:
        id: String
        name: String
        isExternal: true
    - id: pipeName
      type:
        id: String
        name: String
        isExternal: true
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yaml
    - id: options
      type:
        id: System.IO.Pipes.PipeOptions
        name: PipeOptions
        href: System.IO.Pipes.PipeOptions.yaml
    - id: impersonationLevel
      type:
        id: TokenImpersonationLevel
        name: TokenImpersonationLevel
        isExternal: true
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NamedPipeClientStream(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 100
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] public NamedPipeClientStream(PipeDirection direction, bool isAsync, bool isConnected, SafePipeHandle safePipeHandle): base (direction, 0)'
    parameters:
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yaml
    - id: isAsync
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: isConnected
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: safePipeHandle
      type:
        id: Microsoft.Win32.SafeHandles.SafePipeHandle
        name: SafePipeHandle
        href: Microsoft.Win32.SafeHandles.SafePipeHandle
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.Connect
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: Connect
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.Connect
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 126
  syntax:
    content:
      CSharp: public void Connect()
    parameters: []
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: Connect
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 131
  syntax:
    content:
      CSharp: public void Connect(int timeout)
    parameters:
    - id: timeout
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Void
- id: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: ConnectAsync
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 177
  syntax:
    content:
      CSharp: public Task ConnectAsync()
    parameters: []
    return:
      id: Task
- id: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: ConnectAsync
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 184
  syntax:
    content:
      CSharp: public Task ConnectAsync(int timeout)
    parameters:
    - id: timeout
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Task
- id: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: ConnectAsync
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 189
  syntax:
    content:
      CSharp: public Task ConnectAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type:
        id: CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
- id: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,CancellationToken)
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: ConnectAsync
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.cs
    startLine: 194
  syntax:
    content:
      CSharp: public Task ConnectAsync(int timeout, CancellationToken cancellationToken)
    parameters:
    - id: timeout
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: cancellationToken
      type:
        id: CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
- id: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  href: System.IO.Pipes.NamedPipeClientStream.yaml
  name:
    CSharp: NumberOfServerInstances
  qualifiedName:
    CSharp: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/NamedPipeClientStream.Windows.cs
    startLine: 97
  syntax:
    content:
      CSharp: 'public int NumberOfServerInstances { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] get; }'
    parameters:
    - id: NumberOfServerInstances
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
