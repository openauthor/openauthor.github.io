items:
- uid: System.IO.Pipes.PipeStream
  href: System.IO.Pipes.PipeStream.yml
  name: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  source:
    remote: &o1
      path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 14
  syntax:
    content:
      CSharp: 'public abstract class PipeStream : Stream, IDisposable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.MarshalByRefObject
    name: MarshalByRefObject
    isExternal: true
  - id: System.IO.Stream
    name: Stream
    isExternal: true
  id: System.IO.Pipes.PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  href: System.IO.Pipes.PipeStream.yml
  name: PipeStream(PipeDirection, int)
  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, int)
  type: Constructor
  source:
    remote: &o0
      path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 28
  syntax:
    content:
      CSharp: protected PipeStream(PipeDirection direction, int bufferSize)
    parameters:
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yml
    - id: bufferSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  href: System.IO.Pipes.PipeStream.yml
  name: PipeStream(PipeDirection, PipeTransmissionMode, int)
  fullName: System.IO.Pipes.PipeStream.PipeStream(System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeTransmissionMode, int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 42
  syntax:
    content:
      CSharp: protected PipeStream(PipeDirection direction, PipeTransmissionMode transmissionMode, int outBufferSize)
    parameters:
    - id: direction
      type:
        id: System.IO.Pipes.PipeDirection
        name: PipeDirection
        href: System.IO.Pipes.PipeDirection.yml
    - id: transmissionMode
      type:
        id: System.IO.Pipes.PipeTransmissionMode
        name: PipeTransmissionMode
        href: System.IO.Pipes.PipeTransmissionMode.yml
    - id: outBufferSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  href: System.IO.Pipes.PipeStream.yml
  name: Read(byte[], int, int)
  fullName: System.IO.Pipes.PipeStream.Read(byte[], int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 109
  syntax:
    content:
      CSharp: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  href: System.IO.Pipes.PipeStream.yml
  name: Write(byte[], int, int)
  fullName: System.IO.Pipes.PipeStream.Write(byte[], int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 138
  syntax:
    content:
      CSharp: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  href: System.IO.Pipes.PipeStream.yml
  name: ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 178
  syntax:
    content:
      CSharp: public override int ReadByte()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  href: System.IO.Pipes.PipeStream.yml
  name: WriteByte(byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(byte)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 194
  syntax:
    content:
      CSharp: public override void WriteByte(byte value)
    parameters:
    - id: value
      type:
        id: System.Byte
        name: byte
        isExternal: true
  id: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
- uid: System.IO.Pipes.PipeStream.Flush
  href: System.IO.Pipes.PipeStream.yml
  name: Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 210
  syntax:
    content:
      CSharp: public override void Flush()
    parameters: []
  id: System.IO.Pipes.PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  href: System.IO.Pipes.PipeStream.yml
  name: Dispose(bool)
  fullName: System.IO.Pipes.PipeStream.Dispose(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 220
  syntax:
    content:
      CSharp: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
- uid: System.IO.Pipes.PipeStream.IsConnected
  href: System.IO.Pipes.PipeStream.yml
  name: IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 245
  syntax:
    content:
      CSharp: public bool IsConnected { get; protected set; }
    parameters:
    - id: IsConnected
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsAsync
  href: System.IO.Pipes.PipeStream.yml
  name: IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 257
  syntax:
    content:
      CSharp: public bool IsAsync { get; }
    parameters:
    - id: IsAsync
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  href: System.IO.Pipes.PipeStream.yml
  name: IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 264
  syntax:
    content:
      CSharp: 'public bool IsMessageComplete { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] get; }'
    parameters:
    - id: IsMessageComplete
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  href: System.IO.Pipes.PipeStream.yml
  name: SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 303
  syntax:
    content:
      CSharp: 'public SafePipeHandle SafePipeHandle { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] get; }'
    parameters:
    - id: SafePipeHandle
      type:
        id: Microsoft.Win32.SafeHandles.SafePipeHandle
        name: SafePipeHandle
        href: Microsoft.Win32.SafeHandles.SafePipeHandle.yml
  id: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.CanRead
  href: System.IO.Pipes.PipeStream.yml
  name: CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 340
  syntax:
    content:
      CSharp: public override bool CanRead { [Pure] get; }
    parameters:
    - id: CanRead
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanWrite
  href: System.IO.Pipes.PipeStream.yml
  name: CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 349
  syntax:
    content:
      CSharp: public override bool CanWrite { [Pure] get; }
    parameters:
    - id: CanWrite
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CanSeek
  href: System.IO.Pipes.PipeStream.yml
  name: CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 358
  syntax:
    content:
      CSharp: public override bool CanSeek { [Pure] get; }
    parameters:
    - id: CanSeek
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.Length
  href: System.IO.Pipes.PipeStream.yml
  name: Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 367
  syntax:
    content:
      CSharp: public override long Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Pipes.PipeStream.Length
- uid: System.IO.Pipes.PipeStream.Position
  href: System.IO.Pipes.PipeStream.yml
  name: Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 375
  syntax:
    content:
      CSharp: public override long Position { get; set; }
    parameters:
    - id: Position
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  href: System.IO.Pipes.PipeStream.yml
  name: SetLength(long)
  fullName: System.IO.Pipes.PipeStream.SetLength(long)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 387
  syntax:
    content:
      CSharp: public override void SetLength(long value)
    parameters:
    - id: value
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Pipes.PipeStream.SetLength(System.Int64)
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  href: System.IO.Pipes.PipeStream.yml
  name: Seek(long, SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(long, System.IO.SeekOrigin)
  type: Method
  source:
    remote: *o0
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs
    startLine: 392
  syntax:
    content:
      CSharp: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type:
        id: System.Int64
        name: long
        isExternal: true
    - id: origin
      type:
        id: System.IO.SeekOrigin
        name: SeekOrigin
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  href: System.IO.Pipes.PipeStream.yml
  name: WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 118
  syntax:
    content:
      CSharp: public void WaitForPipeDrain()
    parameters: []
  id: System.IO.Pipes.PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  href: System.IO.Pipes.PipeStream.yml
  name: TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 136
  syntax:
    content:
      CSharp: 'public virtual PipeTransmissionMode TransmissionMode { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] get; }'
    parameters:
    - id: TransmissionMode
      type:
        id: System.IO.Pipes.PipeTransmissionMode
        name: PipeTransmissionMode
        href: System.IO.Pipes.PipeTransmissionMode.yml
  id: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.InBufferSize
  href: System.IO.Pipes.PipeStream.yml
  name: InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 170
  syntax:
    content:
      CSharp: public virtual int InBufferSize { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")] get; }
    parameters:
    - id: InBufferSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  href: System.IO.Pipes.PipeStream.yml
  name: OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 196
  syntax:
    content:
      CSharp: 'public virtual int OutBufferSize { [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] get; }'
    parameters:
    - id: OutBufferSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.ReadMode
  href: System.IO.Pipes.PipeStream.yml
  name: ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 225
  syntax:
    content:
      CSharp: 'public virtual PipeTransmissionMode ReadMode { [SecurityCritical] get; [SecurityCritical] [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands", Justification = "Security model of pipes: demand at creation but no subsequent demands")] set; }'
    parameters:
    - id: ReadMode
      type:
        id: System.IO.Pipes.PipeTransmissionMode
        name: PipeTransmissionMode
        href: System.IO.Pipes.PipeTransmissionMode.yml
  id: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  href: System.IO.Pipes.PipeStream.yml
  name: ReadAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Pipes.PipeStream.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 490
  syntax:
    content:
      CSharp: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: buffer
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{System.Int32}
        name: Task<int>
        isExternal: true
  id: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  href: System.IO.Pipes.PipeStream.yml
  name: WriteAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Pipes.PipeStream.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o1
    path: src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.Windows.cs
    startLine: 520
  syntax:
    content:
      CSharp: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: buffer
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
