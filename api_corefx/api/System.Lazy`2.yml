items:
- uid: System.Lazy`2
  href: System.Lazy`2.yml
  name: Lazy<T, TMetadata>
  fullName: System.Lazy<T, TMetadata>
  type: Class
  source:
    remote: &o0
      path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 9
  syntax:
    content:
      CSharp: 'public class Lazy<T, TMetadata> : Lazy<T>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Lazy{`0}
    name: Lazy<T>
    isExternal: true
  id: System.Lazy`2
  children:
  - System.Lazy`2.#ctor(System.Func{`0},`1)
  - System.Lazy`2.#ctor(`1)
  - System.Lazy`2.#ctor(`1,System.Boolean)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  - System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.Metadata
- uid: System.Lazy`2.#ctor(System.Func{`0},`1)
  href: System.Lazy`2.yml
  name: Lazy(Func<T>, TMetadata)
  fullName: System.Lazy<T, TMetadata>.Lazy(System.Func<T>, TMetadata)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 13
  syntax:
    content:
      CSharp: 'public Lazy(Func<T> valueFactory, TMetadata metadata): base (valueFactory)'
    parameters:
    - id: valueFactory
      type:
        id: System.Func{`0}
        name: Func<T>
        isExternal: true
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
  id: System.Lazy`2.#ctor(System.Func{`0},`1)
- uid: System.Lazy`2.#ctor(`1)
  href: System.Lazy`2.yml
  name: Lazy(TMetadata)
  fullName: System.Lazy<T, TMetadata>.Lazy(TMetadata)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 19
  syntax:
    content:
      CSharp: 'public Lazy(TMetadata metadata): base ()'
    parameters:
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
  id: System.Lazy`2.#ctor(`1)
- uid: System.Lazy`2.#ctor(`1,System.Boolean)
  href: System.Lazy`2.yml
  name: Lazy(TMetadata, bool)
  fullName: System.Lazy<T, TMetadata>.Lazy(TMetadata, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 26
  syntax:
    content:
      CSharp: 'public Lazy(TMetadata metadata, bool isThreadSafe): base (isThreadSafe)'
    parameters:
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
    - id: isThreadSafe
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Lazy`2.#ctor(`1,System.Boolean)
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  href: System.Lazy`2.yml
  name: Lazy(Func<T>, TMetadata, bool)
  fullName: System.Lazy<T, TMetadata>.Lazy(System.Func<T>, TMetadata, bool)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 32
  syntax:
    content:
      CSharp: 'public Lazy(Func<T> valueFactory, TMetadata metadata, bool isThreadSafe): base (valueFactory, isThreadSafe)'
    parameters:
    - id: valueFactory
      type:
        id: System.Func{`0}
        name: Func<T>
        isExternal: true
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
    - id: isThreadSafe
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  href: System.Lazy`2.yml
  name: Lazy(TMetadata, LazyThreadSafetyMode)
  fullName: System.Lazy<T, TMetadata>.Lazy(TMetadata, System.Threading.LazyThreadSafetyMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 38
  syntax:
    content:
      CSharp: 'public Lazy(TMetadata metadata, LazyThreadSafetyMode mode): base (mode)'
    parameters:
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
    - id: mode
      type:
        id: System.Threading.LazyThreadSafetyMode
        name: LazyThreadSafetyMode
        isExternal: true
  id: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  href: System.Lazy`2.yml
  name: Lazy(Func<T>, TMetadata, LazyThreadSafetyMode)
  fullName: System.Lazy<T, TMetadata>.Lazy(System.Func<T>, TMetadata, System.Threading.LazyThreadSafetyMode)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 44
  syntax:
    content:
      CSharp: 'public Lazy(Func<T> valueFactory, TMetadata metadata, LazyThreadSafetyMode mode): base (valueFactory, mode)'
    parameters:
    - id: valueFactory
      type:
        id: System.Func{`0}
        name: Func<T>
        isExternal: true
    - id: metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
    - id: mode
      type:
        id: System.Threading.LazyThreadSafetyMode
        name: LazyThreadSafetyMode
        isExternal: true
  id: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
- uid: System.Lazy`2.Metadata
  href: System.Lazy`2.yml
  name: Metadata
  fullName: System.Lazy<T, TMetadata>.Metadata
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime/src/System/LazyOfTTMetadata.cs
    startLine: 50
  syntax:
    content:
      CSharp: public TMetadata Metadata { get; }
    parameters:
    - id: Metadata
      type:
        id: TMetadata
        name: TMetadata
        href: TMetadata
  id: System.Lazy`2.Metadata
