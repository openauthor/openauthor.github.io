items:
- uid: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Enumerable
  fullName: System.Linq.Enumerable
  type: Class
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 10
  syntax:
    content:
      CSharp: public class Enumerable
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Enumerable
  children:
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.Range(System.Int32,System.Int32)
  - System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  - System.Linq.Enumerable.Empty``1
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 12
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Where<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, int, bool>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 22
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Where<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Int32,System.Boolean}
        name: Func<TSource, int, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 39
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Select<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  href: System.Linq.Enumerable.yml
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, int, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 49
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Select<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, int, TResult> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32,``1}
        name: Func<TSource, int, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 514
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> SelectMany<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, IEnumerable<TResult>> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Collections.Generic.IEnumerable{``1}}
        name: Func<TSource, IEnumerable<TResult>>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, int, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, System.Collections.Generic.IEnumerable<TResult>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 532
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> SelectMany<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, int, IEnumerable<TResult>> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}
        name: Func<TSource, int, IEnumerable<TResult>>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, int, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 551
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource> source, Func<TSource, int, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: collectionSelector
      type:
        id: System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}
        name: Func<TSource, int, IEnumerable<TCollection>>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,``1,``2}
        name: Func<TSource, TCollection, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``2}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 572
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource> source, Func<TSource, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: collectionSelector
      type:
        id: System.Func{``0,System.Collections.Generic.IEnumerable{``1}}
        name: Func<TSource, IEnumerable<TCollection>>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,``1,``2}
        name: Func<TSource, TCollection, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``2}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: System.Linq.Enumerable.yml
  name: Take<TSource>(IEnumerable<TSource>, int)
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 591
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Take<TSource>(IEnumerable<TSource> source, int count)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 609
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> TakeWhile<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, int, bool>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 625
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> TakeWhile<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Int32,System.Boolean}
        name: Func<TSource, int, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: System.Linq.Enumerable.yml
  name: Skip<TSource>(IEnumerable<TSource>, int)
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 643
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Skip<TSource>(IEnumerable<TSource> source, int count)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 661
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> SkipWhile<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, int, bool>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 678
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> SkipWhile<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Int32,System.Boolean}
        name: Func<TSource, int, bool>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  href: System.Linq.Enumerable.yml
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 697
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, TInner, TResult> resultSelector)
    parameters:
    - id: outer
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TOuter>
        isExternal: true
    - id: inner
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TInner>
        isExternal: true
    - id: outerKeySelector
      type:
        id: System.Func{``0,``2}
        name: Func<TOuter, TKey>
        isExternal: true
    - id: innerKeySelector
      type:
        id: System.Func{``1,``2}
        name: Func<TInner, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,``1,``3}
        name: Func<TOuter, TInner, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Linq.Enumerable.yml
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 707
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, TInner, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: outer
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TOuter>
        isExternal: true
    - id: inner
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TInner>
        isExternal: true
    - id: outerKeySelector
      type:
        id: System.Func{``0,``2}
        name: Func<TOuter, TKey>
        isExternal: true
    - id: innerKeySelector
      type:
        id: System.Func{``1,``2}
        name: Func<TInner, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,``1,``3}
        name: Func<TOuter, TInner, TResult>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``2}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  href: System.Linq.Enumerable.yml
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 733
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, IEnumerable<TInner>, TResult> resultSelector)
    parameters:
    - id: outer
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TOuter>
        isExternal: true
    - id: inner
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TInner>
        isExternal: true
    - id: outerKeySelector
      type:
        id: System.Func{``0,``2}
        name: Func<TOuter, TKey>
        isExternal: true
    - id: innerKeySelector
      type:
        id: System.Func{``1,``2}
        name: Func<TInner, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}
        name: Func<TOuter, IEnumerable<TInner>, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Linq.Enumerable.yml
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 743
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, IEnumerable<TInner>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: outer
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TOuter>
        isExternal: true
    - id: inner
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TInner>
        isExternal: true
    - id: outerKeySelector
      type:
        id: System.Func{``0,``2}
        name: Func<TOuter, TKey>
        isExternal: true
    - id: innerKeySelector
      type:
        id: System.Func{``1,``2}
        name: Func<TInner, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}
        name: Func<TOuter, IEnumerable<TInner>, TResult>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``2}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 762
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> OrderBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  href: System.Linq.Enumerable.yml
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 767
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> OrderBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``1}
        name: IComparer<TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 772
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> OrderByDescending<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  href: System.Linq.Enumerable.yml
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 777
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> OrderByDescending<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``1}
        name: IComparer<TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ThenBy<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 782
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> ThenBy<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.ThenBy<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 788
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> ThenBy<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``1}
        name: IComparer<TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ThenByDescending<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 794
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.ThenByDescending<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 800
  syntax:
    content:
      CSharp: public static IOrderedEnumerable<TSource> ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IComparer{``1}
        name: IComparer<TKey>
        isExternal: true
    return:
      id: IOrderedEnumerable
      type:
        id: System.Linq.IOrderedEnumerable{``0}
        name: IOrderedEnumerable<TSource>
        href: System.Linq.IOrderedEnumerable{``0}
  id: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 806
  syntax:
    content:
      CSharp: public static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``0}}
        name: IEnumerable<IGrouping<TKey, TSource>>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 811
  syntax:
    content:
      CSharp: public static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``0}}
        name: IEnumerable<IGrouping<TKey, TSource>>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 816
  syntax:
    content:
      CSharp: public static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``2}}
        name: IEnumerable<IGrouping<TKey, TElement>>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 821
  syntax:
    content:
      CSharp: public static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``1,``2}}
        name: IEnumerable<IGrouping<TKey, TElement>>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 826
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}
        name: Func<TKey, IEnumerable<TSource>, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``2}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 831
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey, IEnumerable<TElement>, TResult> resultSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}
        name: Func<TKey, IEnumerable<TElement>, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 836
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}
        name: Func<TKey, IEnumerable<TSource>, TResult>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``2}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 841
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey, IEnumerable<TElement>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}
        name: Func<TKey, IEnumerable<TElement>, TResult>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``3}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 846
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Concat<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  href: System.Linq.Enumerable.yml
  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 859
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst> first, IEnumerable<TSecond> second, Func<TFirst, TSecond, TResult> resultSelector)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TFirst>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``1}
        name: IEnumerable<TSecond>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``0,``1,``2}
        name: Func<TFirst, TSecond, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``2}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Distinct<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 876
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Distinct<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 882
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Distinct<TSource>(IEnumerable<TSource> source, IEqualityComparer<TSource> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 895
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Union<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 902
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Union<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 918
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Intersect<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 925
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Intersect<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 940
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Except<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 947
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Except<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Reverse<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 962
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> Reverse<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 974
  syntax:
    content:
      CSharp: public static bool SequenceEqual<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 979
  syntax:
    content:
      CSharp: public static bool SequenceEqual<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    parameters:
    - id: first
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: second
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 996
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> AsEnumerable<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: ToArray<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1001
  syntax:
    content:
      CSharp: public static TSource[] ToArray<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      type:
        id: System.Array
        name: TSource[]
        isExternal: true
  id: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: ToList<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1007
  syntax:
    content:
      CSharp: public static List<TSource> ToList<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: List
      type:
        id: System.Collections.Generic.List{``0}
        name: List<TSource>
        isExternal: true
  id: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1013
  syntax:
    content:
      CSharp: public static Dictionary<TKey, TSource> ToDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: Dictionary
      type:
        id: System.Collections.Generic.Dictionary{``1,``0}
        name: Dictionary<TKey, TSource>
        isExternal: true
  id: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1018
  syntax:
    content:
      CSharp: public static Dictionary<TKey, TSource> ToDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: Dictionary
      type:
        id: System.Collections.Generic.Dictionary{``1,``0}
        name: Dictionary<TKey, TSource>
        isExternal: true
  id: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1023
  syntax:
    content:
      CSharp: public static Dictionary<TKey, TElement> ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    return:
      id: Dictionary
      type:
        id: System.Collections.Generic.Dictionary{``1,``2}
        name: Dictionary<TKey, TElement>
        isExternal: true
  id: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1028
  syntax:
    content:
      CSharp: public static Dictionary<TKey, TElement> ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: Dictionary
      type:
        id: System.Collections.Generic.Dictionary{``1,``2}
        name: Dictionary<TKey, TElement>
        isExternal: true
  id: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1038
  syntax:
    content:
      CSharp: public static ILookup<TKey, TSource> ToLookup<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    return:
      id: ILookup
      type:
        id: System.Linq.ILookup{``1,``0}
        name: ILookup<TKey, TSource>
        href: System.Linq.ILookup{``1,``0}
  id: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1043
  syntax:
    content:
      CSharp: public static ILookup<TKey, TSource> ToLookup<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: ILookup
      type:
        id: System.Linq.ILookup{``1,``0}
        name: ILookup<TKey, TSource>
        href: System.Linq.ILookup{``1,``0}
  id: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1048
  syntax:
    content:
      CSharp: public static ILookup<TKey, TElement> ToLookup<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    return:
      id: ILookup
      type:
        id: System.Linq.ILookup{``1,``2}
        name: ILookup<TKey, TElement>
        href: System.Linq.ILookup{``1,``2}
  id: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1053
  syntax:
    content:
      CSharp: public static ILookup<TKey, TElement> ToLookup<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: keySelector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TKey>
        isExternal: true
    - id: elementSelector
      type:
        id: System.Func{``0,``2}
        name: Func<TSource, TElement>
        isExternal: true
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``1}
        name: IEqualityComparer<TKey>
        isExternal: true
    return:
      id: ILookup
      type:
        id: System.Linq.ILookup{``1,``2}
        name: ILookup<TKey, TElement>
        href: System.Linq.ILookup{``1,``2}
  id: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1058
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> DefaultIfEmpty<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  href: System.Linq.Enumerable.yml
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1063
  syntax:
    content:
      CSharp: public static IEnumerable<TSource> DefaultIfEmpty<TSource>(IEnumerable<TSource> source, TSource defaultValue)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: defaultValue
      type:
        id: TSource
        name: TSource
        href: TSource
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
  id: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  href: System.Linq.Enumerable.yml
  name: OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1087
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> OfType<TResult>(IEnumerable source)
    parameters:
    - id: source
      type:
        id: System.Collections.IEnumerable
        name: IEnumerable
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  href: System.Linq.Enumerable.yml
  name: Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1101
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Cast<TResult>(IEnumerable source)
    parameters:
    - id: source
      type:
        id: System.Collections.IEnumerable
        name: IEnumerable
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: First<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1114
  syntax:
    content:
      CSharp: public static TSource First<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: First<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1132
  syntax:
    content:
      CSharp: public static TSource First<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1143
  syntax:
    content:
      CSharp: public static TSource FirstOrDefault<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1161
  syntax:
    content:
      CSharp: public static TSource FirstOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Last<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1172
  syntax:
    content:
      CSharp: public static TSource Last<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1199
  syntax:
    content:
      CSharp: public static TSource Last<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1217
  syntax:
    content:
      CSharp: public static TSource LastOrDefault<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1244
  syntax:
    content:
      CSharp: public static TSource LastOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Single<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1259
  syntax:
    content:
      CSharp: public static TSource Single<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1283
  syntax:
    content:
      CSharp: public static TSource Single<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1305
  syntax:
    content:
      CSharp: public static TSource SingleOrDefault<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1329
  syntax:
    content:
      CSharp: public static TSource SingleOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: System.Linq.Enumerable.yml
  name: ElementAt<TSource>(IEnumerable<TSource>, int)
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1351
  syntax:
    content:
      CSharp: public static TSource ElementAt<TSource>(IEnumerable<TSource> source, int index)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  href: System.Linq.Enumerable.yml
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, int)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1368
  syntax:
    content:
      CSharp: public static TSource ElementAtOrDefault<TSource>(IEnumerable<TSource> source, int index)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.Range(System.Int32,System.Int32)
  href: System.Linq.Enumerable.yml
  name: Range(int, int)
  fullName: System.Linq.Enumerable.Range(int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1394
  syntax:
    content:
      CSharp: public static IEnumerable<int> Range(int start, int count)
    parameters:
    - id: start
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Int32}
        name: IEnumerable<int>
        isExternal: true
  id: System.Linq.Enumerable.Range(System.Int32,System.Int32)
- uid: System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  href: System.Linq.Enumerable.yml
  name: Repeat<TResult>(TResult, int)
  fullName: System.Linq.Enumerable.Repeat<TResult>(TResult, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1406
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Repeat<TResult>(TResult element, int count)
    parameters:
    - id: element
      type:
        id: TResult
        name: TResult
        href: TResult
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Repeat``1(``0,System.Int32)
- uid: System.Linq.Enumerable.Empty``1
  href: System.Linq.Enumerable.yml
  name: Empty<TResult>()
  fullName: System.Linq.Enumerable.Empty<TResult>()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1417
  syntax:
    content:
      CSharp: public static IEnumerable<TResult> Empty<TResult>()
    parameters: []
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Enumerable.Empty``1
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Any<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1422
  syntax:
    content:
      CSharp: public static bool Any<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1432
  syntax:
    content:
      CSharp: public static bool Any<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: All<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1443
  syntax:
    content:
      CSharp: public static bool All<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Count<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1454
  syntax:
    content:
      CSharp: public static int Count<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1472
  syntax:
    content:
      CSharp: public static int Count<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: LongCount<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1487
  syntax:
    content:
      CSharp: public static long LongCount<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  href: System.Linq.Enumerable.yml
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, bool>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1501
  syntax:
    content:
      CSharp: public static long LongCount<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: predicate
      type:
        id: System.Func{``0,System.Boolean}
        name: Func<TSource, bool>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  href: System.Linq.Enumerable.yml
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1516
  syntax:
    content:
      CSharp: public static bool Contains<TSource>(IEnumerable<TSource> source, TSource value)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: value
      type:
        id: TSource
        name: TSource
        href: TSource
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  href: System.Linq.Enumerable.yml
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1523
  syntax:
    content:
      CSharp: public static bool Contains<TSource>(IEnumerable<TSource> source, TSource value, IEqualityComparer<TSource> comparer)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: value
      type:
        id: TSource
        name: TSource
        href: TSource
    - id: comparer
      type:
        id: System.Collections.Generic.IEqualityComparer{``0}
        name: IEqualityComparer<TSource>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1532
  syntax:
    content:
      CSharp: public static TSource Aggregate<TSource>(IEnumerable<TSource> source, Func<TSource, TSource, TSource> func)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: func
      type:
        id: System.Func{``0,``0,``0}
        name: Func<TSource, TSource, TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1545
  syntax:
    content:
      CSharp: public static TAccumulate Aggregate<TSource, TAccumulate>(IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> func)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: seed
      type:
        id: TAccumulate
        name: TAccumulate
        href: TAccumulate
    - id: func
      type:
        id: System.Func{``1,``0,``1}
        name: Func<TAccumulate, TSource, TAccumulate>
        isExternal: true
    return:
      id: TAccumulate
      type:
        id: TAccumulate
        name: TAccumulate
        href: TAccumulate
  id: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1554
  syntax:
    content:
      CSharp: public static TResult Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> func, Func<TAccumulate, TResult> resultSelector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: seed
      type:
        id: TAccumulate
        name: TAccumulate
        href: TAccumulate
    - id: func
      type:
        id: System.Func{``1,``0,``1}
        name: Func<TAccumulate, TSource, TAccumulate>
        isExternal: true
    - id: resultSelector
      type:
        id: System.Func{``1,``2}
        name: Func<TAccumulate, TResult>
        isExternal: true
    return:
      id: TResult
      type:
        id: TResult
        name: TResult
        href: TResult
  id: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<int>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1564
  syntax:
    content:
      CSharp: public static int Sum(IEnumerable<int> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int32}
        name: IEnumerable<int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<int?>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1575
  syntax:
    content:
      CSharp: public static int ? Sum(IEnumerable<int ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
        name: IEnumerable<int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<long>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1589
  syntax:
    content:
      CSharp: public static long Sum(IEnumerable<long> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int64}
        name: IEnumerable<long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<long?>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1600
  syntax:
    content:
      CSharp: public static long ? Sum(IEnumerable<long ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
        name: IEnumerable<long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<float>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1614
  syntax:
    content:
      CSharp: public static float Sum(IEnumerable<float> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Single}
        name: IEnumerable<float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<float?>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1622
  syntax:
    content:
      CSharp: public static float ? Sum(IEnumerable<float ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
        name: IEnumerable<float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<double>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1633
  syntax:
    content:
      CSharp: public static double Sum(IEnumerable<double> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Double}
        name: IEnumerable<double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<double?>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1641
  syntax:
    content:
      CSharp: public static double ? Sum(IEnumerable<double ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
        name: IEnumerable<double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<decimal>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1652
  syntax:
    content:
      CSharp: public static decimal Sum(IEnumerable<decimal> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Decimal}
        name: IEnumerable<decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<decimal?>)
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1660
  syntax:
    content:
      CSharp: public static decimal ? Sum(IEnumerable<decimal ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
        name: IEnumerable<decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, int>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1671
  syntax:
    content:
      CSharp: public static int Sum<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32}
        name: Func<TSource, int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, int?>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1676
  syntax:
    content:
      CSharp: public static int ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int32}}
        name: Func<TSource, int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, long>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1681
  syntax:
    content:
      CSharp: public static long Sum<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int64}
        name: Func<TSource, long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, long?>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1686
  syntax:
    content:
      CSharp: public static long ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int64}}
        name: Func<TSource, long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, float>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1691
  syntax:
    content:
      CSharp: public static float Sum<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Single}
        name: Func<TSource, float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, float?>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1696
  syntax:
    content:
      CSharp: public static float ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Single}}
        name: Func<TSource, float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, double>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1701
  syntax:
    content:
      CSharp: public static double Sum<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Double}
        name: Func<TSource, double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, double?>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1706
  syntax:
    content:
      CSharp: public static double ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Double}}
        name: Func<TSource, double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, decimal>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1711
  syntax:
    content:
      CSharp: public static decimal Sum<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Decimal}
        name: Func<TSource, decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, decimal?>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1716
  syntax:
    content:
      CSharp: public static decimal ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Decimal}}
        name: Func<TSource, decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<int>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1721
  syntax:
    content:
      CSharp: public static int Min(IEnumerable<int> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int32}
        name: IEnumerable<int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<int?>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1742
  syntax:
    content:
      CSharp: public static int ? Min(IEnumerable<int ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
        name: IEnumerable<int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<long>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1754
  syntax:
    content:
      CSharp: public static long Min(IEnumerable<long> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int64}
        name: IEnumerable<long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<long?>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1775
  syntax:
    content:
      CSharp: public static long ? Min(IEnumerable<long ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
        name: IEnumerable<long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<float>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1786
  syntax:
    content:
      CSharp: public static float Min(IEnumerable<float> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Single}
        name: IEnumerable<float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<float?>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1813
  syntax:
    content:
      CSharp: public static float ? Min(IEnumerable<float ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
        name: IEnumerable<float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<double>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1825
  syntax:
    content:
      CSharp: public static double Min(IEnumerable<double> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Double}
        name: IEnumerable<double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<double?>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1846
  syntax:
    content:
      CSharp: public static double ? Min(IEnumerable<double ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
        name: IEnumerable<double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<decimal>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1858
  syntax:
    content:
      CSharp: public static decimal Min(IEnumerable<decimal> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Decimal}
        name: IEnumerable<decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<decimal?>)
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1879
  syntax:
    content:
      CSharp: public static decimal ? Min(IEnumerable<decimal ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
        name: IEnumerable<decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1890
  syntax:
    content:
      CSharp: public static TSource Min<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, int>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1925
  syntax:
    content:
      CSharp: public static int Min<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32}
        name: Func<TSource, int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, int?>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1930
  syntax:
    content:
      CSharp: public static int ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int32}}
        name: Func<TSource, int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, long>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1935
  syntax:
    content:
      CSharp: public static long Min<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int64}
        name: Func<TSource, long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, long?>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1940
  syntax:
    content:
      CSharp: public static long ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int64}}
        name: Func<TSource, long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, float>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1945
  syntax:
    content:
      CSharp: public static float Min<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Single}
        name: Func<TSource, float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, float?>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1950
  syntax:
    content:
      CSharp: public static float ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Single}}
        name: Func<TSource, float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, double>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1955
  syntax:
    content:
      CSharp: public static double Min<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Double}
        name: Func<TSource, double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, double?>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1960
  syntax:
    content:
      CSharp: public static double ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Double}}
        name: Func<TSource, double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, decimal>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1965
  syntax:
    content:
      CSharp: public static decimal Min<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Decimal}
        name: Func<TSource, decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, decimal?>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1970
  syntax:
    content:
      CSharp: public static decimal ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Decimal}}
        name: Func<TSource, decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1975
  syntax:
    content:
      CSharp: public static TResult Min<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TResult>
        isExternal: true
    return:
      id: TResult
      type:
        id: TResult
        name: TResult
        href: TResult
  id: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<int>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1980
  syntax:
    content:
      CSharp: public static int Max(IEnumerable<int> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int32}
        name: IEnumerable<int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<int?>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2001
  syntax:
    content:
      CSharp: public static int ? Max(IEnumerable<int ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
        name: IEnumerable<int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<long>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2012
  syntax:
    content:
      CSharp: public static long Max(IEnumerable<long> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int64}
        name: IEnumerable<long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<long?>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2033
  syntax:
    content:
      CSharp: public static long ? Max(IEnumerable<long ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
        name: IEnumerable<long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<double>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2044
  syntax:
    content:
      CSharp: public static double Max(IEnumerable<double> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Double}
        name: IEnumerable<double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<double?>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2065
  syntax:
    content:
      CSharp: public static double ? Max(IEnumerable<double ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
        name: IEnumerable<double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<float>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2077
  syntax:
    content:
      CSharp: public static float Max(IEnumerable<float> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Single}
        name: IEnumerable<float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<float?>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2098
  syntax:
    content:
      CSharp: public static float ? Max(IEnumerable<float ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
        name: IEnumerable<float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<decimal>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2110
  syntax:
    content:
      CSharp: public static decimal Max(IEnumerable<decimal> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Decimal}
        name: IEnumerable<decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<decimal?>)
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2131
  syntax:
    content:
      CSharp: public static decimal ? Max(IEnumerable<decimal ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
        name: IEnumerable<decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2142
  syntax:
    content:
      CSharp: public static TSource Max<TSource>(IEnumerable<TSource> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    return:
      id: TSource
      type:
        id: TSource
        name: TSource
        href: TSource
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, int>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2177
  syntax:
    content:
      CSharp: public static int Max<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32}
        name: Func<TSource, int>
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, int?>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2182
  syntax:
    content:
      CSharp: public static int ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int32}}
        name: Func<TSource, int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int32}
        name: int?
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, long>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2187
  syntax:
    content:
      CSharp: public static long Max<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int64}
        name: Func<TSource, long>
        isExternal: true
    return:
      id: Int64
      type:
        id: System.Int64
        name: long
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, long?>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2192
  syntax:
    content:
      CSharp: public static long ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int64}}
        name: Func<TSource, long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Int64}
        name: long?
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, float>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2197
  syntax:
    content:
      CSharp: public static float Max<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Single}
        name: Func<TSource, float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, float?>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2202
  syntax:
    content:
      CSharp: public static float ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Single}}
        name: Func<TSource, float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, double>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2207
  syntax:
    content:
      CSharp: public static double Max<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Double}
        name: Func<TSource, double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, double?>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2212
  syntax:
    content:
      CSharp: public static double ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Double}}
        name: Func<TSource, double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, decimal>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2217
  syntax:
    content:
      CSharp: public static decimal Max<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Decimal}
        name: Func<TSource, decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, decimal?>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2222
  syntax:
    content:
      CSharp: public static decimal ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Decimal}}
        name: Func<TSource, decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: System.Linq.Enumerable.yml
  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2227
  syntax:
    content:
      CSharp: public static TResult Max<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,``1}
        name: Func<TSource, TResult>
        isExternal: true
    return:
      id: TResult
      type:
        id: TResult
        name: TResult
        href: TResult
  id: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<int>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2232
  syntax:
    content:
      CSharp: public static double Average(IEnumerable<int> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int32}
        name: IEnumerable<int>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<int?>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2249
  syntax:
    content:
      CSharp: public static double ? Average(IEnumerable<int ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
        name: IEnumerable<int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<long>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2269
  syntax:
    content:
      CSharp: public static double Average(IEnumerable<long> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Int64}
        name: IEnumerable<long>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<long?>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2286
  syntax:
    content:
      CSharp: public static double ? Average(IEnumerable<long ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
        name: IEnumerable<long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<float>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2306
  syntax:
    content:
      CSharp: public static float Average(IEnumerable<float> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Single}
        name: IEnumerable<float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<float?>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2323
  syntax:
    content:
      CSharp: public static float ? Average(IEnumerable<float ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
        name: IEnumerable<float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<double>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2343
  syntax:
    content:
      CSharp: public static double Average(IEnumerable<double> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Double}
        name: IEnumerable<double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<double?>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2360
  syntax:
    content:
      CSharp: public static double ? Average(IEnumerable<double ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
        name: IEnumerable<double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<decimal>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2380
  syntax:
    content:
      CSharp: public static decimal Average(IEnumerable<decimal> source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Decimal}
        name: IEnumerable<decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<decimal?>)
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2397
  syntax:
    content:
      CSharp: public static decimal ? Average(IEnumerable<decimal ? > source)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
        name: IEnumerable<decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, int>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2417
  syntax:
    content:
      CSharp: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int32}
        name: Func<TSource, int>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, int?>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, int?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2422
  syntax:
    content:
      CSharp: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int32}}
        name: Func<TSource, int?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, long>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2427
  syntax:
    content:
      CSharp: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Int64}
        name: Func<TSource, long>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, long?>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, long?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2432
  syntax:
    content:
      CSharp: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Int64}}
        name: Func<TSource, long?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, float>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2437
  syntax:
    content:
      CSharp: public static float Average<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Single}
        name: Func<TSource, float>
        isExternal: true
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, float?>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, float?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2442
  syntax:
    content:
      CSharp: public static float ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Single}}
        name: Func<TSource, float?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Single}
        name: float?
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, double>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2447
  syntax:
    content:
      CSharp: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Double}
        name: Func<TSource, double>
        isExternal: true
    return:
      id: Double
      type:
        id: System.Double
        name: double
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, double?>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, double?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2452
  syntax:
    content:
      CSharp: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Double}}
        name: Func<TSource, double?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Double}
        name: double?
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, decimal>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2457
  syntax:
    content:
      CSharp: public static decimal Average<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Decimal}
        name: Func<TSource, decimal>
        isExternal: true
    return:
      id: Decimal
      type:
        id: System.Decimal
        name: decimal
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, decimal?>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, decimal?>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2462
  syntax:
    content:
      CSharp: public static decimal ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    parameters:
    - id: source
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TSource>
        isExternal: true
    - id: selector
      type:
        id: System.Func{``0,System.Nullable{System.Decimal}}
        name: Func<TSource, decimal?>
        isExternal: true
    return:
      id: Nullable
      type:
        id: System.Nullable{System.Decimal}
        name: decimal?
        isExternal: true
  id: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
