items:
- uid: System.Linq.Expressions.BlockExpression
  href: System.Linq.Expressions.BlockExpression.yml
  name: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 15
  summary: Represents a block that contains a sequence of expressions where variables can be defined.
  syntax:
    content:
      CSharp: 'public class BlockExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.BlockExpression
  children:
  - System.Linq.Expressions.BlockExpression.Expressions
  - System.Linq.Expressions.BlockExpression.Variables
  - System.Linq.Expressions.BlockExpression.Result
  - System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.BlockExpression.NodeType
  - System.Linq.Expressions.BlockExpression.Type
  - System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.BlockExpression.Expressions
  href: System.Linq.Expressions.BlockExpression.yml
  name: Expressions
  fullName: System.Linq.Expressions.BlockExpression.Expressions
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 21
  summary: Gets the expressions in this block.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<Expression> Expressions { get; }
    parameters:
    - id: Expressions
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
  id: System.Linq.Expressions.BlockExpression.Expressions
- uid: System.Linq.Expressions.BlockExpression.Variables
  href: System.Linq.Expressions.BlockExpression.yml
  name: Variables
  fullName: System.Linq.Expressions.BlockExpression.Variables
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 29
  summary: Gets the variables defined in this block.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<ParameterExpression> Variables { get; }
    parameters:
    - id: Variables
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
        name: ReadOnlyCollection<ParameterExpression>
        isExternal: true
  id: System.Linq.Expressions.BlockExpression.Variables
- uid: System.Linq.Expressions.BlockExpression.Result
  href: System.Linq.Expressions.BlockExpression.yml
  name: Result
  fullName: System.Linq.Expressions.BlockExpression.Result
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 40
  summary: Gets the last expression in this block.
  syntax:
    content:
      CSharp: public Expression Result { get; }
    parameters:
    - id: Result
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.BlockExpression.Result
- uid: System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.BlockExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 56
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.BlockExpression.NodeType
  href: System.Linq.Expressions.BlockExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.BlockExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 66
  summary: >-
    Returns the node type of this Expression. Extension nodes should return

    ExpressionType.Extension when overriding this method.
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.BlockExpression.NodeType
- uid: System.Linq.Expressions.BlockExpression.Type
  href: System.Linq.Expressions.BlockExpression.yml
  name: Type
  fullName: System.Linq.Expressions.BlockExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 75
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents.
  syntax:
    content:
      CSharp: public override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.BlockExpression.Type
- uid: System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.BlockExpression.yml
  name: Update(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 88
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public BlockExpression Update(IEnumerable<ParameterExpression> variables, IEnumerable<Expression> expressions)
    parameters:
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: The [System.Linq.Expressions.BlockExpression.Variables](System.Linq.Expressions.BlockExpression.yml) property of the result.
    - id: expressions
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The [System.Linq.Expressions.BlockExpression.Expressions](System.Linq.Expressions.BlockExpression.yml) property of the result.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
