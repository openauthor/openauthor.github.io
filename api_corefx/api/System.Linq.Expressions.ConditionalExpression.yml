items:
- uid: System.Linq.Expressions.ConditionalExpression
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 12
  summary: Represents an expression that has a conditional operator.
  syntax:
    content:
      CSharp: 'public class ConditionalExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ConditionalExpression
  children:
  - System.Linq.Expressions.ConditionalExpression.NodeType
  - System.Linq.Expressions.ConditionalExpression.Type
  - System.Linq.Expressions.ConditionalExpression.Test
  - System.Linq.Expressions.ConditionalExpression.IfTrue
  - System.Linq.Expressions.ConditionalExpression.IfFalse
  - System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.ConditionalExpression.NodeType
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.ConditionalExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 45
  summary: >-
    Returns the node type of this Expression. Extension nodes should return

    ExpressionType.Extension when overriding this method.
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.ConditionalExpression.NodeType
- uid: System.Linq.Expressions.ConditionalExpression.Type
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: Type
  fullName: System.Linq.Expressions.ConditionalExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 54
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents.
  syntax:
    content:
      CSharp: public override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.ConditionalExpression.Type
- uid: System.Linq.Expressions.ConditionalExpression.Test
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: Test
  fullName: System.Linq.Expressions.ConditionalExpression.Test
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 62
  summary: Gets the test of the conditional operation.
  syntax:
    content:
      CSharp: public Expression Test { get; }
    parameters:
    - id: Test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ConditionalExpression.Test
- uid: System.Linq.Expressions.ConditionalExpression.IfTrue
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: IfTrue
  fullName: System.Linq.Expressions.ConditionalExpression.IfTrue
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 69
  summary: Gets the expression to execute if the test evaluates to true.
  syntax:
    content:
      CSharp: public Expression IfTrue { get; }
    parameters:
    - id: IfTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ConditionalExpression.IfTrue
- uid: System.Linq.Expressions.ConditionalExpression.IfFalse
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: IfFalse
  fullName: System.Linq.Expressions.ConditionalExpression.IfFalse
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 76
  summary: Gets the expression to execute if the test evaluates to false.
  syntax:
    content:
      CSharp: public Expression IfFalse { get; }
    parameters:
    - id: IfFalse
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ConditionalExpression.IfFalse
- uid: System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 89
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: Update(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 103
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public ConditionalExpression Update(Expression test, Expression ifTrue, Expression ifFalse)
    parameters:
    - id: test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.ConditionalExpression.Test](System.Linq.Expressions.ConditionalExpression.yml) property of the result.
    - id: ifTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.ConditionalExpression.IfTrue](System.Linq.Expressions.ConditionalExpression.yml) property of the result.
    - id: ifFalse
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.ConditionalExpression.IfFalse](System.Linq.Expressions.ConditionalExpression.yml) property of the result.
    return:
      id: ConditionalExpression
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
