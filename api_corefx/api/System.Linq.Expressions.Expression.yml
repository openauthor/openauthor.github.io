items:
- uid: System.Linq.Expressions.Expression
  href: System.Linq.Expressions.Expression.yml
  name: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
  source:
    remote: &o32
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 306
  summary: The base type for all nodes in Expression Trees.
  syntax:
    content:
      CSharp: public abstract class Expression
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Expressions.Expression
  children:
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  - System.Linq.Expressions.Expression.#ctor
  - System.Linq.Expressions.Expression.NodeType
  - System.Linq.Expressions.Expression.Type
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.DebugView
  - System.Linq.Expressions.Expression.ReturnReadOnly``1(System.Collections.Generic.IList{``0}@)
  - System.Linq.Expressions.Expression.ReturnObject``1(System.Object)
  - System.Linq.Expressions.Expression.RequiresCanRead(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.RequiresCanRead(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ValidateArgumentTypes(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}@)
  - System.Linq.Expressions.Expression.ValidateArgumentCount(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Int32,System.Reflection.ParameterInfo[])
  - System.Linq.Expressions.Expression.ValidateOneArgument(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Reflection.ParameterInfo)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Assign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 625
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Assign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: MakeBinary(ExpressionType, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 923
  summary: Creates a BinaryExpression, given the left and right operands, by calling an appropriate factory method.
  syntax:
    content:
      CSharp: public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right)
    parameters:
    - id: binaryType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The ExpressionType that specifies the type of binary operation.
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the left operand.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the right operand.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: The BinaryExpression that results from calling the appropriate factory method.
  id: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 937
  summary: Creates a BinaryExpression, given the left and right operands, by calling an appropriate factory method.
  syntax:
    content:
      CSharp: public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: binaryType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The ExpressionType that specifies the type of binary operation.
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the left operand.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the right operand.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A MethodInfo that specifies the implementing method.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: The BinaryExpression that results from calling the appropriate factory method.
  id: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: MakeBinary(ExpressionType, Expression, Expression, bool, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 953
  summary: Creates a BinaryExpression, given the left and right operands, by calling an appropriate factory method.
  syntax:
    content:
      CSharp: public static BinaryExpression MakeBinary(ExpressionType binaryType, Expression left, Expression right, bool liftToNull, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: binaryType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The ExpressionType that specifies the type of binary operation.
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the left operand.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression that represents the right operand.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A MethodInfo that specifies the implementing method.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A LambdaExpression that represents a type conversion function. This parameter is used if binaryType is Coalesce or compound assignment.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: The BinaryExpression that results from calling the appropriate factory method.
  id: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Equal(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1051
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an equality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression Equal(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Equal]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Equal(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1066
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an equality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression Equal(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Equal]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ReferenceEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1085
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a reference equality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression ReferenceEqual(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Equal]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: NotEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1103
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an inequality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression NotEqual(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.NotEqual]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: NotEqual(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1118
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an inequality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression NotEqual(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.NotEqual]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ReferenceNotEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1137
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a reference inequality comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression ReferenceNotEqual(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.NotEqual]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: GreaterThan(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1197
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "greater than" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression GreaterThan(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.GreaterThan]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: GreaterThan(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1212
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "greater than" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression GreaterThan(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.GreaterThan]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: LessThan(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1231
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "less than" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression LessThan(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LessThan]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: LessThan(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1246
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "less than" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression LessThan(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LessThan]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: GreaterThanOrEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1265
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "greater than or equal" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression GreaterThanOrEqual(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.GreaterThanOrEqual]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: GreaterThanOrEqual(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1280
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "greater than or equal" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression GreaterThanOrEqual(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.GreaterThanOrEqual]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: LessThanOrEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1299
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "less than or equal" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression LessThanOrEqual(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LessThanOrEqual]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: LessThanOrEqual(Expression, Expression, bool, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, bool, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1314
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a "less than or equal" numeric comparison.
  syntax:
    content:
      CSharp: public static BinaryExpression LessThanOrEqual(Expression left, Expression right, bool liftToNull, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: liftToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true to set IsLiftedToNull to true; false to set IsLiftedToNull to false.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LessThanOrEqual]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.IsLiftedToNull](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: AndAlso(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1354
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a conditional AND operation that evaluates the second operand only if it has to.
  syntax:
    content:
      CSharp: public static BinaryExpression AndAlso(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AndAlso]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: AndAlso(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1368
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a conditional AND operation that evaluates the second operand only if it has to.
  syntax:
    content:
      CSharp: public static BinaryExpression AndAlso(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AndAlso]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: OrElse(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1408
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a conditional OR operation that evaluates the second operand only if it has to.
  syntax:
    content:
      CSharp: public static BinaryExpression OrElse(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.OrElse]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: OrElse(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1422
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a conditional OR operation that evaluates the second operand only if it has to.
  syntax:
    content:
      CSharp: public static BinaryExpression OrElse(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.OrElse]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Coalesce(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1465
  summary: Creates a BinaryExpression that represents a coalescing operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Coalesce(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: A BinaryExpression that has the NodeType property equal to Coalesce and the Left and Right properties set to the specified values.
  id: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: Coalesce(Expression, Expression, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1479
  summary: Creates a BinaryExpression that represents a coalescing operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Coalesce(Expression left, Expression right, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A LambdaExpression to set the Conversion property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: A BinaryExpression that has the NodeType property equal to Coalesce and the Left, Right and Conversion properties set to the specified values.
  id: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Add(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1566
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic addition operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Add(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Add]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Add(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1580
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic addition operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Add(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Add]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1603
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1617
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1634
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1690
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssignChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.AddAssignChecked]() and the [BinaryExpression.Left]() and [BinaryExpression.Right]()

        properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1704
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssignChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1720
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an addition assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: AddChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1750
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic addition operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddChecked]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: AddChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1764
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic addition operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression AddChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AddChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Subtract(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1787
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic subtraction operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Subtract(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Subtract]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Subtract(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1801
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic subtraction operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Subtract(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Subtract]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1824
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1838
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1854
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1883
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssignChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssignChecked]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1897
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssignChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1913
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a subtraction assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1942
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic subtraction operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractChecked]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: SubtractChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1956
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic subtraction operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression SubtractChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.SubtractChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Divide(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1979
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic division operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Divide(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Divide]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Divide(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 1993
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic division operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Divide(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Divide]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: DivideAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2016
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a division assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression DivideAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.DivideAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: DivideAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2030
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a division assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression DivideAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.DivideAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2046
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a division assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression DivideAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.DivideAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Modulo(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2075
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic remainder operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Modulo(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Modulo]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Modulo(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2089
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic remainder operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Modulo(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Modulo]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ModuloAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2112
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a remainder assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression ModuloAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ModuloAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ModuloAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2126
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a remainder assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression ModuloAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ModuloAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2142
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a remainder assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression ModuloAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ModuloAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Multiply(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2171
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic multiplication operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Multiply(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Multiply]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Multiply(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2185
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic multiplication operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression Multiply(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Multiply]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2208
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2222
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2238
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that does not have overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2267
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssignChecked]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2281
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2297
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a multiplication assignment operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyAssignChecked(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyAssignChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2326
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic multiplication operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyChecked(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyChecked]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MultiplyChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2340
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an arithmetic multiplication operation that has overflow checking.
  syntax:
    content:
      CSharp: public static BinaryExpression MultiplyChecked(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.MultiplyChecked]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: LeftShift(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2379
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise left-shift operation.
  syntax:
    content:
      CSharp: public static BinaryExpression LeftShift(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LeftShift]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: LeftShift(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2393
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise left-shift operation.
  syntax:
    content:
      CSharp: public static BinaryExpression LeftShift(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LeftShift]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: LeftShiftAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2417
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise left-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression LeftShiftAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LeftShiftAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: LeftShiftAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2431
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise left-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression LeftShiftAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LeftShiftAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2447
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise left-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression LeftShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.LeftShiftAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: RightShift(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2477
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise right-shift operation.
  syntax:
    content:
      CSharp: public static BinaryExpression RightShift(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.RightShift]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: RightShift(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2491
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise right-shift operation.
  syntax:
    content:
      CSharp: public static BinaryExpression RightShift(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.RightShift]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: RightShiftAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2515
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise right-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression RightShiftAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.RightShiftAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: RightShiftAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2529
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise right-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression RightShiftAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.RightShiftAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2545
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise right-shift assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression RightShiftAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.RightShiftAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: And(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2575
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise AND operation.
  syntax:
    content:
      CSharp: public static BinaryExpression And(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.And]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: And(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2589
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise AND operation.
  syntax:
    content:
      CSharp: public static BinaryExpression And(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.And]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: AndAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2612
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise AND assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression AndAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AndAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: AndAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2626
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise AND assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression AndAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AndAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2642
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise AND assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression AndAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.AndAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Or(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2671
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise OR operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Or(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Or]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Or(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2685
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents an bitwise OR operation.
  syntax:
    content:
      CSharp: public static BinaryExpression Or(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Or]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: OrAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2708
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise OR assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression OrAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.OrAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: OrAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2722
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise OR assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression OrAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.OrAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2738
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise OR assignment operation.
  syntax:
    content:
      CSharp: public static BinaryExpression OrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.OrAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ExclusiveOr(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2766
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise or logical XOR operation, using op_ExclusiveOr for user-defined types.
  syntax:
    content:
      CSharp: public static BinaryExpression ExclusiveOr(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ExclusiveOr]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ExclusiveOr(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2780
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise or logical XOR operation, using op_ExclusiveOr for user-defined types.
  syntax:
    content:
      CSharp: public static BinaryExpression ExclusiveOr(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ExclusiveOr]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ExclusiveOrAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2802
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise or logical XOR assignment operation, using op_ExclusiveOr for user-defined types.
  syntax:
    content:
      CSharp: public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ExclusiveOrAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2816
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise or logical XOR assignment operation, using op_ExclusiveOr for user-defined types.
  syntax:
    content:
      CSharp: public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ExclusiveOrAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2832
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents a bitwise or logical XOR assignment operation, using op_ExclusiveOr for user-defined types.
  syntax:
    content:
      CSharp: public static BinaryExpression ExclusiveOrAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.ExclusiveOrAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Power(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2860
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents raising a number to a power.
  syntax:
    content:
      CSharp: public static BinaryExpression Power(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Power]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Power(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2874
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents raising a number to a power.
  syntax:
    content:
      CSharp: public static BinaryExpression Power(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Power]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: PowerAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2898
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents raising an expression to a power and assigning the result back to the expression.
  syntax:
    content:
      CSharp: public static BinaryExpression PowerAssign(Expression left, Expression right)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.PowerAssign]()

        and the [BinaryExpression.Left]() and [BinaryExpression.Right]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: PowerAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2912
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents raising an expression to a power and assigning the result back to the expression.
  syntax:
    content:
      CSharp: public static BinaryExpression PowerAssign(Expression left, Expression right, MethodInfo method)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.PowerAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), and [BinaryExpression.Method]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.Expression.yml
  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2928
  summary: Creates a [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that represents raising an expression to a power and assigning the result back to the expression.
  syntax:
    content:
      CSharp: public static BinaryExpression PowerAssign(Expression left, Expression right, MethodInfo method, LambdaExpression conversion)
    parameters:
    - id: left
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Left]() property equal to.
    - id: right
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [BinaryExpression.Right]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [BinaryExpression.Method]() property equal to.
    - id: conversion
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) to set the [BinaryExpression.Conversion]() property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: >-
        A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.PowerAssign]()

        and the [BinaryExpression.Left](), [BinaryExpression.Right](), [BinaryExpression.Method](),

        and [BinaryExpression.Conversion]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ArrayIndex(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BinaryExpression.cs
    startLine: 2956
  summary: Creates a BinaryExpression that represents applying an array index operator to an array of rank one.
  syntax:
    content:
      CSharp: public static BinaryExpression ArrayIndex(Expression array, Expression index)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression to set the Left property equal to.
    - id: index
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An Expression to set the Right property equal to.
    return:
      id: BinaryExpression
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: A BinaryExpression that has the NodeType property equal to ArrayIndex and the Left and Right properties set to the specified values.
  id: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Block(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o1
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 713
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains two expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Expression arg0, Expression arg1)
    parameters:
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The first expression in the block.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The second expression in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Block(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 727
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains three expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2)
    parameters:
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The first expression in the block.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The second expression in the block.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The third expression in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Block(Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 743
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains four expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3)
    parameters:
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The first expression in the block.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The second expression in the block.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The third expression in the block.
    - id: arg3
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The fourth expression in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Block(Expression, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 761
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains five expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4)
    parameters:
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The first expression in the block.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The second expression in the block.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The third expression in the block.
    - id: arg3
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The fourth expression in the block.
    - id: arg4
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The fifth expression in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Block(params Expression[])
  fullName: System.Linq.Expressions.Expression.Block(params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 777
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(params Expression[] expressions)
    parameters:
    - id: expressions
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Block(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 799
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given expressions and has no variables.
  syntax:
    content:
      CSharp: public static BlockExpression Block(IEnumerable<Expression> expressions)
    parameters:
    - id: expressions
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Block(Type, params Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Type, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 810
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given expressions, has no variables and has specific result type.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Type type, params Expression[] expressions)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the block.
    - id: expressions
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Block(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 822
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given expressions, has no variables and has specific result type.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Type type, IEnumerable<Expression> expressions)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the block.
    - id: expressions
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Block(IEnumerable<ParameterExpression>, params Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 833
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given variables and expressions.
  syntax:
    content:
      CSharp: public static BlockExpression Block(IEnumerable<ParameterExpression> variables, params Expression[] expressions)
    parameters:
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: The variables in the block.
    - id: expressions
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Block(Type, IEnumerable<ParameterExpression>, params Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 845
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given variables and expressions.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Type type, IEnumerable<ParameterExpression> variables, params Expression[] expressions)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the block.
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: The variables in the block.
    - id: expressions
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 856
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given variables and expressions.
  syntax:
    content:
      CSharp: public static BlockExpression Block(IEnumerable<ParameterExpression> variables, IEnumerable<Expression> expressions)
    parameters:
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: The variables in the block.
    - id: expressions
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o1
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/BlockExpression.cs
    startLine: 873
  summary: Creates a [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml) that contains the given variables and expressions.
  syntax:
    content:
      CSharp: public static BlockExpression Block(Type type, IEnumerable<ParameterExpression> variables, IEnumerable<Expression> expressions)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the block.
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: The variables in the block.
    - id: expressions
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The expressions in the block.
    return:
      id: BlockExpression
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The created [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  id: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Catch(Type, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o2
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 102
  summary: >-
    Creates a [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) representing a catch statement.

    The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of object to be caught can be specified but no reference to the object

    will be available for use in the [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  syntax:
    content:
      CSharp: public static CatchBlock Catch(Type type, Expression body)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of [System.Exception]() this [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) will handle.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the catch statement.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The created [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  id: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Catch(ParameterExpression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o2
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 113
  summary: Creates a [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) representing a catch statement with a reference to the caught object for use in the handler body.
  syntax:
    content:
      CSharp: public static CatchBlock Catch(ParameterExpression variable, Expression body)
    parameters:
    - id: variable
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) representing a reference to the [System.Exception]() object caught by this handler.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the catch statement.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The created [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  id: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Catch(Type, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o2
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 127
  summary: >-
    Creates a [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) representing a catch statement with

    an [System.Exception]() filter but no reference to the caught [System.Exception]() object.
  syntax:
    content:
      CSharp: public static CatchBlock Catch(Type type, Expression body, Expression filter)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of [System.Exception]() this [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) will handle.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the catch statement.
    - id: filter
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the [System.Exception]() filter.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The created [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  id: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Catch(ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o2
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 140
  summary: >-
    Creates a [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) representing a catch statement with

    an [System.Exception]() filter and a reference to the caught [System.Exception]() object.
  syntax:
    content:
      CSharp: public static CatchBlock Catch(ParameterExpression variable, Expression body, Expression filter)
    parameters:
    - id: variable
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) representing a reference to the [System.Exception]() object caught by this handler.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the catch statement.
    - id: filter
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the [System.Exception]() filter.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The created [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  id: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o2
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 155
  summary: Creates a [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) representing a catch statement with the specified elements.
  syntax:
    content:
      CSharp: public static CatchBlock MakeCatchBlock(Type type, ParameterExpression variable, Expression body, Expression filter)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of [System.Exception]() this [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml) will handle.
    - id: variable
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) representing a reference to the [System.Exception]() object caught by this handler.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the catch statement.
    - id: filter
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the [System.Exception]() filter.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The created [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  id: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Condition(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o3
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 156
  summary: Creates a [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content:
      CSharp: public static ConditionalExpression Condition(Expression test, Expression ifTrue, Expression ifFalse)
    parameters:
    - id: test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.Test]() property equal to.
    - id: ifTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfTrue]() property equal to.
    - id: ifFalse
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfFalse]() property equal to.
    return:
      id: ConditionalExpression
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: >-
        A [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Conditional]() and the [ConditionalExpression.Test](), [ConditionalExpression.IfTrue](),

        and [ConditionalExpression.IfFalse]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Condition(Expression, Expression, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 188
  summary: Creates a [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content:
      CSharp: public static ConditionalExpression Condition(Expression test, Expression ifTrue, Expression ifFalse, Type type)
    parameters:
    - id: test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.Test]() property equal to.
    - id: ifTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfTrue]() property equal to.
    - id: ifFalse
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfFalse]() property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) to set the [Expression.Type]() property equal to.
    return:
      id: ConditionalExpression
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: >-
        A [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Conditional]() and the [ConditionalExpression.Test](), [ConditionalExpression.IfTrue](),

        and [ConditionalExpression.IfFalse]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: IfThen(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 221
  summary: Creates a [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content:
      CSharp: public static ConditionalExpression IfThen(Expression test, Expression ifTrue)
    parameters:
    - id: test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.Test]() property equal to.
    - id: ifTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfTrue]() property equal to.
    return:
      id: ConditionalExpression
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: >-
        A [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Conditional]() and the [ConditionalExpression.Test](), [ConditionalExpression.IfTrue](),

        properties set to the specified values. The [ConditionalExpression.IfFalse]() property is set to default expression and

        the type of the resulting [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml) returned by this method is [System.Void]().
  id: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: IfThenElse(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConditionalExpression.cs
    startLine: 236
  summary: Creates a [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content:
      CSharp: public static ConditionalExpression IfThenElse(Expression test, Expression ifTrue, Expression ifFalse)
    parameters:
    - id: test
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.Test]() property equal to.
    - id: ifTrue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfTrue]() property equal to.
    - id: ifFalse
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [ConditionalExpression.IfFalse]() property equal to.
    return:
      id: ConditionalExpression
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: >-
        A [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Conditional]() and the [ConditionalExpression.Test](), [ConditionalExpression.IfTrue](),

        and [ConditionalExpression.IfFalse]() properties set to the specified values. The type of the resulting [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml)

        returned by this method is [System.Void]().
  id: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  href: System.Linq.Expressions.Expression.yml
  name: Constant(object)
  fullName: System.Linq.Expressions.Expression.Constant(object)
  type: Method
  source:
    remote: &o4
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConstantExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConstantExpression.cs
    startLine: 105
  summary: Creates a [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml) that has the [ConstantExpression.Value]() property set to the specified value. .
  syntax:
    content:
      CSharp: public static ConstantExpression Constant(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: An [System.Object]() to set the [ConstantExpression.Value]() property equal to.
    return:
      id: ConstantExpression
      type:
        id: System.Linq.Expressions.ConstantExpression
        name: ConstantExpression
        href: System.Linq.Expressions.ConstantExpression.yml
      description: >-
        A [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Constant]() and the [Expression.Value]() property set to the specified value.
  id: System.Linq.Expressions.Expression.Constant(System.Object)
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Constant(object, Type)
  fullName: System.Linq.Expressions.Expression.Constant(object, System.Type)
  type: Method
  source:
    remote: *o4
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ConstantExpression.cs
    startLine: 122
  summary: >-
    Creates a [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml) that has the [ConstantExpression.Value]()

    and [ConstantExpression.Type]() properties set to the specified values. .
  syntax:
    content:
      CSharp: public static ConstantExpression Constant(object value, Type type)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: An [System.Object]() to set the [ConstantExpression.Value]() property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: ConstantExpression
      type:
        id: System.Linq.Expressions.ConstantExpression
        name: ConstantExpression
        href: System.Linq.Expressions.ConstantExpression.yml
      description: >-
        A [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Constant]() and the [ConstantExpression.Value]() and

        [Expression.Type]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  href: System.Linq.Expressions.Expression.yml
  name: DebugInfo(SymbolDocumentInfo, int, int, int, int)
  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, int, int, int, int)
  type: Method
  source:
    remote: &o5
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/DebugInfoExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/DebugInfoExpression.cs
    startLine: 221
  summary: Creates a [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml) with the specified span.
  syntax:
    content:
      CSharp: public static DebugInfoExpression DebugInfo(SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn)
    parameters:
    - id: document
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: The [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that represents the source file.
    - id: startLine
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The start line of this [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml). Must be greater than 0.
    - id: startColumn
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The start column of this [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml). Must be greater than 0.
    - id: endLine
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The end line of this [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml). Must be greater or equal than the start line.
    - id: endColumn
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The end column of this [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml). If the end line is the same as the start line, it must be greater or equal than the start column. In any case, must be greater than 0.
    return:
      id: DebugInfoExpression
      type:
        id: System.Linq.Expressions.DebugInfoExpression
        name: DebugInfoExpression
        href: System.Linq.Expressions.DebugInfoExpression.yml
      description: An instance of [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml).
  id: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ClearDebugInfo(SymbolDocumentInfo)
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  type: Method
  source:
    remote: *o5
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/DebugInfoExpression.cs
    startLine: 238
  summary: Creates a [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml) for clearing a sequence point.
  syntax:
    content:
      CSharp: public static DebugInfoExpression ClearDebugInfo(SymbolDocumentInfo document)
    parameters:
    - id: document
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: The [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that represents the source file.
    return:
      id: DebugInfoExpression
      type:
        id: System.Linq.Expressions.DebugInfoExpression
        name: DebugInfoExpression
        href: System.Linq.Expressions.DebugInfoExpression.yml
      description: An instance of [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml) for clearning a sequence point.
  id: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
- uid: System.Linq.Expressions.Expression.Empty
  href: System.Linq.Expressions.Expression.yml
  name: Empty()
  fullName: System.Linq.Expressions.Expression.Empty()
  type: Method
  source:
    remote: &o6
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/DefaultExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/DefaultExpression.cs
    startLine: 58
  summary: Creates an empty expression that has [System.Void]() type.
  syntax:
    content:
      CSharp: public static DefaultExpression Empty()
    parameters: []
    return:
      id: DefaultExpression
      type:
        id: System.Linq.Expressions.DefaultExpression
        name: DefaultExpression
        href: System.Linq.Expressions.DefaultExpression.yml
      description: >-
        A [System.Linq.Expressions.DefaultExpression](System.Linq.Expressions.DefaultExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Default]() and the [Expression.Type]() property set to [System.Void]().
  id: System.Linq.Expressions.Expression.Empty
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Default(Type)
  fullName: System.Linq.Expressions.Expression.Default(System.Type)
  type: Method
  source:
    remote: *o6
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/DefaultExpression.cs
    startLine: 71
  summary: Creates a [System.Linq.Expressions.DefaultExpression](System.Linq.Expressions.DefaultExpression.yml) that has the [Expression.Type]() property set to the specified type.
  syntax:
    content:
      CSharp: public static DefaultExpression Default(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: DefaultExpression
      type:
        id: System.Linq.Expressions.DefaultExpression
        name: DefaultExpression
        href: System.Linq.Expressions.DefaultExpression.yml
      description: >-
        A [System.Linq.Expressions.DefaultExpression](System.Linq.Expressions.DefaultExpression.yml) that has the [Expression.NodeType]() property equal to

        [ExpressionType.Default]() and the [Expression.Type]() property set to the specified type.
  id: System.Linq.Expressions.Expression.Default(System.Type)
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: ElementInit(MethodInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: &o7
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 89
  summary: Creates an [ElementInit]() expression that represents the initialization of a list.
  syntax:
    content:
      CSharp: public static ElementInit ElementInit(MethodInfo addMethod, params Expression[] arguments)
    parameters:
    - id: addMethod
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() for the list's Add method.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array containing the Expressions to be used to initialize the list.
    return:
      id: ElementInit
      type:
        id: System.Linq.Expressions.ElementInit
        name: ElementInit
        href: System.Linq.Expressions.ElementInit.yml
      description: The created [ElementInit]() expression.
  id: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: ElementInit(MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o7
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 100
  summary: Creates an [ElementInit]() expression that represents the initialization of a list.
  syntax:
    content:
      CSharp: public static ElementInit ElementInit(MethodInfo addMethod, IEnumerable<Expression> arguments)
    parameters:
    - id: addMethod
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() for the list's Add method.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() containing [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) elements to initialize the list.
    return:
      id: ElementInit
      type:
        id: System.Linq.Expressions.ElementInit
        name: ElementInit
        href: System.Linq.Expressions.ElementInit.yml
      description: The created [ElementInit]() expression.
  id: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Expression(ExpressionType, Type)
  fullName: System.Linq.Expressions.Expression.Expression(System.Linq.Expressions.ExpressionType, System.Type)
  type: Constructor
  source:
    remote: &o8
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 54
  summary: Constructs a new instance of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  syntax:
    content:
      CSharp: '[Obsolete("use a different constructor that does not take ExpressionType. Then override NodeType and Type properties to provide the values that would be specified to this constructor.")] protected Expression(ExpressionType nodeType, Type type)'
    parameters:
    - id: nodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The  of the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  id: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
- uid: System.Linq.Expressions.Expression.#ctor
  href: System.Linq.Expressions.Expression.yml
  name: Expression()
  fullName: System.Linq.Expressions.Expression.Expression()
  type: Constructor
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 73
  summary: Constructs a new instance of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  syntax:
    content:
      CSharp: protected Expression()
    parameters: []
  id: System.Linq.Expressions.Expression.#ctor
- uid: System.Linq.Expressions.Expression.NodeType
  href: System.Linq.Expressions.Expression.yml
  name: NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
  type: Property
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 80
  summary: The [System.Linq.Expressions.ExpressionType](System.Linq.Expressions.ExpressionType.yml) of the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  syntax:
    content:
      CSharp: public virtual ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.Expression.NodeType
- uid: System.Linq.Expressions.Expression.Type
  href: System.Linq.Expressions.Expression.yml
  name: Type
  fullName: System.Linq.Expressions.Expression.Type
  type: Property
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 99
  summary: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) of the value represented by this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  syntax:
    content:
      CSharp: '[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1721:PropertyNamesShouldNotMatchGetMethods")] public virtual Type Type { get; }'
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.Expression.Type
- uid: System.Linq.Expressions.Expression.CanReduce
  href: System.Linq.Expressions.Expression.yml
  name: CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
  type: Property
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 119
  summary: >-
    Indicates that the node can be reduced to a simpler node. If this

    returns true, Reduce() can be called to produce the reduced form.
  syntax:
    content:
      CSharp: public virtual bool CanReduce { get; }
    parameters:
    - id: CanReduce
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.Expression.CanReduce
- uid: System.Linq.Expressions.Expression.Reduce
  href: System.Linq.Expressions.Expression.yml
  name: Reduce()
  fullName: System.Linq.Expressions.Expression.Reduce()
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 130
  summary: >-
    Reduces this node to a simpler expression. If CanReduce returns

    true, this should return a valid expression. This method is

    allowed to return another node which itself must be reduced.
  syntax:
    content:
      CSharp: public virtual Expression Reduce()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.Expression.Reduce
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.Expression.yml
  name: VisitChildren(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 148
  summary: >-
    Reduces the node and then calls the visitor delegate on the reduced expression.

    Throws an exception if the node isn't reducible.
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitChildren(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
      description: An instance of [System.Func`2]().
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The expression being visited, or an expression which should replace it in the tree.
  id: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.Expression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 168
  summary: >-
    Dispatches to the specific visit method for this node type. For

    example, [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) will call into

    [System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)](System.Linq.Expressions.ExpressionVisitor.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
      description: The visitor to visit this node with.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of visiting this node.
  id: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  href: System.Linq.Expressions.Expression.yml
  name: ReduceAndCheck()
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 183
  summary: >-
    Reduces this node to a simpler expression. If CanReduce returns

    true, this should return a valid expression. This method is

    allowed to return another node which itself must be reduced.
  syntax:
    content:
      CSharp: public Expression ReduceAndCheck()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.Expression.ReduceAndCheck
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  href: System.Linq.Expressions.Expression.yml
  name: ReduceExtensions()
  fullName: System.Linq.Expressions.Expression.ReduceExtensions()
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 201
  summary: >-
    Reduces the expression to a known node type (i.e. not an Extension node)

    or simply returns the expression if it is already a known type.
  syntax:
    content:
      CSharp: public Expression ReduceExtensions()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.Expression.ReduceExtensions
- uid: System.Linq.Expressions.Expression.ToString
  href: System.Linq.Expressions.Expression.yml
  name: ToString()
  fullName: System.Linq.Expressions.Expression.ToString()
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 216
  summary: Creates a [System.String]() representation of the Expression.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() representation of the Expression.
  id: System.Linq.Expressions.Expression.ToString
- uid: System.Linq.Expressions.Expression.DebugView
  href: System.Linq.Expressions.Expression.yml
  name: DebugView
  fullName: System.Linq.Expressions.Expression.DebugView
  type: Property
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 225
  summary: Creates a [System.String]() representation of the Expression.
  syntax:
    content:
      CSharp: public string DebugView { get; }
    parameters:
    - id: DebugView
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Linq.Expressions.Expression.DebugView
- uid: System.Linq.Expressions.Expression.ReturnReadOnly``1(System.Collections.Generic.IList{``0}@)
  href: System.Linq.Expressions.Expression.yml
  name: ReturnReadOnly<T>(ref IList<T>)
  fullName: System.Linq.Expressions.Expression.ReturnReadOnly<T>(ref System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 248
  summary: >-
    Helper used for ensuring we only return 1 instance of a ReadOnlyCollection of T.



    This is called from various methods where we internally hold onto an IList of T

    or a readonly collection of T.  We check to see if we've already returned a

    readonly collection of T and if so simply return the other one.  Otherwise we do

    a thread-safe replacement of the list w/ a readonly collection which wraps it.



    Ultimately this saves us from having to allocate a ReadOnlyCollection for our

    data types because the compiler is capable of going directly to the IList of T.
  syntax:
    content:
      CSharp: public static ReadOnlyCollection<T> ReturnReadOnly<T>(ref IList<T> collection)
    parameters:
    - id: collection
      type:
        id: System.Collections.Generic.IList{``0}
        name: IList<T>
        isExternal: true
    return:
      id: ReadOnlyCollection
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{``0}
        name: ReadOnlyCollection<T>
        isExternal: true
  id: System.Linq.Expressions.Expression.ReturnReadOnly``1(System.Collections.Generic.IList{``0}@)
- uid: System.Linq.Expressions.Expression.ReturnObject``1(System.Object)
  href: System.Linq.Expressions.Expression.yml
  name: ReturnObject<T>(object)
  fullName: System.Linq.Expressions.Expression.ReturnObject<T>(object)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 279
  summary: >-
    Helper which is used for specialized subtypes which use ReturnReadOnly(ref object, ...).

    This is the reverse version of ReturnReadOnly which takes an IArgumentProvider.



    This is used to return the 1st argument.  The 1st argument is typed as object and either

    contains a ReadOnlyCollection or the Expression.  We check for the Expression and if it's

    present we return that, otherwise we return the 1st element of the ReadOnlyCollection.
  syntax:
    content:
      CSharp: 'public static T ReturnObject<T>(object collectionOrT)where T : class'
    parameters:
    - id: collectionOrT
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: T
      type:
        id: T
        name: T
        href: T
  id: System.Linq.Expressions.Expression.ReturnObject``1(System.Object)
- uid: System.Linq.Expressions.Expression.RequiresCanRead(System.Linq.Expressions.Expression,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: RequiresCanRead(Expression, string)
  fullName: System.Linq.Expressions.Expression.RequiresCanRead(System.Linq.Expressions.Expression, string)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 284
  syntax:
    content:
      CSharp: public static void RequiresCanRead(Expression expression, string paramName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
    - id: paramName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Linq.Expressions.Expression.RequiresCanRead(System.Linq.Expressions.Expression,System.String)
- uid: System.Linq.Expressions.Expression.RequiresCanRead(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
  href: System.Linq.Expressions.Expression.yml
  name: RequiresCanRead(IEnumerable<Expression>, string)
  fullName: System.Linq.Expressions.Expression.RequiresCanRead(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, string)
  type: Method
  source:
    remote: *o8
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/Expression.cs
    startLine: 289
  syntax:
    content:
      CSharp: public static void RequiresCanRead(IEnumerable<Expression> items, string paramName)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
    - id: paramName
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Linq.Expressions.Expression.RequiresCanRead(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.String)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Break(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: &o9
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 130
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a break statement.
  syntax:
    content:
      CSharp: public static GotoExpression Break(LabelTarget target)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Break,

        the [GotoExpression.Target]() property set to , and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Break(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 145
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a break statement. The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Break(LabelTarget target, Expression value)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Break,

        the [GotoExpression.Target]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Break(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 160
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a break statement with the specified type.
  syntax:
    content:
      CSharp: public static GotoExpression Break(LabelTarget target, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Break,

        the [GotoExpression.Target]() property set to ,

        and the [Expression.Type]() property set to .
  id: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Break(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 178
  summary: >-
    Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a break statement with the specified type.

    The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Break(LabelTarget target, Expression value, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Break,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Continue(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 192
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a continue statement.
  syntax:
    content:
      CSharp: public static GotoExpression Continue(LabelTarget target)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Continue,

        the [GotoExpression.Target]() property set to ,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Continue(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 208
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a continue statement with the specified type.
  syntax:
    content:
      CSharp: public static GotoExpression Continue(LabelTarget target, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Continue,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Return(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 222
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a return statement.
  syntax:
    content:
      CSharp: public static GotoExpression Return(LabelTarget target)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Return,

        the [GotoExpression.Target]() property set to ,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Return(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 238
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a return statement with the specified type.
  syntax:
    content:
      CSharp: public static GotoExpression Return(LabelTarget target, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Return,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Return(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 253
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a return statement. The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Return(LabelTarget target, Expression value)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Continue,

        the [GotoExpression.Target]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Return(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 271
  summary: >-
    Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a return statement with the specified type.

    The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Return(LabelTarget target, Expression value, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Continue,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Goto(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 285
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a goto.
  syntax:
    content:
      CSharp: public static GotoExpression Goto(LabelTarget target)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Goto,

        the [GotoExpression.Target]() property set to the specified value,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Goto(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 301
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a goto with the specified type.
  syntax:
    content:
      CSharp: public static GotoExpression Goto(LabelTarget target, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Goto,

        the [GotoExpression.Target]() property set to the specified value,

        the [Expression.Type]() property set to ,

        and a null value to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Goto(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 316
  summary: Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a goto. The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Goto(LabelTarget target, Expression value)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Goto,

        the [GotoExpression.Target]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Goto(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 334
  summary: >-
    Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a goto with the specified type.

    The value passed to the label upon jumping can be specified.
  syntax:
    content:
      CSharp: public static GotoExpression Goto(LabelTarget target, Expression value, Type type)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to Goto,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o9
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 353
  summary: >-
    Creates a [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) representing a jump of the specified [System.Linq.Expressions.GotoExpressionKind](System.Linq.Expressions.GotoExpressionKind.yml).

    The value passed to the label upon jumping can also be specified.
  syntax:
    content:
      CSharp: public static GotoExpression MakeGoto(GotoExpressionKind kind, LabelTarget target, Expression value, Type type)
    parameters:
    - id: kind
      type:
        id: System.Linq.Expressions.GotoExpressionKind
        name: GotoExpressionKind
        href: System.Linq.Expressions.GotoExpressionKind.yml
      description: The [System.Linq.Expressions.GotoExpressionKind](System.Linq.Expressions.GotoExpressionKind.yml) of the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml).
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) will jump to.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value that will be passed to the associated label upon jumping.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: An [System.Type]() to set the [Expression.Type]() property equal to.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: >-
        A [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml) with [GotoExpression.Kind]() equal to ,

        the [GotoExpression.Target]() property set to ,

        the [Expression.Type]() property set to ,

        and  to be passed to the target label upon jumping.
  id: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: &o10
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 145
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) that represents accessing an indexed property in an object.
  syntax:
    content:
      CSharp: public static IndexExpression MakeIndex(Expression instance, PropertyInfo indexer, IEnumerable<Expression> arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The object to which the property belongs. Should be null if the property is static(shared).
    - id: indexer
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) representing the property to index.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An IEnumerable{Expression} contaning the arguments to be used to index the property.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: ArrayAccess(Expression, params Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o10
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 167
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) to access an array.
  syntax:
    content:
      CSharp: public static IndexExpression ArrayAccess(Expression array, params Expression[] indexes)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An expression representing the array to index.
    - id: indexes
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array containing expressions used to index the array.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: ArrayAccess(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o10
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 180
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) to access an array.
  syntax:
    content:
      CSharp: public static IndexExpression ArrayAccess(Expression array, IEnumerable<Expression> indexes)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An expression representing the array to index.
    - id: indexes
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() containing expressions used to index the array.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, string, params Expression[])
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o10
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 218
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) representing the access to an indexed property.
  syntax:
    content:
      CSharp: public static IndexExpression Property(Expression instance, string propertyName, params Expression[] arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The object to which the property belongs. If the property is static/shared, it must be null.
    - id: propertyName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the indexer.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects that are used to index the property.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, PropertyInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o10
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 359
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) representing the access to an indexed property.
  syntax:
    content:
      CSharp: public static IndexExpression Property(Expression instance, PropertyInfo indexer, params Expression[] arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The object to which the property belongs. If the property is static/shared, it must be null.
    - id: indexer
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
      description: The [System.Reflection.PropertyInfo]() that represents the property to index.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects that are used to index the property.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o10
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 371
  summary: Creates an [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml) representing the access to an indexed property.
  syntax:
    content:
      CSharp: public static IndexExpression Property(Expression instance, PropertyInfo indexer, IEnumerable<Expression> arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The object to which the property belongs. If the property is static/shared, it must be null.
    - id: indexer
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
      description: The [System.Reflection.PropertyInfo]() that represents the property to index.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects that are used to index the property.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The created [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Invoke(Expression, params Expression[])
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: &o11
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/InvocationExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/InvocationExpression.cs
    startLine: 146
  summary: >-
    Creates an [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml) that

    applies a delegate or lambda expression to a list of argument expressions.
  syntax:
    content:
      CSharp: public static InvocationExpression Invoke(Expression expression, params Expression[] arguments)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the delegate

        or lambda expression to be applied.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: >-
        An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects

        that represent the arguments that the delegate or lambda expression is applied to.
    return:
      id: InvocationExpression
      type:
        id: System.Linq.Expressions.InvocationExpression
        name: InvocationExpression
        href: System.Linq.Expressions.InvocationExpression.yml
      description: >-
        An [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml) that

        applies the specified delegate or lambda expression to the provided arguments.
  id: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Invoke(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o11
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/InvocationExpression.cs
    startLine: 173
  summary: >-
    Creates an [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml) that

    applies a delegate or lambda expression to a list of argument expressions.
  syntax:
    content:
      CSharp: public static InvocationExpression Invoke(Expression expression, IEnumerable<Expression> arguments)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the delegate

        or lambda expression to be applied.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: >-
        An [System.Collections.Generic.IEnumerable`1]() of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects

        that represent the arguments that the delegate or lambda expression is applied to.
    return:
      id: InvocationExpression
      type:
        id: System.Linq.Expressions.InvocationExpression
        name: InvocationExpression
        href: System.Linq.Expressions.InvocationExpression.yml
      description: >-
        An [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml) that

        applies the specified delegate or lambda expression to the provided arguments.
  id: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Label(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: &o12
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 94
  summary: Creates a [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) representing a label with no default value.
  syntax:
    content:
      CSharp: public static LabelExpression Label(LabelTarget target)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) which this [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) will be associated with.
    return:
      id: LabelExpression
      type:
        id: System.Linq.Expressions.LabelExpression
        name: LabelExpression
        href: System.Linq.Expressions.LabelExpression.yml
      description: A [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) with no default value.
  id: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Label(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o12
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 105
  summary: Creates a [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) representing a label with the given default value.
  syntax:
    content:
      CSharp: public static LabelExpression Label(LabelTarget target, Expression defaultValue)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) which this [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) will be associated with.
    - id: defaultValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value of this [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) when the label is reached through normal control flow.
    return:
      id: LabelExpression
      type:
        id: System.Linq.Expressions.LabelExpression
        name: LabelExpression
        href: System.Linq.Expressions.LabelExpression.yml
      description: A [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) with the given default value.
  id: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Label
  href: System.Linq.Expressions.Expression.yml
  name: Label()
  fullName: System.Linq.Expressions.Expression.Label()
  type: Method
  source:
    remote: &o13
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelTarget.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelTarget.cs
    startLine: 57
  summary: Creates a [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) representing a label with void type and no name.
  syntax:
    content:
      CSharp: public static LabelTarget Label()
    parameters: []
    return:
      id: LabelTarget
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The new [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  id: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.Expression.Label(System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Label(string)
  fullName: System.Linq.Expressions.Expression.Label(string)
  type: Method
  source:
    remote: *o13
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelTarget.cs
    startLine: 67
  summary: Creates a [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) representing a label with void type and the given name.
  syntax:
    content:
      CSharp: public static LabelTarget Label(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the label.
    return:
      id: LabelTarget
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The new [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  id: System.Linq.Expressions.Expression.Label(System.String)
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Label(Type)
  fullName: System.Linq.Expressions.Expression.Label(System.Type)
  type: Method
  source:
    remote: *o13
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelTarget.cs
    startLine: 77
  summary: Creates a [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) representing a label with the given type.
  syntax:
    content:
      CSharp: public static LabelTarget Label(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of value that is passed when jumping to the label.
    return:
      id: LabelTarget
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The new [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  id: System.Linq.Expressions.Expression.Label(System.Type)
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Label(Type, string)
  fullName: System.Linq.Expressions.Expression.Label(System.Type, string)
  type: Method
  source:
    remote: *o13
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelTarget.cs
    startLine: 88
  summary: Creates a [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) representing a label with the given type and name.
  syntax:
    content:
      CSharp: public static LabelTarget Label(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of value that is passed when jumping to the label.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the label.
    return:
      id: LabelTarget
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The new [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  id: System.Linq.Expressions.Expression.Label(System.Type,System.String)
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: &o14
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 276
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, params ParameterExpression[] parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, bool, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, bool, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 289
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, bool tailCall, params ParameterExpression[] parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 301
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 314
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, string, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, string, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 327
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, string name, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the lambda. Used for generating debugging info.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda<TDelegate>(Expression, string, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, string, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 341
  summary: Creates an [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) where the delegate type is known at compile time.
  syntax:
    content:
      CSharp: public static Expression<TDelegate> Lambda<TDelegate>(Expression body, string name, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the lambda. Used for generating debugging info.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<TDelegate>
        href: System.Linq.Expressions.Expression{``0}
      description: An [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml) that has the [NodeType]() property equal to [Lambda]() and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 355
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, params ParameterExpression[] parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, bool, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, bool, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 367
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, bool tailCall, params ParameterExpression[] parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 378
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 390
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 402
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, params ParameterExpression[] parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, bool, params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, bool, params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 415
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, bool tailCall, params ParameterExpression[] parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 427
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 440
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, string, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, string, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 452
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, string name, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name for the lambda. Used for emitting debug information.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Expression, string, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, string, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 465
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Expression body, string name, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name for the lambda. Used for emitting debug information.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, string, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, string, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 503
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, string name, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name for the lambda. Used for emitting debug information.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: Lambda(Type, Expression, string, bool, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, string, bool, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 520
  summary: Creates a LambdaExpression by first constructing a delegate type.
  syntax:
    content:
      CSharp: public static LambdaExpression Lambda(Type delegateType, Expression body, string name, bool tailCall, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: delegateType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) representing the delegate signature for the lambda.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [Body]() property equal to.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name for the lambda. Used for emitting debug information.
    - id: tailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: A [System.Boolean]() that indicates if tail call optimization will be applied when compiling the created expression.
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [Parameters]() collection.
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: A [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) that has the [NodeType]() property equal to Lambda and the [Body]() and [Parameters]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  href: System.Linq.Expressions.Expression.yml
  name: GetFuncType(params Type[])
  fullName: System.Linq.Expressions.Expression.GetFuncType(params System.Type[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 626
  summary: >-
    Creates a [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) object that represents a generic System.Func delegate type that has specific type arguments.

    The last type argument specifies the return type of the created delegate.
  syntax:
    content:
      CSharp: public static Type GetFuncType(params Type[] typeArgs)
    parameters:
    - id: typeArgs
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: An array of Type objects that specify the type arguments for the System.Func delegate type.
    return:
      id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of a System.Func delegate that has the specified type arguments.
  id: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  href: System.Linq.Expressions.Expression.yml
  name: TryGetFuncType(Type[], out Type)
  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], out System.Type)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 645
  summary: >-
    Creates a [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) object that represents a generic System.Func delegate type that has specific type arguments.

    The last type argument specifies the return type of the created delegate.
  syntax:
    content:
      CSharp: public static bool TryGetFuncType(Type[] typeArgs, out Type funcType)
    parameters:
    - id: typeArgs
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: An array of Type objects that specify the type arguments for the System.Func delegate type.
    - id: funcType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: When this method returns, contains the generic System.Func delegate type that has specific type arguments. Contains null if there is no generic System.Func delegate that matches the .This parameter is passed uninitialized.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if generic System.Func delegate type was created for specific ; false otherwise.
  id: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  href: System.Linq.Expressions.Expression.yml
  name: GetActionType(params Type[])
  fullName: System.Linq.Expressions.Expression.GetActionType(params System.Type[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 660
  summary: Creates a [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) object that represents a generic System.Action delegate type that has specific type arguments.
  syntax:
    content:
      CSharp: public static Type GetActionType(params Type[] typeArgs)
    parameters:
    - id: typeArgs
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: An array of Type objects that specify the type arguments for the System.Action delegate type.
    return:
      id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of a System.Action delegate that has the specified type arguments.
  id: System.Linq.Expressions.Expression.GetActionType(System.Type[])
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  href: System.Linq.Expressions.Expression.yml
  name: TryGetActionType(Type[], out Type)
  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], out System.Type)
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 678
  summary: Creates a [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) object that represents a generic System.Action delegate type that has specific type arguments.
  syntax:
    content:
      CSharp: public static bool TryGetActionType(Type[] typeArgs, out Type actionType)
    parameters:
    - id: typeArgs
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: An array of Type objects that specify the type arguments for the System.Action delegate type.
    - id: actionType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: When this method returns, contains the generic System.Action delegate type that has specific type arguments. Contains null if there is no generic System.Action delegate that matches the .This parameter is passed uninitialized.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if generic System.Action delegate type was created for specific ; false otherwise.
  id: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  href: System.Linq.Expressions.Expression.yml
  name: GetDelegateType(params Type[])
  fullName: System.Linq.Expressions.Expression.GetDelegateType(params System.Type[])
  type: Method
  source:
    remote: *o14
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 698
  summary: >-
    Gets a [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) object that represents a generic System.Func or System.Action delegate type that has specific type arguments.

    The last type argument determines the return type of the delegate. If no Func or Action is large enough, it will generate a custom

    delegate type.
  syntax:
    content:
      CSharp: public static Type GetDelegateType(params Type[] typeArgs)
    parameters:
    - id: typeArgs
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: The type arguments of the delegate.
    return:
      id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The delegate type.
  id: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, params Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: &o15
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 124
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses a method named "Add" to add elements to a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, params Expression[] initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: initializers
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: A [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that has the [ListInitExpression.NodeType]() property equal to ListInit and the [ListInitExpression.NewExpression]() property set to the specified value.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o15
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 137
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses a method named "Add" to add elements to a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, IEnumerable<Expression> initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [ElementInit]() objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: A [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that has the [ListInitExpression.NodeType]() property equal to ListInit and the [ListInitExpression.NewExpression]() property set to the specified value.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, MethodInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o15
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 159
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses a specified method to add elements to a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, MethodInfo addMethod, params Expression[] initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: addMethod
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents an instance method named "Add" (case insensitive), that adds an element to a collection.
    - id: initializers
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: A [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that has the [ListInitExpression.NodeType]() property equal to ListInit and the [ListInitExpression.NewExpression]() property set to the specified value.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o15
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 177
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses a specified method to add elements to a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, MethodInfo addMethod, IEnumerable<Expression> initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: addMethod
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents an instance method named "Add" (case insensitive), that adds an element to a collection.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the Initializers collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: A [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that has the [ListInitExpression.NodeType]() property equal to ListInit and the [ListInitExpression.NewExpression]() property set to the specified value.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, params ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, params System.Linq.Expressions.ElementInit[])
  type: Method
  source:
    remote: *o15
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 212
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses specified [ElementInit]() objects to initialize a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, params ElementInit[] initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: initializers
      type:
        id: System.Array
        name: ElementInit[]
        isExternal: true
      description: An array that contains [ElementInit]() objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: >-
        A [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that has the [Expressions.NodeType]() property equal to ListInit

        and the [ListInitExpression.NewExpression]() and [ListInitExpression.Initializers]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  href: System.Linq.Expressions.Expression.yml
  name: ListInit(NewExpression, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  type: Method
  source:
    remote: *o15
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 227
  summary: Creates a [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml) that uses specified [ElementInit]() objects to initialize a collection.
  syntax:
    content:
      CSharp: public static ListInitExpression ListInit(NewExpression newExpression, IEnumerable<ElementInit> initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [ListInitExpression.NewExpression]() property equal to.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
        name: IEnumerable<ElementInit>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [ElementInit]() objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [ElementInit]() objects to use to populate the [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) collection.
  id: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Loop(Expression)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o16
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 103
  summary: Creates a [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml) with the given body.
  syntax:
    content:
      CSharp: public static LoopExpression Loop(Expression body)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the loop.
    return:
      id: LoopExpression
      type:
        id: System.Linq.Expressions.LoopExpression
        name: LoopExpression
        href: System.Linq.Expressions.LoopExpression.yml
      description: The created [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml).
  id: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Loop(Expression, LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o16
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 114
  summary: Creates a [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml) with the given body and break target.
  syntax:
    content:
      CSharp: public static LoopExpression Loop(Expression body, LabelTarget break)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the loop.
    - id: break
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The break target used by the loop body.
    return:
      id: LoopExpression
      type:
        id: System.Linq.Expressions.LoopExpression
        name: LoopExpression
        href: System.Linq.Expressions.LoopExpression.yml
      description: The created [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml).
  id: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.Expression.yml
  name: Loop(Expression, LabelTarget, LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o16
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 126
  summary: Creates a [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml) with the given body.
  syntax:
    content:
      CSharp: public static LoopExpression Loop(Expression body, LabelTarget break, LabelTarget continue)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the loop.
    - id: break
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The break target used by the loop body.
    - id: continue
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The continue target used by the loop body.
    return:
      id: LoopExpression
      type:
        id: System.Linq.Expressions.LoopExpression
        name: LoopExpression
        href: System.Linq.Expressions.LoopExpression.yml
      description: The created [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml).
  id: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Bind(MemberInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o17
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberAssignment.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberAssignment.cs
    startLine: 56
  summary: Creates a [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml) binding the specified value to the given member.
  syntax:
    content:
      CSharp: public static MemberAssignment Bind(MemberInfo member, Expression expression)
    parameters:
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: The [System.Reflection.MemberInfo]() for the member which is being assigned to.
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be assigned to .
    return:
      id: MemberAssignment
      type:
        id: System.Linq.Expressions.MemberAssignment
        name: MemberAssignment
        href: System.Linq.Expressions.MemberAssignment.yml
      description: The created [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml).
  id: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Bind(MethodInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o17
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberAssignment.cs
    startLine: 75
  summary: Creates a [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml) binding the specified value to the given property.
  syntax:
    content:
      CSharp: public static MemberAssignment Bind(MethodInfo propertyAccessor, Expression expression)
    parameters:
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.PropertyInfo]() for the property which is being assigned to.
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be assigned to .
    return:
      id: MemberAssignment
      type:
        id: System.Linq.Expressions.MemberAssignment
        name: MemberAssignment
        href: System.Linq.Expressions.MemberAssignment.yml
      description: The created [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml).
  id: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Field(Expression, FieldInfo)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)
  type: Method
  source:
    remote: &o18
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 144
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a field.
  syntax:
    content:
      CSharp: public static MemberExpression Field(Expression expression, FieldInfo field)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the field.  This can be null for static fields.
    - id: field
      type:
        id: System.Reflection.FieldInfo
        name: FieldInfo
        isExternal: true
      description: The field to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Field(Expression, string)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, string)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 171
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a field.
  syntax:
    content:
      CSharp: public static MemberExpression Field(Expression expression, string fieldName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the field.  This can be null for static fields.
    - id: fieldName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The field to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Field(Expression, Type, string)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, string)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 196
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a field.
  syntax:
    content:
      CSharp: public static MemberExpression Field(Expression expression, Type type, string fieldName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the field.  This can be null for static fields.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) containing the field.
    - id: fieldName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The field to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, string)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 224
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property.
  syntax:
    content:
      CSharp: public static MemberExpression Property(Expression expression, string propertyName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the property.  This can be null for static properties.
    - id: propertyName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The property to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, Type, string)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, string)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 248
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property.
  syntax:
    content:
      CSharp: public static MemberExpression Property(Expression expression, Type type, string propertyName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the property.  This can be null for static properties.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) containing the property.
    - id: propertyName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The property to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, PropertyInfo)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 271
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property.
  syntax:
    content:
      CSharp: public static MemberExpression Property(Expression expression, PropertyInfo property)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the property.  This can be null for static properties.
    - id: property
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
      description: The property to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Property(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 305
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property.
  syntax:
    content:
      CSharp: public static MemberExpression Property(Expression expression, MethodInfo propertyAccessor)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the property.  This can be null for static properties.
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: An accessor method of the property to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: PropertyOrField(Expression, string)
  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, string)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 357
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property or field.
  syntax:
    content:
      CSharp: public static MemberExpression PropertyOrField(Expression expression, string propertyOrFieldName)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the member.  This can be null for static members.
    - id: propertyOrFieldName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The member to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MakeMemberAccess(Expression, MemberInfo)
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)
  type: Method
  source:
    remote: *o18
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 383
  summary: Creates a [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml) accessing a property or field.
  syntax:
    content:
      CSharp: public static MemberExpression MakeMemberAccess(Expression expression, MemberInfo member)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The containing object of the member.  This can be null for static members.
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: The member to be accessed.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The created [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  id: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  href: System.Linq.Expressions.Expression.yml
  name: MemberInit(NewExpression, params MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, params System.Linq.Expressions.MemberBinding[])
  type: Method
  source:
    remote: &o19
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 162
  summary: Creates a [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml).
  syntax:
    content:
      CSharp: public static MemberInitExpression MemberInit(NewExpression newExpression, params MemberBinding[] bindings)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [System.Linq.Expressions.MemberInitExpression.NewExpression](System.Linq.Expressions.MemberInitExpression.yml) property equal to.
    - id: bindings
      type:
        id: System.Array
        name: MemberBinding[]
        isExternal: true
      description: An array of [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [System.Linq.Expressions.MemberInitExpression.Bindings](System.Linq.Expressions.MemberInitExpression.yml) collection.
    return:
      id: MemberInitExpression
      type:
        id: System.Linq.Expressions.MemberInitExpression
        name: MemberInitExpression
        href: System.Linq.Expressions.MemberInitExpression.yml
      description: A [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.MemberInit](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MemberInitExpression.NewExpression](System.Linq.Expressions.MemberInitExpression.yml) and [System.Linq.Expressions.MemberInitExpression.Bindings](System.Linq.Expressions.MemberInitExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  href: System.Linq.Expressions.Expression.yml
  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  type: Method
  source:
    remote: *o19
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 174
  summary: Creates a [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml).
  syntax:
    content:
      CSharp: public static MemberInitExpression MemberInit(NewExpression newExpression, IEnumerable<MemberBinding> bindings)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) to set the [System.Linq.Expressions.MemberInitExpression.NewExpression](System.Linq.Expressions.MemberInitExpression.yml) property equal to.
    - id: bindings
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
        name: IEnumerable<MemberBinding>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [System.Linq.Expressions.MemberInitExpression.Bindings](System.Linq.Expressions.MemberInitExpression.yml) collection.
    return:
      id: MemberInitExpression
      type:
        id: System.Linq.Expressions.MemberInitExpression
        name: MemberInitExpression
        href: System.Linq.Expressions.MemberInitExpression.yml
      description: A [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.MemberInit](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MemberInitExpression.NewExpression](System.Linq.Expressions.MemberInitExpression.yml) and [System.Linq.Expressions.MemberInitExpression.Bindings](System.Linq.Expressions.MemberInitExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  href: System.Linq.Expressions.Expression.yml
  name: ListBind(MemberInfo, params ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, params System.Linq.Expressions.ElementInit[])
  type: Method
  source:
    remote: &o20
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberListBinding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberListBinding.cs
    startLine: 62
  summary: Creates a [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) where the member is a field or property.
  syntax:
    content:
      CSharp: public static MemberListBinding ListBind(MemberInfo member, params ElementInit[] initializers)
    parameters:
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: A [System.Reflection.MemberInfo]() that represents a field or property to set the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) property equal to.
    - id: initializers
      type:
        id: System.Array
        name: ElementInit[]
        isExternal: true
      description: An array of [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml) objects to use to populate the [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) collection.
    return:
      id: MemberListBinding
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: A [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) that has the [System.Linq.Expressions.MemberBinding.BindingType](System.Linq.Expressions.MemberBinding.yml) property equal to [System.Linq.Expressions.MemberBindingType.ListBinding](System.Linq.Expressions.MemberBindingType.yml) and the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) and [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  href: System.Linq.Expressions.Expression.yml
  name: ListBind(MemberInfo, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  type: Method
  source:
    remote: *o20
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberListBinding.cs
    startLine: 77
  summary: Creates a [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) where the member is a field or property.
  syntax:
    content:
      CSharp: public static MemberListBinding ListBind(MemberInfo member, IEnumerable<ElementInit> initializers)
    parameters:
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: A [System.Reflection.MemberInfo]() that represents a field or property to set the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) property equal to.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
        name: IEnumerable<ElementInit>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml) objects to use to populate the [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) collection.
    return:
      id: MemberListBinding
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: A [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) that has the [System.Linq.Expressions.MemberBinding.BindingType](System.Linq.Expressions.MemberBinding.yml) property equal to [System.Linq.Expressions.MemberBindingType.ListBinding](System.Linq.Expressions.MemberBindingType.yml) and the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) and [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  href: System.Linq.Expressions.Expression.yml
  name: ListBind(MethodInfo, params ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, params System.Linq.Expressions.ElementInit[])
  type: Method
  source:
    remote: *o20
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberListBinding.cs
    startLine: 96
  summary: Creates a [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) object based on a specified property accessor method.
  syntax:
    content:
      CSharp: public static MemberListBinding ListBind(MethodInfo propertyAccessor, params ElementInit[] initializers)
    parameters:
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents a property accessor method.
    - id: initializers
      type:
        id: System.Array
        name: ElementInit[]
        isExternal: true
      description: An array of [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml) objects to use to populate the [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) collection.
    return:
      id: MemberListBinding
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: A [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) that has the [System.Linq.Expressions.MemberBinding.BindingType](System.Linq.Expressions.MemberBinding.yml) property equal to [System.Linq.Expressions.MemberBindingType.ListBinding](System.Linq.Expressions.MemberBindingType.yml), the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) property set to the [System.Reflection.MemberInfo]() that represents the property accessed in , and [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) populated with the elements of .
  id: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  href: System.Linq.Expressions.Expression.yml
  name: ListBind(MethodInfo, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  type: Method
  source:
    remote: *o20
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberListBinding.cs
    startLine: 111
  summary: Creates a [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) based on a specified property accessor method.
  syntax:
    content:
      CSharp: public static MemberListBinding ListBind(MethodInfo propertyAccessor, IEnumerable<ElementInit> initializers)
    parameters:
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents a property accessor method.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
        name: IEnumerable<ElementInit>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml) objects to use to populate the [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) collection.
    return:
      id: MemberListBinding
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: A [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml) that has the [System.Linq.Expressions.MemberBinding.BindingType](System.Linq.Expressions.MemberBinding.yml) property equal to [System.Linq.Expressions.MemberBindingType.ListBinding](System.Linq.Expressions.MemberBindingType.yml), the [System.Linq.Expressions.MemberBinding.Member](System.Linq.Expressions.MemberBinding.yml) property set to the [System.Reflection.MemberInfo]() that represents the property accessed in , and [System.Linq.Expressions.MemberListBinding.Initializers](System.Linq.Expressions.MemberListBinding.yml) populated with the elements of .
  id: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  href: System.Linq.Expressions.Expression.yml
  name: MemberBind(MemberInfo, params MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, params System.Linq.Expressions.MemberBinding[])
  type: Method
  source:
    remote: &o21
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberMemberBinding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberMemberBinding.cs
    startLine: 63
  summary: Creates a [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that represents the recursive initialization of members of a field or property.
  syntax:
    content:
      CSharp: public static MemberMemberBinding MemberBind(MemberInfo member, params MemberBinding[] bindings)
    parameters:
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: The [System.Reflection.MemberInfo]() to set the [MemberBinding.Member]() property equal to.
    - id: bindings
      type:
        id: System.Array
        name: MemberBinding[]
        isExternal: true
      description: An array of [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [MemberMemberBindings.Bindings]() collection.
    return:
      id: MemberMemberBinding
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: A [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that has the [MemberBinding.BindingType]() property equal to [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) and the [MemberBinding.Member]() and [MemberMemberBindings.Bindings]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  href: System.Linq.Expressions.Expression.yml
  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  type: Method
  source:
    remote: *o21
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberMemberBinding.cs
    startLine: 76
  summary: Creates a [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that represents the recursive initialization of members of a field or property.
  syntax:
    content:
      CSharp: public static MemberMemberBinding MemberBind(MemberInfo member, IEnumerable<MemberBinding> bindings)
    parameters:
    - id: member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
      description: The [System.Reflection.MemberInfo]() to set the [MemberBinding.Member]() property equal to.
    - id: bindings
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
        name: IEnumerable<MemberBinding>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [MemberMemberBindings.Bindings]() collection.
    return:
      id: MemberMemberBinding
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: A [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that has the [MemberBinding.BindingType]() property equal to [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) and the [MemberBinding.Member]() and [MemberMemberBindings.Bindings]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  href: System.Linq.Expressions.Expression.yml
  name: MemberBind(MethodInfo, params MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, params System.Linq.Expressions.MemberBinding[])
  type: Method
  source:
    remote: *o21
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberMemberBinding.cs
    startLine: 97
  summary: Creates a [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that represents the recursive initialization of members of a member that is accessed by using a property accessor method.
  syntax:
    content:
      CSharp: public static MemberMemberBinding MemberBind(MethodInfo propertyAccessor, params MemberBinding[] bindings)
    parameters:
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MemberInfo]() that represents a property accessor method.
    - id: bindings
      type:
        id: System.Array
        name: MemberBinding[]
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [MemberMemberBindings.Bindings]() collection.
    return:
      id: MemberMemberBinding
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: >-
        A [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that has the [MemberBinding.BindingType]() property equal to [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml),

        the Member property set to the [System.Reflection.PropertyInfo]() that represents the property accessed in ,

        and [MemberMemberBindings.Bindings]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  href: System.Linq.Expressions.Expression.yml
  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  type: Method
  source:
    remote: *o21
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberMemberBinding.cs
    startLine: 113
  summary: Creates a [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that represents the recursive initialization of members of a member that is accessed by using a property accessor method.
  syntax:
    content:
      CSharp: public static MemberMemberBinding MemberBind(MethodInfo propertyAccessor, IEnumerable<MemberBinding> bindings)
    parameters:
    - id: propertyAccessor
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MemberInfo]() that represents a property accessor method.
    - id: bindings
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
        name: IEnumerable<MemberBinding>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml) objects to use to populate the [MemberMemberBindings.Bindings]() collection.
    return:
      id: MemberMemberBinding
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: >-
        A [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml) that has the [MemberBinding.BindingType]() property equal to [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml),

        the Member property set to the [System.Reflection.PropertyInfo]() that represents the property accessed in ,

        and [MemberMemberBindings.Bindings]() properties set to the specified values.
  id: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o22
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 593
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static method that takes one argument.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, Expression arg0)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 614
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static method that takes two arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 638
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static method that takes three arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the third argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 665
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static method that takes four arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the third argument.
    - id: arg3
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the fourth argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 696
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static method that takes five arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, Expression arg0, Expression arg1, Expression arg2, Expression arg3, Expression arg4)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the third argument.
    - id: arg3
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the fourth argument.
    - id: arg4
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the fifth argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 724
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static (Shared in Visual Basic) method.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, params Expression[] arguments)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The array of one or more of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the call arguments.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Call(MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 735
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static (Shared in Visual Basic) method.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(MethodInfo method, IEnumerable<Expression> arguments)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: A collection of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the call arguments.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 746
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a method that takes no arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, MethodInfo method)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that specifies the instance for an instance call. (pass null for a static (Shared in Visual Basic) method).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, MethodInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 758
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a method call.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, MethodInfo method, params Expression[] arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that specifies the instance for an instance call. (pass null for a static (Shared in Visual Basic) method).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of one or more of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the call arguments.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, MethodInfo, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 771
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a method that takes two arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that specifies the instance for an instance call. (pass null for a static (Shared in Visual Basic) method).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, MethodInfo, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 801
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a method that takes three arguments.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, MethodInfo method, Expression arg0, Expression arg1, Expression arg2)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that specifies the instance for an instance call. (pass null for a static (Shared in Visual Basic) method).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the target method.
    - id: arg0
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the first argument.
    - id: arg1
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the second argument.
    - id: arg2
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the third argument.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, string, Type[], params Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, string, System.Type[], params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 835
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to an instance method by calling the appropriate factory method.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, string methodName, Type[] typeArguments, params Expression[] arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) whose [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property value will be searched for a specific method.
    - id: methodName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the method.
    - id: typeArguments
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: >-
        An array of [System.Type]() objects that specify the type parameters of the generic method.

        This argument should be null when  specifies a non-generic method.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects that represents the arguments to the method.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml), the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) property equal to , [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) set to the [System.Reflection.MethodInfo]() that represents the specified instance method, and [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) set to the specified arguments.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: Call(Type, string, Type[], params Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Type, string, System.Type[], params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 860
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a call to a static (Shared in Visual Basic) method by calling the appropriate factory method.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Type type, string methodName, Type[] typeArguments, params Expression[] arguments)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Type]() that specifies the type that contains the specified static (Shared in Visual Basic) method.
    - id: methodName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the method.
    - id: typeArguments
      type:
        id: System.Array
        name: Type[]
        isExternal: true
      description: >-
        An array of [System.Type]() objects that specify the type parameters of the generic method.

        This argument should be null when  specifies a non-generic method.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects that represent the arguments to the method.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml), the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property set to the [System.Reflection.MethodInfo]() that represents the specified static (Shared in Visual Basic) method, and the [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) property set to the specified arguments.
  id: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: Call(Expression, MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 879
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents a method call.
  syntax:
    content:
      CSharp: public static MethodCallExpression Call(Expression instance, MethodInfo method, IEnumerable<Expression> arguments)
    parameters:
    - id: instance
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) property equal to (pass null for a static (Shared in Visual Basic) method).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) collection.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml), [System.Linq.Expressions.MethodCallExpression.Method](System.Linq.Expressions.MethodCallExpression.yml), and [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.ValidateArgumentTypes(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}@)
  href: System.Linq.Expressions.Expression.yml
  name: ValidateArgumentTypes(MethodBase, ExpressionType, ref ReadOnlyCollection<Expression>)
  fullName: System.Linq.Expressions.Expression.ValidateArgumentTypes(System.Reflection.MethodBase, System.Linq.Expressions.ExpressionType, ref System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 929
  syntax:
    content:
      CSharp: public static void ValidateArgumentTypes(MethodBase method, ExpressionType nodeKind, ref ReadOnlyCollection<Expression> arguments)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodBase
        name: MethodBase
        isExternal: true
    - id: nodeKind
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
    - id: arguments
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
  id: System.Linq.Expressions.Expression.ValidateArgumentTypes(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}@)
- uid: System.Linq.Expressions.Expression.ValidateArgumentCount(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Int32,System.Reflection.ParameterInfo[])
  href: System.Linq.Expressions.Expression.yml
  name: ValidateArgumentCount(MethodBase, ExpressionType, int, ParameterInfo[])
  fullName: System.Linq.Expressions.Expression.ValidateArgumentCount(System.Reflection.MethodBase, System.Linq.Expressions.ExpressionType, int, System.Reflection.ParameterInfo[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 939
  syntax:
    content:
      CSharp: public static void ValidateArgumentCount(MethodBase method, ExpressionType nodeKind, int count, ParameterInfo[] pis)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodBase
        name: MethodBase
        isExternal: true
    - id: nodeKind
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: pis
      type:
        id: System.Array
        name: ParameterInfo[]
        isExternal: true
  id: System.Linq.Expressions.Expression.ValidateArgumentCount(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Int32,System.Reflection.ParameterInfo[])
- uid: System.Linq.Expressions.Expression.ValidateOneArgument(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Reflection.ParameterInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ValidateOneArgument(MethodBase, ExpressionType, Expression, ParameterInfo)
  fullName: System.Linq.Expressions.Expression.ValidateOneArgument(System.Reflection.MethodBase, System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Reflection.ParameterInfo)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 944
  syntax:
    content:
      CSharp: public static Expression ValidateOneArgument(MethodBase method, ExpressionType nodeKind, Expression arg, ParameterInfo pi)
    parameters:
    - id: method
      type:
        id: System.Reflection.MethodBase
        name: MethodBase
        isExternal: true
    - id: nodeKind
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
    - id: arg
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
    - id: pi
      type:
        id: System.Reflection.ParameterInfo
        name: ParameterInfo
        isExternal: true
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.Expression.ValidateOneArgument(System.Reflection.MethodBase,System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Reflection.ParameterInfo)
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: ArrayIndex(Expression, params Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 1055
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents applying an array index operator to a multi-dimensional array.
  syntax:
    content:
      CSharp: public static MethodCallExpression ArrayIndex(Expression array, params Expression[] indexes)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) instances - indexes for the array index operation.
    - id: indexes
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array that contains [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) collection.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.ArrayIndex](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.BinaryExpression.Left](System.Linq.Expressions.BinaryExpression.yml) and [System.Linq.Expressions.BinaryExpression.Right](System.Linq.Expressions.BinaryExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: ArrayIndex(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o22
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MethodCallExpression.cs
    startLine: 1068
  summary: Creates a [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that represents applying an array index operator to an array of rank more than one.
  syntax:
    content:
      CSharp: public static MethodCallExpression ArrayIndex(Expression array, IEnumerable<Expression> indexes)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) property equal to.
    - id: indexes
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() that contains [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) collection.
    return:
      id: MethodCallExpression
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: A [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Call](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.MethodCallExpression.Object](System.Linq.Expressions.MethodCallExpression.yml) and [System.Linq.Expressions.MethodCallExpression.Arguments](System.Linq.Expressions.MethodCallExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: NewArrayInit(Type, params Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: &o23
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewArrayExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewArrayExpression.cs
    startLine: 131
  summary: Creates a new array expression of the specified type from the provided initializers.
  syntax:
    content:
      CSharp: public static NewArrayExpression NewArrayInit(Type type, params Expression[] initializers)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A Type that represents the element type of the array.
    - id: initializers
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The expressions used to create the array elements.
    return:
      id: NewArrayExpression
      type:
        id: System.Linq.Expressions.NewArrayExpression
        name: NewArrayExpression
        href: System.Linq.Expressions.NewArrayExpression.yml
      description: An instance of the [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml).
  id: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: NewArrayInit(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o23
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewArrayExpression.cs
    startLine: 142
  summary: Creates a new array expression of the specified type from the provided initializers.
  syntax:
    content:
      CSharp: public static NewArrayExpression NewArrayInit(Type type, IEnumerable<Expression> initializers)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A Type that represents the element type of the array.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The expressions used to create the array elements.
    return:
      id: NewArrayExpression
      type:
        id: System.Linq.Expressions.NewArrayExpression
        name: NewArrayExpression
        href: System.Linq.Expressions.NewArrayExpression.yml
      description: An instance of the [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml).
  id: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: NewArrayBounds(Type, params Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o23
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewArrayExpression.cs
    startLine: 198
  summary: Creates a [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml) that represents creating an array that has a specified rank.
  syntax:
    content:
      CSharp: public static NewArrayExpression NewArrayBounds(Type type, params Expression[] bounds)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) that represents the element type of the array.
    - id: bounds
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array that contains Expression objects to use to populate the Expressions collection.
    return:
      id: NewArrayExpression
      type:
        id: System.Linq.Expressions.NewArrayExpression
        name: NewArrayExpression
        href: System.Linq.Expressions.NewArrayExpression.yml
      description: A [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml) that has the [NodeType]() property equal to type and the [Expressions]() property set to the specified value.
  id: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: NewArrayBounds(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o23
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewArrayExpression.cs
    startLine: 210
  summary: Creates a [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml) that represents creating an array that has a specified rank.
  syntax:
    content:
      CSharp: public static NewArrayExpression NewArrayBounds(Type type, IEnumerable<Expression> bounds)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) that represents the element type of the array.
    - id: bounds
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An IEnumerable{T} that contains Expression objects to use to populate the Expressions collection.
    return:
      id: NewArrayExpression
      type:
        id: System.Linq.Expressions.NewArrayExpression
        name: NewArrayExpression
        href: System.Linq.Expressions.NewArrayExpression.yml
      description: A [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml) that has the [NodeType]() property equal to type and the [Expressions]() property set to the specified value.
  id: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  href: System.Linq.Expressions.Expression.yml
  name: New(ConstructorInfo)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  type: Method
  source:
    remote: &o24
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 137
  summary: Creates a new [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the specified constructor that takes no arguments.
  syntax:
    content:
      CSharp: public static NewExpression New(ConstructorInfo constructor)
    parameters:
    - id: constructor
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
      description: The [System.Reflection.ConstructorInfo]() to set the [Constructor]() property equal to.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [New]() and the [Constructor]() property set to the specified value.
  id: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: New(ConstructorInfo, params Expression[])
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: *o24
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 149
  summary: Creates a new [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the specified constructor that takes no arguments.
  syntax:
    content:
      CSharp: public static NewExpression New(ConstructorInfo constructor, params Expression[] arguments)
    parameters:
    - id: constructor
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
      description: The [System.Reflection.ConstructorInfo]() to set the [Constructor]() property equal to.
    - id: arguments
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the Arguments collection.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [New]() and the [Constructor]() and [Arguments]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: New(ConstructorInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o24
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 161
  summary: Creates a new [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the specified constructor that takes no arguments.
  syntax:
    content:
      CSharp: public static NewExpression New(ConstructorInfo constructor, IEnumerable<Expression> arguments)
    parameters:
    - id: constructor
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
      description: The [System.Reflection.ConstructorInfo]() to set the [Constructor]() property equal to.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the Arguments collection.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [New]() and the [Constructor]() and [Arguments]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  href: System.Linq.Expressions.Expression.yml
  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)
  type: Method
  source:
    remote: *o24
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 180
  summary: Creates a new [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the specified constructor with the specified arguments. The members that access the constructor initialized fields are specified.
  syntax:
    content:
      CSharp: public static NewExpression New(ConstructorInfo constructor, IEnumerable<Expression> arguments, IEnumerable<MemberInfo> members)
    parameters:
    - id: constructor
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
      description: The [System.Reflection.ConstructorInfo]() to set the [Constructor]() property equal to.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the Arguments collection.
    - id: members
      type:
        id: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
        name: IEnumerable<MemberInfo>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() of [System.Reflection.MemberInfo]() objects to use to populate the Members collection.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [New]() and the [Constructor](), [Arguments]() and [Members]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  href: System.Linq.Expressions.Expression.yml
  name: New(ConstructorInfo, IEnumerable<Expression>, params MemberInfo[])
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, params System.Reflection.MemberInfo[])
  type: Method
  source:
    remote: *o24
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 197
  summary: Creates a new [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the specified constructor with the specified arguments. The members that access the constructor initialized fields are specified.
  syntax:
    content:
      CSharp: public static NewExpression New(ConstructorInfo constructor, IEnumerable<Expression> arguments, params MemberInfo[] members)
    parameters:
    - id: constructor
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
      description: The [System.Reflection.ConstructorInfo]() to set the [Constructor]() property equal to.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: An [System.Collections.Generic.IEnumerable`1]() of [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) objects to use to populate the Arguments collection.
    - id: members
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
      description: An Array of [System.Reflection.MemberInfo]() objects to use to populate the Members collection.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [New]() and the [Constructor](), [Arguments]() and [Members]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
- uid: System.Linq.Expressions.Expression.New(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: New(Type)
  fullName: System.Linq.Expressions.Expression.New(System.Type)
  type: Method
  source:
    remote: *o24
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/NewExpression.cs
    startLine: 208
  summary: Creates a [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that represents calling the parameterless constructor of the specified type.
  syntax:
    content:
      CSharp: public static NewExpression New(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) that has a constructor that takes no arguments.
    return:
      id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: A [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to New and the Constructor property set to the ConstructorInfo that represents the parameterless constructor of the specified type.
  id: System.Linq.Expressions.Expression.New(System.Type)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Parameter(Type)
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)
  type: Method
  source:
    remote: &o25
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ParameterExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ParameterExpression.cs
    startLine: 187
  summary: Creates a [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node that can be used to identify a parameter or a variable in an expression tree.
  syntax:
    content:
      CSharp: public static ParameterExpression Parameter(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of the parameter or variable.
    return:
      id: ParameterExpression
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node with the specified name and type.
  id: System.Linq.Expressions.Expression.Parameter(System.Type)
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Variable(Type)
  fullName: System.Linq.Expressions.Expression.Variable(System.Type)
  type: Method
  source:
    remote: *o25
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ParameterExpression.cs
    startLine: 197
  summary: Creates a [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node that can be used to identify a parameter or a variable in an expression tree.
  syntax:
    content:
      CSharp: public static ParameterExpression Variable(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of the parameter or variable.
    return:
      id: ParameterExpression
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node with the specified name and type.
  id: System.Linq.Expressions.Expression.Variable(System.Type)
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Parameter(Type, string)
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, string)
  type: Method
  source:
    remote: *o25
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ParameterExpression.cs
    startLine: 208
  summary: Creates a [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node that can be used to identify a parameter or a variable in an expression tree.
  syntax:
    content:
      CSharp: public static ParameterExpression Parameter(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of the parameter or variable.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the parameter or variable, used for debugging or pretty printing purpose only.
    return:
      id: ParameterExpression
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node with the specified name and type.
  id: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  href: System.Linq.Expressions.Expression.yml
  name: Variable(Type, string)
  fullName: System.Linq.Expressions.Expression.Variable(System.Type, string)
  type: Method
  source:
    remote: *o25
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ParameterExpression.cs
    startLine: 232
  summary: Creates a [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node that can be used to identify a parameter or a variable in an expression tree.
  syntax:
    content:
      CSharp: public static ParameterExpression Variable(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The type of the parameter or variable.
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the parameter or variable, used for debugging or pretty printing purpose only.
    return:
      id: ParameterExpression
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: A [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) node with the specified name and type.
  id: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  href: System.Linq.Expressions.Expression.yml
  name: RuntimeVariables(params ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(params System.Linq.Expressions.ParameterExpression[])
  type: Method
  source:
    remote: &o26
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/RuntimeVariablesExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/RuntimeVariablesExpression.cs
    startLine: 86
  summary: Creates an instance of [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml).
  syntax:
    content:
      CSharp: public static RuntimeVariablesExpression RuntimeVariables(params ParameterExpression[] variables)
    parameters:
    - id: variables
      type:
        id: System.Array
        name: ParameterExpression[]
        isExternal: true
      description: An array of [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [System.Linq.Expressions.RuntimeVariablesExpression.Variables](System.Linq.Expressions.RuntimeVariablesExpression.yml) collection.
    return:
      id: RuntimeVariablesExpression
      type:
        id: System.Linq.Expressions.RuntimeVariablesExpression
        name: RuntimeVariablesExpression
        href: System.Linq.Expressions.RuntimeVariablesExpression.yml
      description: An instance of [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.RuntimeVariables](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.RuntimeVariablesExpression.Variables](System.Linq.Expressions.RuntimeVariablesExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.Expression.yml
  name: RuntimeVariables(IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o26
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/RuntimeVariablesExpression.cs
    startLine: 96
  summary: Creates an instance of [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml).
  syntax:
    content:
      CSharp: public static RuntimeVariablesExpression RuntimeVariables(IEnumerable<ParameterExpression> variables)
    parameters:
    - id: variables
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
      description: A collection of [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml) objects to use to populate the [System.Linq.Expressions.RuntimeVariablesExpression.Variables](System.Linq.Expressions.RuntimeVariablesExpression.yml) collection.
    return:
      id: RuntimeVariablesExpression
      type:
        id: System.Linq.Expressions.RuntimeVariablesExpression
        name: RuntimeVariablesExpression
        href: System.Linq.Expressions.RuntimeVariablesExpression.yml
      description: An instance of [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.RuntimeVariables](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.RuntimeVariablesExpression.Variables](System.Linq.Expressions.RuntimeVariablesExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  href: System.Linq.Expressions.Expression.yml
  name: SwitchCase(Expression, params Expression[])
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, params System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote: &o27
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 77
  summary: Creates a [SwitchCase]() for use in a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchCase SwitchCase(Expression body, params Expression[] testValues)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the case.
    - id: testValues
      type:
        id: System.Array
        name: Expression[]
        isExternal: true
      description: The test values of the case.
    return:
      id: SwitchCase
      type:
        id: System.Linq.Expressions.SwitchCase
        name: SwitchCase
        href: System.Linq.Expressions.SwitchCase.yml
      description: The created [SwitchCase]().
  id: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.Expression.yml
  name: SwitchCase(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o27
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 88
  summary: Creates a [SwitchCase]() for use in a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchCase SwitchCase(Expression body, IEnumerable<Expression> testValues)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the case.
    - id: testValues
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The test values of the case.
    return:
      id: SwitchCase
      type:
        id: System.Linq.Expressions.SwitchCase
        name: SwitchCase
        href: System.Linq.Expressions.SwitchCase.yml
      description: The created [SwitchCase]().
  id: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Expression, params SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, params System.Linq.Expressions.SwitchCase[])
  type: Method
  source:
    remote: &o28
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 132
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Expression switchValue, params SwitchCase[] cases)
    parameters:
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: cases
      type:
        id: System.Array
        name: SwitchCase[]
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Expression, Expression, params SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, params System.Linq.Expressions.SwitchCase[])
  type: Method
  source:
    remote: *o28
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 144
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Expression switchValue, Expression defaultBody, params SwitchCase[] cases)
    parameters:
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: defaultBody
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of the switch if no cases are matched.
    - id: cases
      type:
        id: System.Array
        name: SwitchCase[]
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Expression, Expression, MethodInfo, params SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.SwitchCase[])
  type: Method
  source:
    remote: *o28
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 157
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Expression switchValue, Expression defaultBody, MethodInfo comparison, params SwitchCase[] cases)
    parameters:
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: defaultBody
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of the switch if no cases are matched.
    - id: comparison
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The equality comparison method to use.
    - id: cases
      type:
        id: System.Array
        name: SwitchCase[]
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Type, Expression, Expression, MethodInfo, params SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.SwitchCase[])
  type: Method
  source:
    remote: *o28
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 171
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Type type, Expression switchValue, Expression defaultBody, MethodInfo comparison, params SwitchCase[] cases)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the switch.
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: defaultBody
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of the switch if no cases are matched.
    - id: comparison
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The equality comparison method to use.
    - id: cases
      type:
        id: System.Array
        name: SwitchCase[]
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  type: Method
  source:
    remote: *o28
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 184
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Expression switchValue, Expression defaultBody, MethodInfo comparison, IEnumerable<SwitchCase> cases)
    parameters:
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: defaultBody
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of the switch if no cases are matched.
    - id: comparison
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The equality comparison method to use.
    - id: cases
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
        name: IEnumerable<SwitchCase>
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  href: System.Linq.Expressions.Expression.yml
  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  type: Method
  source:
    remote: *o28
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchExpression.cs
    startLine: 198
  summary: Creates a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public static SwitchExpression Switch(Type type, Expression switchValue, Expression defaultBody, MethodInfo comparison, IEnumerable<SwitchCase> cases)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the switch.
    - id: switchValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The value to be tested against each case.
    - id: defaultBody
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The result of the switch if no cases are matched.
    - id: comparison
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The equality comparison method to use.
    - id: cases
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
        name: IEnumerable<SwitchCase>
        isExternal: true
      description: The valid cases for this switch.
    return:
      id: SwitchExpression
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The created [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  id: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  href: System.Linq.Expressions.Expression.yml
  name: SymbolDocument(string)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(string)
  type: Method
  source:
    remote: &o29
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 110
  summary: Creates an instance of [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml).
  syntax:
    content:
      CSharp: public static SymbolDocumentInfo SymbolDocument(string fileName)
    parameters:
    - id: fileName
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() to set the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    return:
      id: SymbolDocumentInfo
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: A [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that has the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.SymbolDocument(System.String)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  href: System.Linq.Expressions.Expression.yml
  name: SymbolDocument(string, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(string, System.Guid)
  type: Method
  source:
    remote: *o29
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 122
  summary: Creates an instance of [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml).
  syntax:
    content:
      CSharp: public static SymbolDocumentInfo SymbolDocument(string fileName, Guid language)
    parameters:
    - id: fileName
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() to set the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: language
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    return:
      id: SymbolDocumentInfo
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: >-
        A [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that has the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml) properties set to the specified value.
  id: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  href: System.Linq.Expressions.Expression.yml
  name: SymbolDocument(string, Guid, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(string, System.Guid, System.Guid)
  type: Method
  source:
    remote: *o29
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 136
  summary: Creates an instance of [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml).
  syntax:
    content:
      CSharp: public static SymbolDocumentInfo SymbolDocument(string fileName, Guid language, Guid languageVendor)
    parameters:
    - id: fileName
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() to set the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: language
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: languageVendor
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    return:
      id: SymbolDocumentInfo
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: >-
        A [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that has the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor](System.Linq.Expressions.SymbolDocumentInfo.yml) properties set to the specified value.
  id: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  href: System.Linq.Expressions.Expression.yml
  name: SymbolDocument(string, Guid, Guid, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(string, System.Guid, System.Guid, System.Guid)
  type: Method
  source:
    remote: *o29
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 152
  summary: Creates an instance of [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml).
  syntax:
    content:
      CSharp: public static SymbolDocumentInfo SymbolDocument(string fileName, Guid language, Guid languageVendor, Guid documentType)
    parameters:
    - id: fileName
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() to set the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: language
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: languageVendor
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    - id: documentType
      type:
        id: System.Guid
        name: Guid
        isExternal: true
      description: A [System.Guid]() to set the [System.Linq.Expressions.SymbolDocumentInfo.DocumentType](System.Linq.Expressions.SymbolDocumentInfo.yml) equal to.
    return:
      id: SymbolDocumentInfo
      type:
        id: System.Linq.Expressions.SymbolDocumentInfo
        name: SymbolDocumentInfo
        href: System.Linq.Expressions.SymbolDocumentInfo.yml
      description: >-
        A [System.Linq.Expressions.SymbolDocumentInfo](System.Linq.Expressions.SymbolDocumentInfo.yml) that has the [System.Linq.Expressions.SymbolDocumentInfo.FileName](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.Language](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor](System.Linq.Expressions.SymbolDocumentInfo.yml)

        and [System.Linq.Expressions.SymbolDocumentInfo.DocumentType](System.Linq.Expressions.SymbolDocumentInfo.yml) properties set to the specified value.
  id: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: TryFault(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: &o30
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
    startLine: 125
  summary: Creates a [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml) representing a try block with a fault block and no catch statements.
  syntax:
    content:
      CSharp: public static TryExpression TryFault(Expression body, Expression fault)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the try block.
    - id: fault
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the fault block.
    return:
      id: TryExpression
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The created [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  id: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: TryFinally(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o30
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
    startLine: 136
  summary: Creates a [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml) representing a try block with a finally block and no catch statements.
  syntax:
    content:
      CSharp: public static TryExpression TryFinally(Expression body, Expression finally)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the try block.
    - id: finally
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the finally block.
    return:
      id: TryExpression
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The created [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  id: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  href: System.Linq.Expressions.Expression.yml
  name: TryCatch(Expression, params CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, params System.Linq.Expressions.CatchBlock[])
  type: Method
  source:
    remote: *o30
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
    startLine: 147
  summary: Creates a [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml) representing a try block with any number of catch statements and neither a fault nor finally block.
  syntax:
    content:
      CSharp: public static TryExpression TryCatch(Expression body, params CatchBlock[] handlers)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the try block.
    - id: handlers
      type:
        id: System.Array
        name: CatchBlock[]
        isExternal: true
      description: The array of zero or more [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml)s representing the catch statements to be associated with the try block.
    return:
      id: TryExpression
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The created [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  id: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  href: System.Linq.Expressions.Expression.yml
  name: TryCatchFinally(Expression, Expression, params CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, params System.Linq.Expressions.CatchBlock[])
  type: Method
  source:
    remote: *o30
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
    startLine: 159
  summary: Creates a [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml) representing a try block with any number of catch statements and a finally block.
  syntax:
    content:
      CSharp: public static TryExpression TryCatchFinally(Expression body, Expression finally, params CatchBlock[] handlers)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the try block.
    - id: finally
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the finally block.
    - id: handlers
      type:
        id: System.Array
        name: CatchBlock[]
        isExternal: true
      description: The array of zero or more [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml)s representing the catch statements to be associated with the try block.
    return:
      id: TryExpression
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The created [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  id: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  href: System.Linq.Expressions.Expression.yml
  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)
  type: Method
  source:
    remote: *o30
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TryExpression.cs
    startLine: 173
  summary: Creates a [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml) representing a try block with the specified elements.
  syntax:
    content:
      CSharp: public static TryExpression MakeTry(Type type, Expression body, Expression finally, Expression fault, IEnumerable<CatchBlock> handlers)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The result type of the try expression. If null, bodh and all handlers must have identical type.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the try block.
    - id: finally
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the finally block. Pass null if the try block has no finally block associated with it.
    - id: fault
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The body of the t block. Pass null if the try block has no fault block associated with it.
    - id: handlers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock}
        name: IEnumerable<CatchBlock>
        isExternal: true
      description: A collection of [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml)s representing the catch statements to be associated with the try block.
    return:
      id: TryExpression
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The created [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  id: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: TypeIs(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: &o31
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/TypeBinaryExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TypeBinaryExpression.cs
    startLine: 200
  summary: Creates a [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml).
  syntax:
    content:
      CSharp: public static TypeBinaryExpression TypeIs(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.TypeBinaryExpression.TypeOperand](System.Linq.Expressions.TypeBinaryExpression.yml) property equal to.
    return:
      id: TypeBinaryExpression
      type:
        id: System.Linq.Expressions.TypeBinaryExpression
        name: TypeBinaryExpression
        href: System.Linq.Expressions.TypeBinaryExpression.yml
      description: A [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml) for which the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property is equal to [System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)](System.Linq.Expressions.Expression.yml) and for which the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) and [System.Linq.Expressions.TypeBinaryExpression.TypeOperand](System.Linq.Expressions.TypeBinaryExpression.yml) properties are set to the specified values.
  id: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: TypeEqual(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o31
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/TypeBinaryExpression.cs
    startLine: 215
  summary: Creates a [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml) that compares run-time type identity.
  syntax:
    content:
      CSharp: public static TypeBinaryExpression TypeEqual(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.TypeBinaryExpression.TypeOperand](System.Linq.Expressions.TypeBinaryExpression.yml) property equal to.
    return:
      id: TypeBinaryExpression
      type:
        id: System.Linq.Expressions.TypeBinaryExpression
        name: TypeBinaryExpression
        href: System.Linq.Expressions.TypeBinaryExpression.yml
      description: A [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml) for which the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property is equal to [System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)](System.Linq.Expressions.Expression.yml) and for which the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) and [System.Linq.Expressions.TypeBinaryExpression.TypeOperand](System.Linq.Expressions.TypeBinaryExpression.yml) properties are set to the specified values.
  id: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: MakeUnary(ExpressionType, Expression, Type)
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 317
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml), given an operand, by calling the appropriate factory method.
  syntax:
    content:
      CSharp: public static UnaryExpression MakeUnary(ExpressionType unaryType, Expression operand, Type type)
    parameters:
    - id: unaryType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The [System.Linq.Expressions.ExpressionType](System.Linq.Expressions.ExpressionType.yml) that specifies the type of unary operation.
    - id: operand
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the operand.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) that specifies the type to be converted to (pass null if not applicable).
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: The [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that results from calling the appropriate factory method.
  id: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 332
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml), given an operand and implementing method, by calling the appropriate factory method.
  syntax:
    content:
      CSharp: public static UnaryExpression MakeUnary(ExpressionType unaryType, Expression operand, Type type, MethodInfo method)
    parameters:
    - id: unaryType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
      description: The [System.Linq.Expressions.ExpressionType](System.Linq.Expressions.ExpressionType.yml) that specifies the type of unary operation.
    - id: operand
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that represents the operand.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) that specifies the type to be converted to (pass null if not applicable).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: The [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: The [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that results from calling the appropriate factory method.
  id: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Negate(Expression)
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 492
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an arithmetic negation operation.
  syntax:
    content:
      CSharp: public static UnaryExpression Negate(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [UnaryExpression.Operand]() property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Negate]() and the [UnaryExpression.Operand]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Negate(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 506
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an arithmetic negation operation.
  syntax:
    content:
      CSharp: public static UnaryExpression Negate(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [UnaryExpression.Operand]() property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [UnaryExpression.Method]() property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [Expression.NodeType]() property equal to [ExpressionType.Negate]() and the [UnaryExpression.Operand]() and [UnaryExpression.Method]() properties set to the specified value.
  id: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: UnaryPlus(Expression)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 527
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a unary plus operation.
  syntax:
    content:
      CSharp: public static UnaryExpression UnaryPlus(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.UnaryPlus](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: UnaryPlus(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 541
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a unary plus operation.
  syntax:
    content:
      CSharp: public static UnaryExpression UnaryPlus(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.UnaryPlus](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml)property set to the specified value.
  id: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: NegateChecked(Expression)
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 561
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an arithmetic negation operation that has overflow checking.
  syntax:
    content:
      CSharp: public static UnaryExpression NegateChecked(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.NegateChecked](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: NegateChecked(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 576
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an arithmetic negation operation that has overflow checking. The implementing method can be specified.
  syntax:
    content:
      CSharp: public static UnaryExpression NegateChecked(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.NegateChecked](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Not(Expression)
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 596
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a bitwise complement operation.
  syntax:
    content:
      CSharp: public static UnaryExpression Not(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Not](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Not(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 611
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a bitwise complement operation. The implementing method can be specified.
  syntax:
    content:
      CSharp: public static UnaryExpression Not(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Not](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: IsFalse(Expression)
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 635
  summary: Returns whether the expression evaluates to false.
  syntax:
    content:
      CSharp: public static UnaryExpression IsFalse(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to evaluate.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: IsFalse(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 646
  summary: Returns whether the expression evaluates to false.
  syntax:
    content:
      CSharp: public static UnaryExpression IsFalse(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to evaluate.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: IsTrue(Expression)
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 665
  summary: Returns whether the expression evaluates to true.
  syntax:
    content:
      CSharp: public static UnaryExpression IsTrue(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to evaluate.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: IsTrue(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 676
  summary: Returns whether the expression evaluates to true.
  syntax:
    content:
      CSharp: public static UnaryExpression IsTrue(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to evaluate.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: OnesComplement(Expression)
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 695
  summary: Returns the expression representing the ones complement.
  syntax:
    content:
      CSharp: public static UnaryExpression OnesComplement(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: OnesComplement(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 706
  summary: Returns the expression representing the ones complement.
  syntax:
    content:
      CSharp: public static UnaryExpression OnesComplement(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: TypeAs(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 726
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an explicit reference or boxing conversion where null is supplied if the conversion fails.
  syntax:
    content:
      CSharp: public static UnaryExpression TypeAs(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.TypeAs](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Unbox(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 745
  summary: Creates a  that represents an explicit unboxing.
  syntax:
    content:
      CSharp: public static UnaryExpression Unbox(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to unbox.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The new [System.Type]() of the expression.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: An instance of [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  id: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Convert(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 765
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a conversion operation.
  syntax:
    content:
      CSharp: public static UnaryExpression Convert(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Convert](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Convert(Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 781
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a conversion operation for which the implementing method is specified.
  syntax:
    content:
      CSharp: public static UnaryExpression Convert(Expression expression, Type type, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Convert](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml), [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml), and [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: ConvertChecked(Expression, Type)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 806
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a conversion operation that throws an exception if the target type is overflowed.
  syntax:
    content:
      CSharp: public static UnaryExpression ConvertChecked(Expression expression, Type type)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.ConvertChecked](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) and [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: ConvertChecked(Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 822
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a conversion operation that throws an exception if the target type is overflowed and for which the implementing method is specified.
  syntax:
    content:
      CSharp: public static UnaryExpression ConvertChecked(Expression expression, Type type, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type]() to set the [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml) property equal to.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() to set the [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.ConvertChecked](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml), [System.Linq.Expressions.Expression.Type](System.Linq.Expressions.Expression.yml), and [System.Linq.Expressions.UnaryExpression.Method](System.Linq.Expressions.UnaryExpression.yml) properties set to the specified values.
  id: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: ArrayLength(Expression)
  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 850
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents getting the length of a one-dimensional array.
  syntax:
    content:
      CSharp: public static UnaryExpression ArrayLength(Expression array)
    parameters:
    - id: array
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.ArrayLength](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to .
  id: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Quote(Expression)
  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 869
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents an expression that has a constant value of type [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
  syntax:
    content:
      CSharp: public static UnaryExpression Quote(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to set the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property equal to.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that has the [System.Linq.Expressions.Expression.NodeType](System.Linq.Expressions.Expression.yml) property equal to [System.Linq.Expressions.ExpressionType.Quote](System.Linq.Expressions.ExpressionType.yml) and the [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property set to the specified value.
  id: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Rethrow
  href: System.Linq.Expressions.Expression.yml
  name: Rethrow()
  fullName: System.Linq.Expressions.Expression.Rethrow()
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 881
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a rethrowing of an exception.
  syntax:
    content:
      CSharp: public static UnaryExpression Rethrow()
    parameters: []
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a rethrowing of an exception.
  id: System.Linq.Expressions.Expression.Rethrow
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Rethrow(Type)
  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 891
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a rethrowing of an exception with a given type.
  syntax:
    content:
      CSharp: public static UnaryExpression Rethrow(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The new [System.Type]() of the expression.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a rethrowing of an exception.
  id: System.Linq.Expressions.Expression.Rethrow(System.Type)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Throw(Expression)
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 901
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a throwing of an exception.
  syntax:
    content:
      CSharp: public static UnaryExpression Throw(Expression value)
    parameters:
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the exception.
  id: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  href: System.Linq.Expressions.Expression.yml
  name: Throw(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 912
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents a throwing of a value with a given type.
  syntax:
    content:
      CSharp: public static UnaryExpression Throw(Expression value, Type type)
    parameters:
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The new [System.Type]() of the expression.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the exception.
  id: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Increment(Expression)
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 930
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the incrementing of the expression by 1.
  syntax:
    content:
      CSharp: public static UnaryExpression Increment(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to increment.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the incremented expression.
  id: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Increment(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 941
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the incrementing of the expression by 1.
  syntax:
    content:
      CSharp: public static UnaryExpression Increment(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to increment.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the incremented expression.
  id: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: Decrement(Expression)
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 960
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the decrementing of the expression by 1.
  syntax:
    content:
      CSharp: public static UnaryExpression Decrement(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to decrement.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the decremented expression.
  id: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: Decrement(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 971
  summary: Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the decrementing of the expression by 1.
  syntax:
    content:
      CSharp: public static UnaryExpression Decrement(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to decrement.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the decremented expression.
  id: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: PreIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 991
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that increments the expression by 1

    and assigns the result back to the expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PreIncrementAssign(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: PreIncrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1003
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that increments the expression by 1

    and assigns the result back to the expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PreIncrementAssign(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: PreDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1014
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that decrements the expression by 1

    and assigns the result back to the expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PreDecrementAssign(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: PreDecrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1026
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that decrements the expression by 1

    and assigns the result back to the expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PreDecrementAssign(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: PostIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1037
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the assignment of the expression

    followed by a subsequent increment by 1 of the original expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PostIncrementAssign(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: PostIncrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1049
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the assignment of the expression

    followed by a subsequent increment by 1 of the original expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PostIncrementAssign(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.Expression.yml
  name: PostDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1060
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the assignment of the expression

    followed by a subsequent decrement by 1 of the original expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PostDecrementAssign(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  href: System.Linq.Expressions.Expression.yml
  name: PostDecrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  type: Method
  source:
    remote: *o32
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 1072
  summary: >-
    Creates a [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the assignment of the expression

    followed by a subsequent decrement by 1 of the original expression.
  syntax:
    content:
      CSharp: public static UnaryExpression PostDecrementAssign(Expression expression, MethodInfo method)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: An [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) to apply the operations on.
    - id: method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
      description: A [System.Reflection.MethodInfo]() that represents the implementing method.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: A [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml) that represents the resultant expression.
  id: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
