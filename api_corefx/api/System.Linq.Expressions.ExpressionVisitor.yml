items:
- uid: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 20
  summary: Represents a visitor or rewriter for expression trees.
  syntax:
    content:
      CSharp: public abstract class ExpressionVisitor
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Expressions.ExpressionVisitor
  children:
  - System.Linq.Expressions.ExpressionVisitor.#ctor
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
- uid: System.Linq.Expressions.ExpressionVisitor.#ctor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor()
  fullName: System.Linq.Expressions.ExpressionVisitor.ExpressionVisitor()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 25
  summary: Initializes a new instance of [System.Linq.Expressions.ExpressionVisitor](System.Linq.Expressions.ExpressionVisitor.yml).
  syntax:
    content:
      CSharp: protected ExpressionVisitor()
    parameters: []
  id: System.Linq.Expressions.ExpressionVisitor.#ctor
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 35
  summary: Dispatches the expression to one of the more specialized visit methods in this class.
  syntax:
    content:
      CSharp: public virtual Expression Visit(Expression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit(ReadOnlyCollection<Expression>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 50
  summary: Dispatches the list of expressions to one of the more specialized visit methods in this class.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<Expression> Visit(ReadOnlyCollection<Expression> nodes)
    parameters:
    - id: nodes
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
      description: The expressions to visit.
    return:
      id: ReadOnlyCollection
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
      description: >-
        The modified expression list, if any of the elements were modified;

        otherwise, returns the original expression list.
  id: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 92
  summary: Visits all nodes in the collection using a specified element visitor.
  syntax:
    content:
      CSharp: public static ReadOnlyCollection<T> Visit<T>(ReadOnlyCollection<T> nodes, Func<T, T> elementVisitor)
    parameters:
    - id: nodes
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{``0}
        name: ReadOnlyCollection<T>
        isExternal: true
      description: The nodes to visit.
    - id: elementVisitor
      type:
        id: System.Func{``0,``0}
        name: Func<T, T>
        isExternal: true
      description: >-
        A delegate that visits a single element,

        optionally replacing it with a new element.
    return:
      id: ReadOnlyCollection
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{``0}
        name: ReadOnlyCollection<T>
        isExternal: true
      description: >-
        The modified node list, if any of the elements were modified;

        otherwise, returns the original node list.
  id: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitAndConvert<T>(T, string)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 128
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content:
      CSharp: 'public T VisitAndConvert<T>(T node, string callerName)where T : Expression'
    parameters:
    - id: node
      type:
        id: T
        name: T
        href: T
      description: The expression to visit.
    - id: callerName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the calling method; used to report to report a better error message.
    return:
      id: T
      type:
        id: T
        name: T
        href: T
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, string)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 151
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content:
      CSharp: 'public ReadOnlyCollection<T> VisitAndConvert<T>(ReadOnlyCollection<T> nodes, string callerName)where T : Expression'
    parameters:
    - id: nodes
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{``0}
        name: ReadOnlyCollection<T>
        isExternal: true
      description: The expression to visit.
    - id: callerName
      type:
        id: System.String
        name: string
        isExternal: true
      description: The name of the calling method; used to report to report a better error message.
    return:
      id: ReadOnlyCollection
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{``0}
        name: ReadOnlyCollection<T>
        isExternal: true
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitBinary(BinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 189
  summary: Visits the children of the [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitBinary(BinaryExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.BinaryExpression
        name: BinaryExpression
        href: System.Linq.Expressions.BinaryExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitBlock(BlockExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 208
  summary: Visits the children of the [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitBlock(BlockExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.BlockExpression
        name: BlockExpression
        href: System.Linq.Expressions.BlockExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitConditional(ConditionalExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 252
  summary: Visits the children of the [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitConditional(ConditionalExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.ConditionalExpression
        name: ConditionalExpression
        href: System.Linq.Expressions.ConditionalExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitConstant(ConstantExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 263
  summary: Visits the [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitConstant(ConstantExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.ConstantExpression
        name: ConstantExpression
        href: System.Linq.Expressions.ConstantExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitDebugInfo(DebugInfoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 274
  summary: Visits the [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitDebugInfo(DebugInfoExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.DebugInfoExpression
        name: DebugInfoExpression
        href: System.Linq.Expressions.DebugInfoExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitDefault(DefaultExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 285
  summary: Visits the [System.Linq.Expressions.DefaultExpression](System.Linq.Expressions.DefaultExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitDefault(DefaultExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.DefaultExpression
        name: DefaultExpression
        href: System.Linq.Expressions.DefaultExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitExtension(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 302
  summary: Visits the children of the extension expression.
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitExtension(Expression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitGoto(GotoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 313
  summary: Visits the children of the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitGoto(GotoExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitInvocation(InvocationExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 324
  summary: Visits the children of the [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitInvocation(InvocationExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.InvocationExpression
        name: InvocationExpression
        href: System.Linq.Expressions.InvocationExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLabelTarget(LabelTarget)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 342
  summary: Visits the [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  syntax:
    content:
      CSharp: protected virtual LabelTarget VisitLabelTarget(LabelTarget node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The expression to visit.
    return:
      id: LabelTarget
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLabel(LabelExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 353
  summary: Visits the children of the [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitLabel(LabelExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.LabelExpression
        name: LabelExpression
        href: System.Linq.Expressions.LabelExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLambda<T>(Expression<T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 365
  summary: Visits the children of the [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitLambda<T>(Expression<T> node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.Expression{``0}
        name: Expression<T>
        href: System.Linq.Expressions.Expression{``0}
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLambda(LambdaExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 377
  summary: Visits the children of the [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitLambda(LambdaExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLoop(LoopExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 388
  summary: Visits the children of the [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitLoop(LoopExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.LoopExpression
        name: LoopExpression
        href: System.Linq.Expressions.LoopExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMember(MemberExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 399
  summary: Visits the children of the [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitMember(MemberExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitIndex(IndexExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 410
  summary: Visits the children of the [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitIndex(IndexExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMethodCall(MethodCallExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 428
  summary: Visits the children of the [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitMethodCall(MethodCallExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MethodCallExpression
        name: MethodCallExpression
        href: System.Linq.Expressions.MethodCallExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitNewArray(NewArrayExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 446
  summary: Visits the children of the [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitNewArray(NewArrayExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.NewArrayExpression
        name: NewArrayExpression
        href: System.Linq.Expressions.NewArrayExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitNew(NewExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 457
  summary: Visits the children of the [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitNew(NewExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitParameter(ParameterExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 469
  summary: Visits the [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitParameter(ParameterExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.ParameterExpression
        name: ParameterExpression
        href: System.Linq.Expressions.ParameterExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 480
  summary: Visits the children of the [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitRuntimeVariables(RuntimeVariablesExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.RuntimeVariablesExpression
        name: RuntimeVariablesExpression
        href: System.Linq.Expressions.RuntimeVariablesExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitSwitchCase(SwitchCase)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 491
  summary: Visits the children of the [System.Linq.Expressions.SwitchCase](System.Linq.Expressions.SwitchCase.yml).
  syntax:
    content:
      CSharp: protected virtual SwitchCase VisitSwitchCase(SwitchCase node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.SwitchCase
        name: SwitchCase
        href: System.Linq.Expressions.SwitchCase.yml
      description: The expression to visit.
    return:
      id: SwitchCase
      type:
        id: System.Linq.Expressions.SwitchCase
        name: SwitchCase
        href: System.Linq.Expressions.SwitchCase.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitSwitch(SwitchExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 502
  summary: Visits the children of the [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitSwitch(SwitchExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.SwitchExpression
        name: SwitchExpression
        href: System.Linq.Expressions.SwitchExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitCatchBlock(CatchBlock)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 520
  summary: Visits the children of the [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  syntax:
    content:
      CSharp: protected virtual CatchBlock VisitCatchBlock(CatchBlock node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: The expression to visit.
    return:
      id: CatchBlock
      type:
        id: System.Linq.Expressions.CatchBlock
        name: CatchBlock
        href: System.Linq.Expressions.CatchBlock.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitTry(TryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 531
  summary: Visits the children of the [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitTry(TryExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.TryExpression
        name: TryExpression
        href: System.Linq.Expressions.TryExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitTypeBinary(TypeBinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 547
  summary: Visits the children of the [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitTypeBinary(TypeBinaryExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.TypeBinaryExpression
        name: TypeBinaryExpression
        href: System.Linq.Expressions.TypeBinaryExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitUnary(UnaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 558
  summary: Visits the children of the [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitUnary(UnaryExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberInit(MemberInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 569
  summary: Visits the children of the [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitMemberInit(MemberInitExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberInitExpression
        name: MemberInitExpression
        href: System.Linq.Expressions.MemberInitExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitListInit(ListInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 583
  summary: Visits the children of the [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml).
  syntax:
    content:
      CSharp: protected internal virtual Expression VisitListInit(ListInitExpression node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: The expression to visit.
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitElementInit(ElementInit)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 597
  summary: Visits the children of the [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml).
  syntax:
    content:
      CSharp: protected virtual ElementInit VisitElementInit(ElementInit node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.ElementInit
        name: ElementInit
        href: System.Linq.Expressions.ElementInit.yml
      description: The expression to visit.
    return:
      id: ElementInit
      type:
        id: System.Linq.Expressions.ElementInit
        name: ElementInit
        href: System.Linq.Expressions.ElementInit.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberBinding(MemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 608
  summary: Visits the children of the [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml).
  syntax:
    content:
      CSharp: protected virtual MemberBinding VisitMemberBinding(MemberBinding node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberBinding
        name: MemberBinding
        href: System.Linq.Expressions.MemberBinding.yml
      description: The expression to visit.
    return:
      id: MemberBinding
      type:
        id: System.Linq.Expressions.MemberBinding
        name: MemberBinding
        href: System.Linq.Expressions.MemberBinding.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberAssignment(MemberAssignment)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 629
  summary: Visits the children of the [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml).
  syntax:
    content:
      CSharp: protected virtual MemberAssignment VisitMemberAssignment(MemberAssignment node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberAssignment
        name: MemberAssignment
        href: System.Linq.Expressions.MemberAssignment.yml
      description: The expression to visit.
    return:
      id: MemberAssignment
      type:
        id: System.Linq.Expressions.MemberAssignment
        name: MemberAssignment
        href: System.Linq.Expressions.MemberAssignment.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberMemberBinding(MemberMemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 640
  summary: Visits the children of the [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml).
  syntax:
    content:
      CSharp: protected virtual MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: The expression to visit.
    return:
      id: MemberMemberBinding
      type:
        id: System.Linq.Expressions.MemberMemberBinding
        name: MemberMemberBinding
        href: System.Linq.Expressions.MemberMemberBinding.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberListBinding(MemberListBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 651
  summary: Visits the children of the [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml).
  syntax:
    content:
      CSharp: protected virtual MemberListBinding VisitMemberListBinding(MemberListBinding node)
    parameters:
    - id: node
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: The expression to visit.
    return:
      id: MemberListBinding
      type:
        id: System.Linq.Expressions.MemberListBinding
        name: MemberListBinding
        href: System.Linq.Expressions.MemberListBinding.yml
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  id: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
