items:
- uid: System.Linq.Expressions.GotoExpression
  href: System.Linq.Expressions.GotoExpression.yml
  name: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 35
  summary: Represents an unconditional jump. This includes return statements, break and continue statements, and other jumps.
  syntax:
    content:
      CSharp: 'public sealed class GotoExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.GotoExpression
  children:
  - System.Linq.Expressions.GotoExpression.Type
  - System.Linq.Expressions.GotoExpression.NodeType
  - System.Linq.Expressions.GotoExpression.Value
  - System.Linq.Expressions.GotoExpression.Target
  - System.Linq.Expressions.GotoExpression.Kind
  - System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.GotoExpression.Type
  href: System.Linq.Expressions.GotoExpression.yml
  name: Type
  fullName: System.Linq.Expressions.GotoExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 55
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.GotoExpression.Type
- uid: System.Linq.Expressions.GotoExpression.NodeType
  href: System.Linq.Expressions.GotoExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.GotoExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 64
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.GotoExpression.NodeType
- uid: System.Linq.Expressions.GotoExpression.Value
  href: System.Linq.Expressions.GotoExpression.yml
  name: Value
  fullName: System.Linq.Expressions.GotoExpression.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 73
  summary: >-
    The value passed to the target, or null if the target is of type

    System.Void.
  syntax:
    content:
      CSharp: public Expression Value { get; }
    parameters:
    - id: Value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.GotoExpression.Value
- uid: System.Linq.Expressions.GotoExpression.Target
  href: System.Linq.Expressions.GotoExpression.yml
  name: Target
  fullName: System.Linq.Expressions.GotoExpression.Target
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 81
  summary: The target label where this node jumps to.
  syntax:
    content:
      CSharp: public LabelTarget Target { get; }
    parameters:
    - id: Target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
  id: System.Linq.Expressions.GotoExpression.Target
- uid: System.Linq.Expressions.GotoExpression.Kind
  href: System.Linq.Expressions.GotoExpression.yml
  name: Kind
  fullName: System.Linq.Expressions.GotoExpression.Kind
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 89
  summary: The kind of the goto. For information purposes only.
  syntax:
    content:
      CSharp: public GotoExpressionKind Kind { get; }
    parameters:
    - id: Kind
      type:
        id: System.Linq.Expressions.GotoExpressionKind
        name: GotoExpressionKind
        href: System.Linq.Expressions.GotoExpressionKind.yml
  id: System.Linq.Expressions.GotoExpression.Kind
- uid: System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.GotoExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 97
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.GotoExpression.yml
  name: Update(LabelTarget, Expression)
  fullName: System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/GotoExpression.cs
    startLine: 110
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public GotoExpression Update(LabelTarget target, Expression value)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.GotoExpression.Target](System.Linq.Expressions.GotoExpression.yml) property of the result.
    - id: value
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.GotoExpression.Value](System.Linq.Expressions.GotoExpression.yml) property of the result.
    return:
      id: GotoExpression
      type:
        id: System.Linq.Expressions.GotoExpression
        name: GotoExpression
        href: System.Linq.Expressions.GotoExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
