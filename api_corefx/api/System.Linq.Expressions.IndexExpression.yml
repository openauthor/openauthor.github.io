items:
- uid: System.Linq.Expressions.IndexExpression
  href: System.Linq.Expressions.IndexExpression.yml
  name: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 17
  summary: Represents indexing a property or array.
  syntax:
    content:
      CSharp: 'public sealed class IndexExpression : Expression, IArgumentProvider'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.IndexExpression
  children:
  - System.Linq.Expressions.IndexExpression.NodeType
  - System.Linq.Expressions.IndexExpression.Type
  - System.Linq.Expressions.IndexExpression.Object
  - System.Linq.Expressions.IndexExpression.Indexer
  - System.Linq.Expressions.IndexExpression.Arguments
  - System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.IndexExpression.GetArgument(System.Int32)
  - System.Linq.Expressions.IndexExpression.ArgumentCount
  - System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.IndexExpression.NodeType
  href: System.Linq.Expressions.IndexExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.IndexExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 44
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.IndexExpression.NodeType
- uid: System.Linq.Expressions.IndexExpression.Type
  href: System.Linq.Expressions.IndexExpression.yml
  name: Type
  fullName: System.Linq.Expressions.IndexExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 53
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.IndexExpression.Type
- uid: System.Linq.Expressions.IndexExpression.Object
  href: System.Linq.Expressions.IndexExpression.yml
  name: Object
  fullName: System.Linq.Expressions.IndexExpression.Object
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 68
  summary: An object to index.
  syntax:
    content:
      CSharp: public Expression Object { get; }
    parameters:
    - id: Object
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.IndexExpression.Object
- uid: System.Linq.Expressions.IndexExpression.Indexer
  href: System.Linq.Expressions.IndexExpression.yml
  name: Indexer
  fullName: System.Linq.Expressions.IndexExpression.Indexer
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 76
  summary: Gets the [System.Reflection.PropertyInfo]() for the property if the expression represents an indexed property, returns null otherwise.
  syntax:
    content:
      CSharp: public PropertyInfo Indexer { get; }
    parameters:
    - id: Indexer
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
  id: System.Linq.Expressions.IndexExpression.Indexer
- uid: System.Linq.Expressions.IndexExpression.Arguments
  href: System.Linq.Expressions.IndexExpression.yml
  name: Arguments
  fullName: System.Linq.Expressions.IndexExpression.Arguments
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 84
  summary: Gets the arguments to be used to index the property or array.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<Expression> Arguments { get; }
    parameters:
    - id: Arguments
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
  id: System.Linq.Expressions.IndexExpression.Arguments
- uid: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  href: System.Linq.Expressions.IndexExpression.yml
  name: Update(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 97
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public IndexExpression Update(Expression object, IEnumerable<Expression> arguments)
    parameters:
    - id: object
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.IndexExpression.Object](System.Linq.Expressions.IndexExpression.yml) property of the result.
    - id: arguments
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The [System.Linq.Expressions.IndexExpression.Arguments](System.Linq.Expressions.IndexExpression.yml) property of the result.
    return:
      id: IndexExpression
      type:
        id: System.Linq.Expressions.IndexExpression
        name: IndexExpression
        href: System.Linq.Expressions.IndexExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
- uid: System.Linq.Expressions.IndexExpression.GetArgument(System.Int32)
  href: System.Linq.Expressions.IndexExpression.yml
  name: GetArgument(int)
  fullName: System.Linq.Expressions.IndexExpression.GetArgument(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 106
  syntax:
    content:
      CSharp: public Expression GetArgument(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.IndexExpression.GetArgument(System.Int32)
- uid: System.Linq.Expressions.IndexExpression.ArgumentCount
  href: System.Linq.Expressions.IndexExpression.yml
  name: ArgumentCount
  fullName: System.Linq.Expressions.IndexExpression.ArgumentCount
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 111
  syntax:
    content:
      CSharp: public int ArgumentCount { get; }
    parameters:
    - id: ArgumentCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Expressions.IndexExpression.ArgumentCount
- uid: System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.IndexExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IndexExpression.cs
    startLine: 122
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
