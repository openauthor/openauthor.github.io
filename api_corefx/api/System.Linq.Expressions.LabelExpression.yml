items:
- uid: System.Linq.Expressions.LabelExpression
  href: System.Linq.Expressions.LabelExpression.yml
  name: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 14
  summary: >-
    Represents a label, which can be placed in any [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) context. If

    it is jumped to, it will get the value provided by the corresponding

    [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml). Otherwise, it gets the value in [System.Linq.Expressions.LabelExpression.DefaultValue](System.Linq.Expressions.LabelExpression.yml). If the

    [System.Linq.Expressions.LabelExpression.Type](System.Linq.Expressions.LabelExpression.yml) equals System.Void, no value should be provided.
  syntax:
    content:
      CSharp: 'public sealed class LabelExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LabelExpression
  children:
  - System.Linq.Expressions.LabelExpression.Type
  - System.Linq.Expressions.LabelExpression.NodeType
  - System.Linq.Expressions.LabelExpression.Target
  - System.Linq.Expressions.LabelExpression.DefaultValue
  - System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.LabelExpression.Type
  href: System.Linq.Expressions.LabelExpression.yml
  name: Type
  fullName: System.Linq.Expressions.LabelExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 30
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.LabelExpression.Type
- uid: System.Linq.Expressions.LabelExpression.NodeType
  href: System.Linq.Expressions.LabelExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.LabelExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 39
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.LabelExpression.NodeType
- uid: System.Linq.Expressions.LabelExpression.Target
  href: System.Linq.Expressions.LabelExpression.yml
  name: Target
  fullName: System.Linq.Expressions.LabelExpression.Target
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 47
  summary: The [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) which this label is associated with.
  syntax:
    content:
      CSharp: public LabelTarget Target { get; }
    parameters:
    - id: Target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
  id: System.Linq.Expressions.LabelExpression.Target
- uid: System.Linq.Expressions.LabelExpression.DefaultValue
  href: System.Linq.Expressions.LabelExpression.yml
  name: DefaultValue
  fullName: System.Linq.Expressions.LabelExpression.DefaultValue
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 56
  summary: >-
    The value of the [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml) when the label is reached through

    normal control flow (e.g. is not jumped to).
  syntax:
    content:
      CSharp: public Expression DefaultValue { get; }
    parameters:
    - id: DefaultValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LabelExpression.DefaultValue
- uid: System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.LabelExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 64
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.LabelExpression.yml
  name: Update(LabelTarget, Expression)
  fullName: System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LabelExpression.cs
    startLine: 77
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public LabelExpression Update(LabelTarget target, Expression defaultValue)
    parameters:
    - id: target
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LabelExpression.Target](System.Linq.Expressions.LabelExpression.yml) property of the result.
    - id: defaultValue
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.LabelExpression.DefaultValue](System.Linq.Expressions.LabelExpression.yml) property of the result.
    return:
      id: LabelExpression
      type:
        id: System.Linq.Expressions.LabelExpression
        name: LabelExpression
        href: System.Linq.Expressions.LabelExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
