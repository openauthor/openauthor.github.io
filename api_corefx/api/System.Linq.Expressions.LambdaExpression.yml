items:
- uid: System.Linq.Expressions.LambdaExpression
  href: System.Linq.Expressions.LambdaExpression.yml
  name: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 22
  summary: >-
    Creates a [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml) node.

    This captures a block of code that is similar to a .NET method body.
  syntax:
    content:
      CSharp: 'public abstract class LambdaExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LambdaExpression
  children:
  - System.Linq.Expressions.LambdaExpression.Type
  - System.Linq.Expressions.LambdaExpression.NodeType
  - System.Linq.Expressions.LambdaExpression.Parameters
  - System.Linq.Expressions.LambdaExpression.Name
  - System.Linq.Expressions.LambdaExpression.Body
  - System.Linq.Expressions.LambdaExpression.ReturnType
  - System.Linq.Expressions.LambdaExpression.TailCall
  - System.Linq.Expressions.LambdaExpression.Compile
  - System.Linq.Expressions.LambdaExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.LambdaExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
- uid: System.Linq.Expressions.LambdaExpression.Type
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Type
  fullName: System.Linq.Expressions.LambdaExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 52
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.LambdaExpression.Type
- uid: System.Linq.Expressions.LambdaExpression.NodeType
  href: System.Linq.Expressions.LambdaExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.LambdaExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 61
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.LambdaExpression.NodeType
- uid: System.Linq.Expressions.LambdaExpression.Parameters
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Parameters
  fullName: System.Linq.Expressions.LambdaExpression.Parameters
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 69
  summary: Gets the parameters of the lambda expression.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<ParameterExpression> Parameters { get; }
    parameters:
    - id: Parameters
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
        name: ReadOnlyCollection<ParameterExpression>
        isExternal: true
  id: System.Linq.Expressions.LambdaExpression.Parameters
- uid: System.Linq.Expressions.LambdaExpression.Name
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Name
  fullName: System.Linq.Expressions.LambdaExpression.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 78
  summary: Gets the name of the lambda expression.
  syntax:
    content:
      CSharp: public string Name { get; }
    parameters:
    - id: Name
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Linq.Expressions.LambdaExpression.Name
- uid: System.Linq.Expressions.LambdaExpression.Body
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Body
  fullName: System.Linq.Expressions.LambdaExpression.Body
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 86
  summary: Gets the body of the lambda expression.
  syntax:
    content:
      CSharp: public Expression Body { get; }
    parameters:
    - id: Body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LambdaExpression.Body
- uid: System.Linq.Expressions.LambdaExpression.ReturnType
  href: System.Linq.Expressions.LambdaExpression.yml
  name: ReturnType
  fullName: System.Linq.Expressions.LambdaExpression.ReturnType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 94
  summary: Gets the return type of the lambda expression.
  syntax:
    content:
      CSharp: public Type ReturnType { get; }
    parameters:
    - id: ReturnType
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.LambdaExpression.ReturnType
- uid: System.Linq.Expressions.LambdaExpression.TailCall
  href: System.Linq.Expressions.LambdaExpression.yml
  name: TailCall
  fullName: System.Linq.Expressions.LambdaExpression.TailCall
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 103
  summary: >-
    Gets the value that indicates if the lambda expression will be compiled with

    tail call optimization.
  syntax:
    content:
      CSharp: public bool TailCall { get; }
    parameters:
    - id: TailCall
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.LambdaExpression.TailCall
- uid: System.Linq.Expressions.LambdaExpression.Compile
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Compile()
  fullName: System.Linq.Expressions.LambdaExpression.Compile()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 112
  summary: Produces a delegate that represents the lambda expression.
  syntax:
    content:
      CSharp: public Delegate Compile()
    parameters: []
    return:
      id: Delegate
      type:
        id: System.Delegate
        name: Delegate
        isExternal: true
      description: A delegate containing the compiled version of the lambda.
  id: System.Linq.Expressions.LambdaExpression.Compile
- uid: System.Linq.Expressions.LambdaExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.LambdaExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 124
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LambdaExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.LambdaExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  href: System.Linq.Expressions.LambdaExpression.yml
  name: Update(Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.LambdaExpression.Update(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LambdaExpression.cs
    startLine: 129
  syntax:
    content:
      CSharp: public virtual LambdaExpression Update(Expression body, IEnumerable<ParameterExpression> parameters)
    parameters:
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
    - id: parameters
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
        name: IEnumerable<ParameterExpression>
        isExternal: true
    return:
      id: LambdaExpression
      type:
        id: System.Linq.Expressions.LambdaExpression
        name: LambdaExpression
        href: System.Linq.Expressions.LambdaExpression.yml
  id: System.Linq.Expressions.LambdaExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
