items:
- uid: System.Linq.Expressions.ListInitExpression
  href: System.Linq.Expressions.ListInitExpression.yml
  name: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 20
  summary: Represents a constructor call that has a collection initializer.
  syntax:
    content:
      CSharp: 'public sealed class ListInitExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ListInitExpression
  children:
  - System.Linq.Expressions.ListInitExpression.NodeType
  - System.Linq.Expressions.ListInitExpression.Type
  - System.Linq.Expressions.ListInitExpression.CanReduce
  - System.Linq.Expressions.ListInitExpression.NewExpression
  - System.Linq.Expressions.ListInitExpression.Initializers
  - System.Linq.Expressions.ListInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.ListInitExpression.Reduce
  - System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
- uid: System.Linq.Expressions.ListInitExpression.NodeType
  href: System.Linq.Expressions.ListInitExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.ListInitExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 36
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.ListInitExpression.NodeType
- uid: System.Linq.Expressions.ListInitExpression.Type
  href: System.Linq.Expressions.ListInitExpression.yml
  name: Type
  fullName: System.Linq.Expressions.ListInitExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 45
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.ListInitExpression.Type
- uid: System.Linq.Expressions.ListInitExpression.CanReduce
  href: System.Linq.Expressions.ListInitExpression.yml
  name: CanReduce
  fullName: System.Linq.Expressions.ListInitExpression.CanReduce
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 53
  summary: Gets a value that indicates whether the expression tree node can be reduced.
  syntax:
    content:
      CSharp: public override bool CanReduce { get; }
    parameters:
    - id: CanReduce
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.ListInitExpression.CanReduce
- uid: System.Linq.Expressions.ListInitExpression.NewExpression
  href: System.Linq.Expressions.ListInitExpression.yml
  name: NewExpression
  fullName: System.Linq.Expressions.ListInitExpression.NewExpression
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 64
  summary: Gets the expression that contains a call to the constructor of a collection type.
  syntax:
    content:
      CSharp: public NewExpression NewExpression { get; }
    parameters:
    - id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
  id: System.Linq.Expressions.ListInitExpression.NewExpression
- uid: System.Linq.Expressions.ListInitExpression.Initializers
  href: System.Linq.Expressions.ListInitExpression.yml
  name: Initializers
  fullName: System.Linq.Expressions.ListInitExpression.Initializers
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 72
  summary: Gets the element initializers that are used to initialize a collection.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<ElementInit> Initializers { get; }
    parameters:
    - id: Initializers
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit}
        name: ReadOnlyCollection<ElementInit>
        isExternal: true
  id: System.Linq.Expressions.ListInitExpression.Initializers
- uid: System.Linq.Expressions.ListInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.ListInitExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.ListInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 80
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.ListInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.ListInitExpression.Reduce
  href: System.Linq.Expressions.ListInitExpression.yml
  name: Reduce()
  fullName: System.Linq.Expressions.ListInitExpression.Reduce()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 92
  summary: >-
    Reduces the binary expression node to a simpler expression.

    If CanReduce returns true, this should return a valid expression.

    This method is allowed to return another node which itself

    must be reduced.
  syntax:
    content:
      CSharp: public override Expression Reduce()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.ListInitExpression.Reduce
- uid: System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  href: System.Linq.Expressions.ListInitExpression.yml
  name: Update(NewExpression, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ListInitExpression.cs
    startLine: 105
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public ListInitExpression Update(NewExpression newExpression, IEnumerable<ElementInit> initializers)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: The [System.Linq.Expressions.ListInitExpression.NewExpression](System.Linq.Expressions.ListInitExpression.yml) property of the result.
    - id: initializers
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
        name: IEnumerable<ElementInit>
        isExternal: true
      description: The [System.Linq.Expressions.ListInitExpression.Initializers](System.Linq.Expressions.ListInitExpression.yml) property of the result.
    return:
      id: ListInitExpression
      type:
        id: System.Linq.Expressions.ListInitExpression
        name: ListInitExpression
        href: System.Linq.Expressions.ListInitExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
