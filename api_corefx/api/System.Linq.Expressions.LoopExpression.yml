items:
- uid: System.Linq.Expressions.LoopExpression
  href: System.Linq.Expressions.LoopExpression.yml
  name: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 12
  summary: Represents an infinite loop. It can be exited with "break".
  syntax:
    content:
      CSharp: 'public sealed class LoopExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LoopExpression
  children:
  - System.Linq.Expressions.LoopExpression.Type
  - System.Linq.Expressions.LoopExpression.NodeType
  - System.Linq.Expressions.LoopExpression.Body
  - System.Linq.Expressions.LoopExpression.BreakLabel
  - System.Linq.Expressions.LoopExpression.ContinueLabel
  - System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.LoopExpression.Type
  href: System.Linq.Expressions.LoopExpression.yml
  name: Type
  fullName: System.Linq.Expressions.LoopExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 30
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents.
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.LoopExpression.Type
- uid: System.Linq.Expressions.LoopExpression.NodeType
  href: System.Linq.Expressions.LoopExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.LoopExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 40
  summary: >-
    Returns the node type of this Expression. Extension nodes should return

    ExpressionType.Extension when overriding this method.
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.LoopExpression.NodeType
- uid: System.Linq.Expressions.LoopExpression.Body
  href: System.Linq.Expressions.LoopExpression.yml
  name: Body
  fullName: System.Linq.Expressions.LoopExpression.Body
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 48
  summary: Gets the [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) that is the body of the loop.
  syntax:
    content:
      CSharp: public Expression Body { get; }
    parameters:
    - id: Body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LoopExpression.Body
- uid: System.Linq.Expressions.LoopExpression.BreakLabel
  href: System.Linq.Expressions.LoopExpression.yml
  name: BreakLabel
  fullName: System.Linq.Expressions.LoopExpression.BreakLabel
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 56
  summary: Gets the [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that is used by the loop body as a break statement target.
  syntax:
    content:
      CSharp: public LabelTarget BreakLabel { get; }
    parameters:
    - id: BreakLabel
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
  id: System.Linq.Expressions.LoopExpression.BreakLabel
- uid: System.Linq.Expressions.LoopExpression.ContinueLabel
  href: System.Linq.Expressions.LoopExpression.yml
  name: ContinueLabel
  fullName: System.Linq.Expressions.LoopExpression.ContinueLabel
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 64
  summary: Gets the [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml) that is used by the loop body as a continue statement target.
  syntax:
    content:
      CSharp: public LabelTarget ContinueLabel { get; }
    parameters:
    - id: ContinueLabel
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
  id: System.Linq.Expressions.LoopExpression.ContinueLabel
- uid: System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.LoopExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 72
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.LoopExpression.yml
  name: Update(LabelTarget, LabelTarget, Expression)
  fullName: System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/LoopExpression.cs
    startLine: 86
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public LoopExpression Update(LabelTarget breakLabel, LabelTarget continueLabel, Expression body)
    parameters:
    - id: breakLabel
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LoopExpression.BreakLabel](System.Linq.Expressions.LoopExpression.yml) property of the result.
    - id: continueLabel
      type:
        id: System.Linq.Expressions.LabelTarget
        name: LabelTarget
        href: System.Linq.Expressions.LabelTarget.yml
      description: The [System.Linq.Expressions.LoopExpression.ContinueLabel](System.Linq.Expressions.LoopExpression.yml) property of the result.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.LoopExpression.Body](System.Linq.Expressions.LoopExpression.yml) property of the result.
    return:
      id: LoopExpression
      type:
        id: System.Linq.Expressions.LoopExpression
        name: LoopExpression
        href: System.Linq.Expressions.LoopExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
