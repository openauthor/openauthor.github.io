items:
- uid: System.Linq.Expressions.MemberExpression
  href: System.Linq.Expressions.MemberExpression.yml
  name: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 13
  summary: Represents accessing a field or property.
  syntax:
    content:
      CSharp: 'public class MemberExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.MemberExpression
  children:
  - System.Linq.Expressions.MemberExpression.Member
  - System.Linq.Expressions.MemberExpression.Expression
  - System.Linq.Expressions.MemberExpression.NodeType
  - System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.MemberExpression.Member
  href: System.Linq.Expressions.MemberExpression.yml
  name: Member
  fullName: System.Linq.Expressions.MemberExpression.Member
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 21
  summary: Gets the field or property to be accessed.
  syntax:
    content:
      CSharp: public MemberInfo Member { get; }
    parameters:
    - id: Member
      type:
        id: System.Reflection.MemberInfo
        name: MemberInfo
        isExternal: true
  id: System.Linq.Expressions.MemberExpression.Member
- uid: System.Linq.Expressions.MemberExpression.Expression
  href: System.Linq.Expressions.MemberExpression.yml
  name: Expression
  fullName: System.Linq.Expressions.MemberExpression.Expression
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 29
  summary: Gets the containing object of the field or property.
  syntax:
    content:
      CSharp: public Expression Expression { get; }
    parameters:
    - id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.MemberExpression.Expression
- uid: System.Linq.Expressions.MemberExpression.NodeType
  href: System.Linq.Expressions.MemberExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.MemberExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 58
  summary: Returns the node type of this [System.Linq.Expressions.MemberExpression.Expression](System.Linq.Expressions.MemberExpression.yml). (Inherited from [System.Linq.Expressions.MemberExpression.Expression](System.Linq.Expressions.MemberExpression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.MemberExpression.NodeType
- uid: System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.MemberExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 71
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.MemberExpression.yml
  name: Update(Expression)
  fullName: System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberExpression.cs
    startLine: 83
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public MemberExpression Update(Expression expression)
    parameters:
    - id: expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.MemberExpression.Expression](System.Linq.Expressions.MemberExpression.yml) property of the result.
    return:
      id: MemberExpression
      type:
        id: System.Linq.Expressions.MemberExpression
        name: MemberExpression
        href: System.Linq.Expressions.MemberExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)
