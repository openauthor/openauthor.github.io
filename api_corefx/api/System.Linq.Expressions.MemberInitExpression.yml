items:
- uid: System.Linq.Expressions.MemberInitExpression
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 15
  summary: Represents calling a constructor and initializing one or more members of the new object.
  syntax:
    content:
      CSharp: 'public sealed class MemberInitExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.MemberInitExpression
  children:
  - System.Linq.Expressions.MemberInitExpression.Type
  - System.Linq.Expressions.MemberInitExpression.CanReduce
  - System.Linq.Expressions.MemberInitExpression.NodeType
  - System.Linq.Expressions.MemberInitExpression.NewExpression
  - System.Linq.Expressions.MemberInitExpression.Bindings
  - System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.MemberInitExpression.Reduce
  - System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
- uid: System.Linq.Expressions.MemberInitExpression.Type
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: Type
  fullName: System.Linq.Expressions.MemberInitExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 31
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents.
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.MemberInitExpression.Type
- uid: System.Linq.Expressions.MemberInitExpression.CanReduce
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: CanReduce
  fullName: System.Linq.Expressions.MemberInitExpression.CanReduce
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 39
  summary: Gets a value that indicates whether the expression tree node can be reduced.
  syntax:
    content:
      CSharp: public override bool CanReduce { get; }
    parameters:
    - id: CanReduce
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.MemberInitExpression.CanReduce
- uid: System.Linq.Expressions.MemberInitExpression.NodeType
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.MemberInitExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 52
  summary: >-
    Returns the node type of this Expression. Extension nodes should return

    ExpressionType.Extension when overriding this method.
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.MemberInitExpression.NodeType
- uid: System.Linq.Expressions.MemberInitExpression.NewExpression
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: NewExpression
  fullName: System.Linq.Expressions.MemberInitExpression.NewExpression
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 59
  summary: Gets the expression that represents the constructor call.
  syntax:
    content:
      CSharp: public NewExpression NewExpression { get; }
    parameters:
    - id: NewExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
  id: System.Linq.Expressions.MemberInitExpression.NewExpression
- uid: System.Linq.Expressions.MemberInitExpression.Bindings
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: Bindings
  fullName: System.Linq.Expressions.MemberInitExpression.Bindings
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 66
  summary: Gets the bindings that describe how to initialize the members of the newly created object.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<MemberBinding> Bindings { get; }
    parameters:
    - id: Bindings
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding}
        name: ReadOnlyCollection<MemberBinding>
        isExternal: true
  id: System.Linq.Expressions.MemberInitExpression.Bindings
- uid: System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 74
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.MemberInitExpression.Reduce
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: Reduce()
  fullName: System.Linq.Expressions.MemberInitExpression.Reduce()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 86
  summary: >-
    Reduces the [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml) to a simpler expression.

    If CanReduce returns true, this should return a valid expression.

    This method is allowed to return another node which itself

    must be reduced.
  syntax:
    content:
      CSharp: public override Expression Reduce()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.MemberInitExpression.Reduce
- uid: System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: Update(NewExpression, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/MemberInitExpression.cs
    startLine: 143
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public MemberInitExpression Update(NewExpression newExpression, IEnumerable<MemberBinding> bindings)
    parameters:
    - id: newExpression
      type:
        id: System.Linq.Expressions.NewExpression
        name: NewExpression
        href: System.Linq.Expressions.NewExpression.yml
      description: The [System.Linq.Expressions.MemberInitExpression.NewExpression](System.Linq.Expressions.MemberInitExpression.yml) property of the result.
    - id: bindings
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
        name: IEnumerable<MemberBinding>
        isExternal: true
      description: The [System.Linq.Expressions.MemberInitExpression.Bindings](System.Linq.Expressions.MemberInitExpression.yml) property of the result.
    return:
      id: MemberInitExpression
      type:
        id: System.Linq.Expressions.MemberInitExpression
        name: MemberInitExpression
        href: System.Linq.Expressions.MemberInitExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
