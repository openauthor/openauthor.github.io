items:
- uid: System.Linq.Expressions.SwitchCase
  href: System.Linq.Expressions.SwitchCase.yml
  name: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 14
  summary: Represents one case of a [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content:
      CSharp: public sealed class SwitchCase
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Expressions.SwitchCase
  children:
  - System.Linq.Expressions.SwitchCase.TestValues
  - System.Linq.Expressions.SwitchCase.Body
  - System.Linq.Expressions.SwitchCase.ToString
  - System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.SwitchCase.TestValues
  href: System.Linq.Expressions.SwitchCase.yml
  name: TestValues
  fullName: System.Linq.Expressions.SwitchCase.TestValues
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 29
  summary: Gets the values of this case. This case is selected for execution when the [System.Linq.Expressions.SwitchExpression.SwitchValue](System.Linq.Expressions.SwitchExpression.yml) matches any of these values.
  syntax:
    content:
      CSharp: public ReadOnlyCollection<Expression> TestValues { get; }
    parameters:
    - id: TestValues
      type:
        id: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
        name: ReadOnlyCollection<Expression>
        isExternal: true
  id: System.Linq.Expressions.SwitchCase.TestValues
- uid: System.Linq.Expressions.SwitchCase.Body
  href: System.Linq.Expressions.SwitchCase.yml
  name: Body
  fullName: System.Linq.Expressions.SwitchCase.Body
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 37
  summary: Gets the body of this case.
  syntax:
    content:
      CSharp: public Expression Body { get; }
    parameters:
    - id: Body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.SwitchCase.Body
- uid: System.Linq.Expressions.SwitchCase.ToString
  href: System.Linq.Expressions.SwitchCase.yml
  name: ToString()
  fullName: System.Linq.Expressions.SwitchCase.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 46
  summary: Returns a [System.String]() that represents the current [System.Object]().
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: A [System.String]() that represents the current [System.Object]().
  id: System.Linq.Expressions.SwitchCase.ToString
- uid: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.SwitchCase.yml
  name: Update(IEnumerable<Expression>, Expression)
  fullName: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SwitchCase.cs
    startLine: 59
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public SwitchCase Update(IEnumerable<Expression> testValues, Expression body)
    parameters:
    - id: testValues
      type:
        id: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
        name: IEnumerable<Expression>
        isExternal: true
      description: The [System.Linq.Expressions.SwitchCase.TestValues](System.Linq.Expressions.SwitchCase.yml) property of the result.
    - id: body
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.SwitchCase.Body](System.Linq.Expressions.SwitchCase.yml) property of the result.
    return:
      id: SwitchCase
      type:
        id: System.Linq.Expressions.SwitchCase
        name: SwitchCase
        href: System.Linq.Expressions.SwitchCase.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
