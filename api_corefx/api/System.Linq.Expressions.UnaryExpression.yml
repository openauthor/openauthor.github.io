items:
- uid: System.Linq.Expressions.UnaryExpression
  href: System.Linq.Expressions.UnaryExpression.yml
  name: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 14
  summary: Represents an expression that has a unary operator.
  syntax:
    content:
      CSharp: 'public sealed class UnaryExpression : Expression'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Linq.Expressions.Expression
    name: Expression
    href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.UnaryExpression
  children:
  - System.Linq.Expressions.UnaryExpression.Type
  - System.Linq.Expressions.UnaryExpression.NodeType
  - System.Linq.Expressions.UnaryExpression.Operand
  - System.Linq.Expressions.UnaryExpression.Method
  - System.Linq.Expressions.UnaryExpression.IsLifted
  - System.Linq.Expressions.UnaryExpression.IsLiftedToNull
  - System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.UnaryExpression.CanReduce
  - System.Linq.Expressions.UnaryExpression.Reduce
  - System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)
- uid: System.Linq.Expressions.UnaryExpression.Type
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Type
  fullName: System.Linq.Expressions.UnaryExpression.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 34
  summary: Gets the static type of the expression that this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml) represents. (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override Type Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Linq.Expressions.UnaryExpression.Type
- uid: System.Linq.Expressions.UnaryExpression.NodeType
  href: System.Linq.Expressions.UnaryExpression.yml
  name: NodeType
  fullName: System.Linq.Expressions.UnaryExpression.NodeType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 43
  summary: Returns the node type of this [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml). (Inherited from [System.Linq.Expressions.Expression](System.Linq.Expressions.Expression.yml).)
  syntax:
    content:
      CSharp: public sealed override ExpressionType NodeType { get; }
    parameters:
    - id: NodeType
      type:
        id: System.Linq.Expressions.ExpressionType
        name: ExpressionType
        href: System.Linq.Expressions.ExpressionType.yml
  id: System.Linq.Expressions.UnaryExpression.NodeType
- uid: System.Linq.Expressions.UnaryExpression.Operand
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Operand
  fullName: System.Linq.Expressions.UnaryExpression.Operand
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 52
  summary: Gets the operand of the unary operation.
  syntax:
    content:
      CSharp: public Expression Operand { get; }
    parameters:
    - id: Operand
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.UnaryExpression.Operand
- uid: System.Linq.Expressions.UnaryExpression.Method
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Method
  fullName: System.Linq.Expressions.UnaryExpression.Method
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 61
  summary: Gets the implementing method for the unary operation.
  syntax:
    content:
      CSharp: public MethodInfo Method { get; }
    parameters:
    - id: Method
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
  id: System.Linq.Expressions.UnaryExpression.Method
- uid: System.Linq.Expressions.UnaryExpression.IsLifted
  href: System.Linq.Expressions.UnaryExpression.yml
  name: IsLifted
  fullName: System.Linq.Expressions.UnaryExpression.IsLifted
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 70
  summary: Gets a value that indicates whether the expression tree node represents a lifted call to an operator.
  syntax:
    content:
      CSharp: public bool IsLifted { get; }
    parameters:
    - id: IsLifted
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.UnaryExpression.IsLifted
- uid: System.Linq.Expressions.UnaryExpression.IsLiftedToNull
  href: System.Linq.Expressions.UnaryExpression.yml
  name: IsLiftedToNull
  fullName: System.Linq.Expressions.UnaryExpression.IsLiftedToNull
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 93
  summary: Gets a value that indicates whether the expression tree node represents a lifted call to an operator whose return type is lifted to a nullable type.
  syntax:
    content:
      CSharp: public bool IsLiftedToNull { get; }
    parameters:
    - id: IsLiftedToNull
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.UnaryExpression.IsLiftedToNull
- uid: System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 104
  summary: Dispatches to the specific visit method for this node type.
  syntax:
    content:
      CSharp: protected internal override Expression Accept(ExpressionVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: System.Linq.Expressions.ExpressionVisitor
        name: ExpressionVisitor
        href: System.Linq.Expressions.ExpressionVisitor.yml
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
  id: System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
- uid: System.Linq.Expressions.UnaryExpression.CanReduce
  href: System.Linq.Expressions.UnaryExpression.yml
  name: CanReduce
  fullName: System.Linq.Expressions.UnaryExpression.CanReduce
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 112
  summary: Gets a value that indicates whether the expression tree node can be reduced.
  syntax:
    content:
      CSharp: public override bool CanReduce { get; }
    parameters:
    - id: CanReduce
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Expressions.UnaryExpression.CanReduce
- uid: System.Linq.Expressions.UnaryExpression.Reduce
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Reduce()
  fullName: System.Linq.Expressions.UnaryExpression.Reduce()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 135
  summary: >-
    Reduces the expression node to a simpler expression.

    If CanReduce returns true, this should return a valid expression.

    This method is allowed to return another node which itself

    must be reduced.
  syntax:
    content:
      CSharp: public override Expression Reduce()
    parameters: []
    return:
      id: Expression
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The reduced expression.
  id: System.Linq.Expressions.UnaryExpression.Reduce
- uid: System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)
  href: System.Linq.Expressions.UnaryExpression.yml
  name: Update(Expression)
  fullName: System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/UnaryExpression.cs
    startLine: 296
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content:
      CSharp: public UnaryExpression Update(Expression operand)
    parameters:
    - id: operand
      type:
        id: System.Linq.Expressions.Expression
        name: Expression
        href: System.Linq.Expressions.Expression.yml
      description: The [System.Linq.Expressions.UnaryExpression.Operand](System.Linq.Expressions.UnaryExpression.yml) property of the result.
    return:
      id: UnaryExpression
      type:
        id: System.Linq.Expressions.UnaryExpression
        name: UnaryExpression
        href: System.Linq.Expressions.UnaryExpression.yml
      description: This expression if no children changed, or an expression with the updated children.
  id: System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)
