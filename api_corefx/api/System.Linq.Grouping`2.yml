items:
- uid: System.Linq.Grouping`2
  href: System.Linq.Grouping`2.yml
  name: Grouping<TKey, TElement>
  fullName: System.Linq.Grouping<TKey, TElement>
  type: Class
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2653
  syntax:
    content:
      CSharp: 'public class Grouping<TKey, TElement> : IGrouping<TKey, TElement>, IList<TElement>, ICollection<TElement>, IEnumerable<TElement>, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Grouping`2
  children:
  - System.Linq.Grouping`2.GetEnumerator
  - System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  - System.Linq.Grouping`2.Key
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Count
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#IsReadOnly
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Add(`1)
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Clear
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Contains(`1)
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#CopyTo(`1[],System.Int32)
  - System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Remove(`1)
  - System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#IndexOf(`1)
  - System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Insert(System.Int32,`1)
  - System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#RemoveAt(System.Int32)
  - System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Item(System.Int32)
- uid: System.Linq.Grouping`2.GetEnumerator
  href: System.Linq.Grouping`2.yml
  name: GetEnumerator()
  fullName: System.Linq.Grouping<TKey, TElement>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2673
  syntax:
    content:
      CSharp: public IEnumerator<TElement> GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{`1}
        name: IEnumerator<TElement>
        isExternal: true
  id: System.Linq.Grouping`2.GetEnumerator
- uid: System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  href: System.Linq.Grouping`2.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2678
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
- uid: System.Linq.Grouping`2.Key
  href: System.Linq.Grouping`2.yml
  name: Key
  fullName: System.Linq.Grouping<TKey, TElement>.Key
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2685
  syntax:
    content:
      CSharp: public TKey Key { get; }
    parameters:
    - id: Key
      type:
        id: TKey
        name: TKey
        href: TKey
  id: System.Linq.Grouping`2.Key
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Count
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.Count
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2690
  syntax:
    content:
      CSharp: int ICollection<TElement>.Count { get; }
    parameters:
    - id: System.Collections.Generic.ICollection<TElement>.Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Count
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#IsReadOnly
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.IsReadOnly
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2695
  syntax:
    content:
      CSharp: bool ICollection<TElement>.IsReadOnly { get; }
    parameters:
    - id: System.Collections.Generic.ICollection<TElement>.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#IsReadOnly
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Add(`1)
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.Add(TElement)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.Add(TElement)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2700
  syntax:
    content:
      CSharp: void ICollection<TElement>.Add(TElement item)
    parameters:
    - id: item
      type:
        id: TElement
        name: TElement
        href: TElement
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Add(`1)
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Clear
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.Clear()
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2705
  syntax:
    content:
      CSharp: void ICollection<TElement>.Clear()
    parameters: []
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Clear
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Contains(`1)
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.Contains(TElement)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.Contains(TElement)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2710
  syntax:
    content:
      CSharp: bool ICollection<TElement>.Contains(TElement item)
    parameters:
    - id: item
      type:
        id: TElement
        name: TElement
        href: TElement
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Contains(`1)
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#CopyTo(`1[],System.Int32)
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.CopyTo(TElement[], int)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.CopyTo(TElement[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2715
  syntax:
    content:
      CSharp: void ICollection<TElement>.CopyTo(TElement[] array, int arrayIndex)
    parameters:
    - id: array
      type:
        id: System.Array
        name: TElement[]
        isExternal: true
    - id: arrayIndex
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#CopyTo(`1[],System.Int32)
- uid: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Remove(`1)
  href: System.Linq.Grouping`2.yml
  name: ICollection<TElement>.Remove(TElement)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.ICollection<TElement>.Remove(TElement)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2720
  syntax:
    content:
      CSharp: bool ICollection<TElement>.Remove(TElement item)
    parameters:
    - id: item
      type:
        id: TElement
        name: TElement
        href: TElement
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#ICollection{TElement}#Remove(`1)
- uid: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#IndexOf(`1)
  href: System.Linq.Grouping`2.yml
  name: IList<TElement>.IndexOf(TElement)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.IList<TElement>.IndexOf(TElement)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2725
  syntax:
    content:
      CSharp: int IList<TElement>.IndexOf(TElement item)
    parameters:
    - id: item
      type:
        id: TElement
        name: TElement
        href: TElement
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#IndexOf(`1)
- uid: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Insert(System.Int32,`1)
  href: System.Linq.Grouping`2.yml
  name: IList<TElement>.Insert(int, TElement)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.IList<TElement>.Insert(int, TElement)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2730
  syntax:
    content:
      CSharp: void IList<TElement>.Insert(int index, TElement item)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: item
      type:
        id: TElement
        name: TElement
        href: TElement
  id: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Insert(System.Int32,`1)
- uid: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#RemoveAt(System.Int32)
  href: System.Linq.Grouping`2.yml
  name: IList<TElement>.RemoveAt(int)
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.IList<TElement>.RemoveAt(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2735
  syntax:
    content:
      CSharp: void IList<TElement>.RemoveAt(int index)
    parameters:
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#RemoveAt(System.Int32)
- uid: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Item(System.Int32)
  href: System.Linq.Grouping`2.yml
  name: IList<TElement>.this[int]
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.Generic.IList<TElement>.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2740
  syntax:
    content:
      CSharp: TElement IList<TElement>.this[int index] { get; set; }
    parameters:
    - id: System.Collections.Generic.IList<TElement>.this[]
      type:
        id: TElement
        name: TElement
        href: TElement
  id: System.Linq.Grouping`2.System#Collections#Generic#IList{TElement}#Item(System.Int32)
