items:
- uid: System.Linq.Lookup`2
  href: System.Linq.Lookup`2.yml
  name: Lookup<TKey, TElement>
  fullName: System.Linq.Lookup<TKey, TElement>
  type: Class
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2502
  syntax:
    content:
      CSharp: 'public class Lookup<TKey, TElement> : ILookup<TKey, TElement>, IEnumerable<IGrouping<TKey, TElement>>, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Linq.Lookup`2
  children:
  - System.Linq.Lookup`2.Count
  - System.Linq.Lookup`2.Item(`0)
  - System.Linq.Lookup`2.Contains(`0)
  - System.Linq.Lookup`2.GetEnumerator
  - System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  - System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
- uid: System.Linq.Lookup`2.Count
  href: System.Linq.Lookup`2.yml
  name: Count
  fullName: System.Linq.Lookup<TKey, TElement>.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2540
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Linq.Lookup`2.Count
- uid: System.Linq.Lookup`2.Item(`0)
  href: System.Linq.Lookup`2.yml
  name: this[TKey]
  fullName: System.Linq.Lookup<TKey, TElement>.this[TKey]
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2545
  syntax:
    content:
      CSharp: public IEnumerable<TElement> this[TKey key] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Collections.Generic.IEnumerable{`1}
        name: IEnumerable<TElement>
        isExternal: true
  id: System.Linq.Lookup`2.Item(`0)
- uid: System.Linq.Lookup`2.Contains(`0)
  href: System.Linq.Lookup`2.yml
  name: Contains(TKey)
  fullName: System.Linq.Lookup<TKey, TElement>.Contains(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2555
  syntax:
    content:
      CSharp: public bool Contains(TKey key)
    parameters:
    - id: key
      type:
        id: TKey
        name: TKey
        href: TKey
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Linq.Lookup`2.Contains(`0)
- uid: System.Linq.Lookup`2.GetEnumerator
  href: System.Linq.Lookup`2.yml
  name: GetEnumerator()
  fullName: System.Linq.Lookup<TKey, TElement>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2560
  syntax:
    content:
      CSharp: public IEnumerator<IGrouping<TKey, TElement>> GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{System.Linq.IGrouping{`0,`1}}
        name: IEnumerator<IGrouping<TKey, TElement>>
        isExternal: true
  id: System.Linq.Lookup`2.GetEnumerator
- uid: System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  href: System.Linq.Lookup`2.yml
  name: ApplyResultSelector<TResult>(Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Lookup<TKey, TElement>.ApplyResultSelector<TResult>(System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2573
  syntax:
    content:
      CSharp: public IEnumerable<TResult> ApplyResultSelector<TResult>(Func<TKey, IEnumerable<TElement>, TResult> resultSelector)
    parameters:
    - id: resultSelector
      type:
        id: System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0}
        name: Func<TKey, IEnumerable<TElement>, TResult>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{``0}
        name: IEnumerable<TResult>
        isExternal: true
  id: System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
- uid: System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  href: System.Linq.Lookup`2.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Linq.Lookup<TKey, TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2587
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
