items:
- uid: System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: Complex
  fullName: System.Numerics.Complex
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 18
  syntax:
    content:
      CSharp: public struct Complex
  inheritance:
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Numerics.Complex
  children:
  - System.Numerics.Complex.Real
  - System.Numerics.Complex.Imaginary
  - System.Numerics.Complex.Magnitude
  - System.Numerics.Complex.Phase
  - System.Numerics.Complex.Zero
  - System.Numerics.Complex.One
  - System.Numerics.Complex.ImaginaryOne
  - System.Numerics.Complex.#ctor(Double,Double)
  - System.Numerics.Complex.FromPolarCoordinates(Double,Double)
  - System.Numerics.Complex.Negate(System.Numerics.Complex)
  - System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  - System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Abs(System.Numerics.Complex)
  - System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  - System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  - System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Equals(System.Object)
  - System.Numerics.Complex.Equals(System.Numerics.Complex)
  - System.Numerics.Complex.op_Implicit(Int16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(Int32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(Int64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(UInt16)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(UInt32)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(UInt64)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(SByte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(Byte)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(Single)~System.Numerics.Complex
  - System.Numerics.Complex.op_Implicit(Double)~System.Numerics.Complex
  - System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  - System.Numerics.Complex.op_Explicit(Decimal)~System.Numerics.Complex
  - System.Numerics.Complex.ToString
  - System.Numerics.Complex.ToString(String)
  - System.Numerics.Complex.ToString(IFormatProvider)
  - System.Numerics.Complex.ToString(String,IFormatProvider)
  - System.Numerics.Complex.GetHashCode
  - System.Numerics.Complex.Sin(System.Numerics.Complex)
  - System.Numerics.Complex.Sinh(System.Numerics.Complex)
  - System.Numerics.Complex.Asin(System.Numerics.Complex)
  - System.Numerics.Complex.Cos(System.Numerics.Complex)
  - System.Numerics.Complex.Cosh(System.Numerics.Complex)
  - System.Numerics.Complex.Acos(System.Numerics.Complex)
  - System.Numerics.Complex.Tan(System.Numerics.Complex)
  - System.Numerics.Complex.Tanh(System.Numerics.Complex)
  - System.Numerics.Complex.Atan(System.Numerics.Complex)
  - System.Numerics.Complex.Log(System.Numerics.Complex)
  - System.Numerics.Complex.Log(System.Numerics.Complex,Double)
  - System.Numerics.Complex.Log10(System.Numerics.Complex)
  - System.Numerics.Complex.Exp(System.Numerics.Complex)
  - System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  - System.Numerics.Complex.Pow(System.Numerics.Complex,Double)
- uid: System.Numerics.Complex.Real
  href: System.Numerics.Complex.yml
  name: Real
  fullName: System.Numerics.Complex.Real
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 32
  syntax:
    content:
      CSharp: public Double Real { get; }
    parameters:
    - id: Real
      type:
        id: Double
        name: Double
        isExternal: true
  id: System.Numerics.Complex.Real
- uid: System.Numerics.Complex.Imaginary
  href: System.Numerics.Complex.yml
  name: Imaginary
  fullName: System.Numerics.Complex.Imaginary
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 40
  syntax:
    content:
      CSharp: public Double Imaginary { get; }
    parameters:
    - id: Imaginary
      type:
        id: Double
        name: Double
        isExternal: true
  id: System.Numerics.Complex.Imaginary
- uid: System.Numerics.Complex.Magnitude
  href: System.Numerics.Complex.yml
  name: Magnitude
  fullName: System.Numerics.Complex.Magnitude
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 48
  syntax:
    content:
      CSharp: public Double Magnitude { get; }
    parameters:
    - id: Magnitude
      type:
        id: Double
        name: Double
        isExternal: true
  id: System.Numerics.Complex.Magnitude
- uid: System.Numerics.Complex.Phase
  href: System.Numerics.Complex.yml
  name: Phase
  fullName: System.Numerics.Complex.Phase
  type: Property
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 56
  syntax:
    content:
      CSharp: public Double Phase { get; }
    parameters:
    - id: Phase
      type:
        id: Double
        name: Double
        isExternal: true
  id: System.Numerics.Complex.Phase
- uid: System.Numerics.Complex.Zero
  href: System.Numerics.Complex.yml
  name: Zero
  fullName: System.Numerics.Complex.Zero
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 66
  syntax:
    content:
      CSharp: Zero
  id: System.Numerics.Complex.Zero
- uid: System.Numerics.Complex.One
  href: System.Numerics.Complex.yml
  name: One
  fullName: System.Numerics.Complex.One
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 67
  syntax:
    content:
      CSharp: One
  id: System.Numerics.Complex.One
- uid: System.Numerics.Complex.ImaginaryOne
  href: System.Numerics.Complex.yml
  name: ImaginaryOne
  fullName: System.Numerics.Complex.ImaginaryOne
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 68
  syntax:
    content:
      CSharp: ImaginaryOne
  id: System.Numerics.Complex.ImaginaryOne
- uid: System.Numerics.Complex.#ctor(Double,Double)
  href: System.Numerics.Complex.yml
  name: Complex(Double, Double)
  fullName: System.Numerics.Complex.Complex(Double, Double)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 72
  syntax:
    content:
      CSharp: public Complex(Double real, Double imaginary)
    parameters:
    - id: real
      type:
        id: Double
        name: Double
        isExternal: true
    - id: imaginary
      type:
        id: Double
        name: Double
        isExternal: true
  id: System.Numerics.Complex.#ctor(Double,Double)
- uid: System.Numerics.Complex.FromPolarCoordinates(Double,Double)
  href: System.Numerics.Complex.yml
  name: FromPolarCoordinates(Double, Double)
  fullName: System.Numerics.Complex.FromPolarCoordinates(Double, Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 78
  syntax:
    content:
      CSharp: public static Complex FromPolarCoordinates(Double magnitude, Double phase)
    parameters:
    - id: magnitude
      type:
        id: Double
        name: Double
        isExternal: true
    - id: phase
      type:
        id: Double
        name: Double
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.FromPolarCoordinates(Double,Double)
- uid: System.Numerics.Complex.Negate(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Negate(Complex)
  fullName: System.Numerics.Complex.Negate(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 83
  syntax:
    content:
      CSharp: public static Complex Negate(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Negate(System.Numerics.Complex)
- uid: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Add(Complex, Complex)
  fullName: System.Numerics.Complex.Add(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 88
  syntax:
    content:
      CSharp: public static Complex Add(Complex left, Complex right)
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Subtract(Complex, Complex)
  fullName: System.Numerics.Complex.Subtract(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 93
  syntax:
    content:
      CSharp: public static Complex Subtract(Complex left, Complex right)
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Multiply(Complex, Complex)
  fullName: System.Numerics.Complex.Multiply(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 98
  syntax:
    content:
      CSharp: public static Complex Multiply(Complex left, Complex right)
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Divide(Complex, Complex)
  fullName: System.Numerics.Complex.Divide(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 103
  syntax:
    content:
      CSharp: public static Complex Divide(Complex dividend, Complex divisor)
    parameters:
    - id: dividend
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: divisor
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator -(Complex)
  fullName: System.Numerics.Complex.operator -(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 109
  syntax:
    content:
      CSharp: public static Complex operator -(Complex value) /* Unary negation of a complex number */ { return (new Complex((-value._real), (-value._imaginary))); }
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator +(Complex, Complex)
  fullName: System.Numerics.Complex.operator +(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 115
  syntax:
    content:
      CSharp: public static Complex operator +(Complex left, Complex right) { return (new Complex((left._real + right._real), (left._imaginary + right._imaginary))); }
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator -(Complex, Complex)
  fullName: System.Numerics.Complex.operator -(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 120
  syntax:
    content:
      CSharp: public static Complex operator -(Complex left, Complex right) { return (new Complex((left._real - right._real), (left._imaginary - right._imaginary))); }
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator *(Complex, Complex)
  fullName: System.Numerics.Complex.operator *(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 125
  syntax:
    content:
      CSharp: 'public static Complex operator *(Complex left, Complex right) { // Multiplication: (a + bi)(c + di) = (ac -bd) + (bc + ad)i Double result_Realpart = (left._real * right._real) - (left._imaginary * right._imaginary); Double result_Imaginarypart = (left._imaginary * right._real) + (left._real * right._imaginary); return (new Complex(result_Realpart, result_Imaginarypart)); }'
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator /(Complex, Complex)
  fullName: System.Numerics.Complex.operator /(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 133
  syntax:
    content:
      CSharp: 'public static Complex operator /(Complex left, Complex right) { // Division : Smith''s formula. double a = left._real; double b = left._imaginary; double c = right._real; double d = right._imaginary; if (Math.Abs(d) < Math.Abs(c)) { double doc = d / c; return new Complex((a + b * doc) / (c + d * doc), (b - a * doc) / (c + d * doc)); } else { double cod = c / d; return new Complex((b + a * cod) / (d + c * cod), (-a + b * cod) / (d + c * cod)); } }'
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Abs(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Abs(Complex)
  fullName: System.Numerics.Complex.Abs(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 156
  syntax:
    content:
      CSharp: public static Double Abs(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Double
  id: System.Numerics.Complex.Abs(System.Numerics.Complex)
- uid: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Conjugate(Complex)
  fullName: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 186
  syntax:
    content:
      CSharp: public static Complex Conjugate(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Conjugate(System.Numerics.Complex)
- uid: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Reciprocal(Complex)
  fullName: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 192
  syntax:
    content:
      CSharp: public static Complex Reciprocal(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator ==(Complex, Complex)
  fullName: System.Numerics.Complex.operator ==(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 205
  syntax:
    content:
      CSharp: public static bool operator ==(Complex left, Complex right) { return ((left._real == right._real) && (left._imaginary == right._imaginary)); }
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Boolean
  id: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: operator !=(Complex, Complex)
  fullName: System.Numerics.Complex.operator !=(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 209
  syntax:
    content:
      CSharp: public static bool operator !=(Complex left, Complex right) { return ((left._real != right._real) || (left._imaginary != right._imaginary)); }
    parameters:
    - id: left
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: right
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Boolean
  id: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Equals(System.Object)
  href: System.Numerics.Complex.yml
  name: Equals(object)
  fullName: System.Numerics.Complex.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 216
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
  id: System.Numerics.Complex.Equals(System.Object)
- uid: System.Numerics.Complex.Equals(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Equals(Complex)
  fullName: System.Numerics.Complex.Equals(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 221
  syntax:
    content:
      CSharp: public bool Equals(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Boolean
  id: System.Numerics.Complex.Equals(System.Numerics.Complex)
- uid: System.Numerics.Complex.op_Implicit(Int16)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Int16)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Int16)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 228
  syntax:
    content:
      CSharp: public static implicit operator Complex(Int16 value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Int16
        name: Int16
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Int16)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(Int32)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Int32)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 232
  syntax:
    content:
      CSharp: public static implicit operator Complex(Int32 value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Int32
        name: Int32
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Int32)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(Int64)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Int64)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Int64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 236
  syntax:
    content:
      CSharp: public static implicit operator Complex(Int64 value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Int64
        name: Int64
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Int64)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(UInt16)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(UInt16)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(UInt16)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 240
  syntax:
    content:
      CSharp: '[CLSCompliant(false)] public static implicit operator Complex(UInt16 value) { return (new Complex(value, 0.0)); }'
    parameters:
    - id: value
      type:
        id: UInt16
        name: UInt16
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(UInt16)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(UInt32)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(UInt32)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(UInt32)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 245
  syntax:
    content:
      CSharp: '[CLSCompliant(false)] public static implicit operator Complex(UInt32 value) { return (new Complex(value, 0.0)); }'
    parameters:
    - id: value
      type:
        id: UInt32
        name: UInt32
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(UInt32)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(UInt64)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(UInt64)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(UInt64)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 250
  syntax:
    content:
      CSharp: '[CLSCompliant(false)] public static implicit operator Complex(UInt64 value) { return (new Complex(value, 0.0)); }'
    parameters:
    - id: value
      type:
        id: UInt64
        name: UInt64
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(UInt64)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(SByte)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(SByte)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(SByte)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 255
  syntax:
    content:
      CSharp: '[CLSCompliant(false)] public static implicit operator Complex(SByte value) { return (new Complex(value, 0.0)); }'
    parameters:
    - id: value
      type:
        id: SByte
        name: SByte
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(SByte)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(Byte)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Byte)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Byte)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 260
  syntax:
    content:
      CSharp: public static implicit operator Complex(Byte value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Byte
        name: Byte
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Byte)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(Single)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Single)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Single)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 264
  syntax:
    content:
      CSharp: public static implicit operator Complex(Single value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Single
        name: Single
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Single)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Implicit(Double)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: implicit operator Complex(Double)
  fullName: System.Numerics.Complex.implicit operator System.Numerics.Complex(Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 268
  syntax:
    content:
      CSharp: public static implicit operator Complex(Double value) { return (new Complex(value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Double
        name: Double
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Implicit(Double)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: explicit operator Complex(BigInteger)
  fullName: System.Numerics.Complex.explicit operator System.Numerics.Complex(System.Numerics.BigInteger)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 272
  syntax:
    content:
      CSharp: public static explicit operator Complex(BigInteger value) { return (new Complex((Double)value, 0.0)); }
    parameters:
    - id: value
      type:
        id: System.Numerics.BigInteger
        name: BigInteger
        href: System.Numerics.BigInteger.yml
    return:
      id: Complex
  id: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex
- uid: System.Numerics.Complex.op_Explicit(Decimal)~System.Numerics.Complex
  href: System.Numerics.Complex.yml
  name: explicit operator Complex(Decimal)
  fullName: System.Numerics.Complex.explicit operator System.Numerics.Complex(Decimal)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 276
  syntax:
    content:
      CSharp: public static explicit operator Complex(Decimal value) { return (new Complex((Double)value, 0.0)); }
    parameters:
    - id: value
      type:
        id: Decimal
        name: Decimal
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.op_Explicit(Decimal)~System.Numerics.Complex
- uid: System.Numerics.Complex.ToString
  href: System.Numerics.Complex.yml
  name: ToString()
  fullName: System.Numerics.Complex.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 284
  syntax:
    content:
      CSharp: public override String ToString()
    parameters: []
    return:
      id: String
  id: System.Numerics.Complex.ToString
- uid: System.Numerics.Complex.ToString(String)
  href: System.Numerics.Complex.yml
  name: ToString(String)
  fullName: System.Numerics.Complex.ToString(String)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 289
  syntax:
    content:
      CSharp: public String ToString(String format)
    parameters:
    - id: format
      type:
        id: String
        name: String
        isExternal: true
    return:
      id: String
  id: System.Numerics.Complex.ToString(String)
- uid: System.Numerics.Complex.ToString(IFormatProvider)
  href: System.Numerics.Complex.yml
  name: ToString(IFormatProvider)
  fullName: System.Numerics.Complex.ToString(IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 294
  syntax:
    content:
      CSharp: public String ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type:
        id: IFormatProvider
        name: IFormatProvider
        isExternal: true
    return:
      id: String
  id: System.Numerics.Complex.ToString(IFormatProvider)
- uid: System.Numerics.Complex.ToString(String,IFormatProvider)
  href: System.Numerics.Complex.yml
  name: ToString(String, IFormatProvider)
  fullName: System.Numerics.Complex.ToString(String, IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 299
  syntax:
    content:
      CSharp: public String ToString(String format, IFormatProvider provider)
    parameters:
    - id: format
      type:
        id: String
        name: String
        isExternal: true
    - id: provider
      type:
        id: IFormatProvider
        name: IFormatProvider
        isExternal: true
    return:
      id: String
  id: System.Numerics.Complex.ToString(String,IFormatProvider)
- uid: System.Numerics.Complex.GetHashCode
  href: System.Numerics.Complex.yml
  name: GetHashCode()
  fullName: System.Numerics.Complex.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 305
  syntax:
    content:
      CSharp: public override Int32 GetHashCode()
    parameters: []
    return:
      id: Int32
  id: System.Numerics.Complex.GetHashCode
- uid: System.Numerics.Complex.Sin(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Sin(Complex)
  fullName: System.Numerics.Complex.Sin(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 318
  syntax:
    content:
      CSharp: public static Complex Sin(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Sin(System.Numerics.Complex)
- uid: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Sinh(Complex)
  fullName: System.Numerics.Complex.Sinh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 325
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Sinh", Justification = "matell: Existing Name")] public static Complex Sinh(Complex value)'
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Sinh(System.Numerics.Complex)
- uid: System.Numerics.Complex.Asin(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Asin(Complex)
  fullName: System.Numerics.Complex.Asin(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 332
  syntax:
    content:
      CSharp: public static Complex Asin(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Asin(System.Numerics.Complex)
- uid: System.Numerics.Complex.Cos(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Cos(Complex)
  fullName: System.Numerics.Complex.Cos(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 341
  syntax:
    content:
      CSharp: public static Complex Cos(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Cos(System.Numerics.Complex)
- uid: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Cosh(Complex)
  fullName: System.Numerics.Complex.Cosh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 348
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Cosh", Justification = "matell: Existing Name")] public static Complex Cosh(Complex value)'
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Cosh(System.Numerics.Complex)
- uid: System.Numerics.Complex.Acos(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Acos(Complex)
  fullName: System.Numerics.Complex.Acos(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 355
  syntax:
    content:
      CSharp: public static Complex Acos(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Acos(System.Numerics.Complex)
- uid: System.Numerics.Complex.Tan(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Tan(Complex)
  fullName: System.Numerics.Complex.Tan(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 363
  syntax:
    content:
      CSharp: public static Complex Tan(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Tan(System.Numerics.Complex)
- uid: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Tanh(Complex)
  fullName: System.Numerics.Complex.Tanh(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 368
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Tanh", Justification = "matell: Existing Name")] public static Complex Tanh(Complex value)'
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Tanh(System.Numerics.Complex)
- uid: System.Numerics.Complex.Atan(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Atan(Complex)
  fullName: System.Numerics.Complex.Atan(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 373
  syntax:
    content:
      CSharp: public static Complex Atan(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Atan(System.Numerics.Complex)
- uid: System.Numerics.Complex.Log(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Log(Complex)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 381
  syntax:
    content:
      CSharp: public static Complex Log(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Log(System.Numerics.Complex)
- uid: System.Numerics.Complex.Log(System.Numerics.Complex,Double)
  href: System.Numerics.Complex.yml
  name: Log(Complex, Double)
  fullName: System.Numerics.Complex.Log(System.Numerics.Complex, Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 385
  syntax:
    content:
      CSharp: public static Complex Log(Complex value, Double baseValue)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: baseValue
      type:
        id: Double
        name: Double
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.Log(System.Numerics.Complex,Double)
- uid: System.Numerics.Complex.Log10(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Log10(Complex)
  fullName: System.Numerics.Complex.Log10(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 389
  syntax:
    content:
      CSharp: public static Complex Log10(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Log10(System.Numerics.Complex)
- uid: System.Numerics.Complex.Exp(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Exp(Complex)
  fullName: System.Numerics.Complex.Exp(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 394
  syntax:
    content:
      CSharp: public static Complex Exp(Complex value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Exp(System.Numerics.Complex)
- uid: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Sqrt(Complex)
  fullName: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 402
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId = "Sqrt", Justification = "matell: Existing Name")] public static Complex Sqrt(Complex value)'
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Sqrt(System.Numerics.Complex)
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
  href: System.Numerics.Complex.yml
  name: Pow(Complex, Complex)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, System.Numerics.Complex)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 408
  syntax:
    content:
      CSharp: public static Complex Pow(Complex value, Complex power)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: power
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    return:
      id: Complex
  id: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)
- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,Double)
  href: System.Numerics.Complex.yml
  name: Pow(Complex, Double)
  fullName: System.Numerics.Complex.Pow(System.Numerics.Complex, Double)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Numerics/src/System/Numerics/Complex.cs
    startLine: 434
  syntax:
    content:
      CSharp: public static Complex Pow(Complex value, Double power)
    parameters:
    - id: value
      type:
        id: System.Numerics.Complex
        name: Complex
        href: System.Numerics.Complex.yml
    - id: power
      type:
        id: Double
        name: Double
        isExternal: true
    return:
      id: Complex
  id: System.Numerics.Complex.Pow(System.Numerics.Complex,Double)
