items:
- uid: System.Numerics.Quaternion
  href: System.Numerics.Quaternion.yml
  name: Quaternion
  fullName: System.Numerics.Quaternion
  type: Struct
  source:
    remote: &o0
      path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 11
  summary: >-
    A structure encapsulating a four-dimensional vector (x,y,z,w),

    which is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where w = cos(theta/2).
  syntax:
    content:
      CSharp: 'public struct Quaternion : IEquatable<Quaternion>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Numerics.Quaternion
  children:
  - System.Numerics.Quaternion.X
  - System.Numerics.Quaternion.Y
  - System.Numerics.Quaternion.Z
  - System.Numerics.Quaternion.W
  - System.Numerics.Quaternion.Identity
  - System.Numerics.Quaternion.IsIdentity
  - System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.Length
  - System.Numerics.Quaternion.LengthSquared
  - System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  - System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  - System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  - System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  - System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  - System.Numerics.Quaternion.Equals(System.Object)
  - System.Numerics.Quaternion.ToString
  - System.Numerics.Quaternion.GetHashCode
- uid: System.Numerics.Quaternion.X
  href: System.Numerics.Quaternion.yml
  name: X
  fullName: System.Numerics.Quaternion.X
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 16
  summary: Specifies the X-value of the vector component of the Quaternion.
  syntax:
    content:
      CSharp: public float X;
  id: System.Numerics.Quaternion.X
- uid: System.Numerics.Quaternion.Y
  href: System.Numerics.Quaternion.yml
  name: Y
  fullName: System.Numerics.Quaternion.Y
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 20
  summary: Specifies the Y-value of the vector component of the Quaternion.
  syntax:
    content:
      CSharp: public float Y;
  id: System.Numerics.Quaternion.Y
- uid: System.Numerics.Quaternion.Z
  href: System.Numerics.Quaternion.yml
  name: Z
  fullName: System.Numerics.Quaternion.Z
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 24
  summary: Specifies the Z-value of the vector component of the Quaternion.
  syntax:
    content:
      CSharp: public float Z;
  id: System.Numerics.Quaternion.Z
- uid: System.Numerics.Quaternion.W
  href: System.Numerics.Quaternion.yml
  name: W
  fullName: System.Numerics.Quaternion.W
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 28
  summary: Specifies the rotation component of the Quaternion.
  syntax:
    content:
      CSharp: public float W;
  id: System.Numerics.Quaternion.W
- uid: System.Numerics.Quaternion.Identity
  href: System.Numerics.Quaternion.yml
  name: Identity
  fullName: System.Numerics.Quaternion.Identity
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 33
  summary: Returns a Quaternion representing no rotation.
  syntax:
    content:
      CSharp: public static Quaternion Identity { get; }
    parameters:
    - id: Identity
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
  id: System.Numerics.Quaternion.Identity
- uid: System.Numerics.Quaternion.IsIdentity
  href: System.Numerics.Quaternion.yml
  name: IsIdentity
  fullName: System.Numerics.Quaternion.IsIdentity
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 41
  summary: Returns whether the Quaternion is the identity Quaternion.
  syntax:
    content:
      CSharp: public bool IsIdentity { get; }
    parameters:
    - id: IsIdentity
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Numerics.Quaternion.IsIdentity
- uid: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  href: System.Numerics.Quaternion.yml
  name: Quaternion(float, float, float, float)
  fullName: System.Numerics.Quaternion.Quaternion(float, float, float, float)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 53
  summary: Constructs a Quaternion from the given components.
  syntax:
    content:
      CSharp: public Quaternion(float x, float y, float z, float w)
    parameters:
    - id: x
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The X component of the Quaternion.
    - id: y
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The Y component of the Quaternion.
    - id: z
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The Z component of the Quaternion.
    - id: w
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The W component of the Quaternion.
  id: System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
- uid: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
  href: System.Numerics.Quaternion.yml
  name: Quaternion(Vector3, float)
  fullName: System.Numerics.Quaternion.Quaternion(System.Numerics.Vector3, float)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 66
  summary: Constructs a Quaternion from the given vector and rotation parts.
  syntax:
    content:
      CSharp: public Quaternion(Vector3 vectorPart, float scalarPart)
    parameters:
    - id: vectorPart
      type:
        id: System.Numerics.Vector3
        name: Vector3
        href: System.Numerics.Vector3.yml
      description: The vector part of the Quaternion.
    - id: scalarPart
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The rotation part of the Quaternion.
  id: System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)
- uid: System.Numerics.Quaternion.Length
  href: System.Numerics.Quaternion.yml
  name: Length()
  fullName: System.Numerics.Quaternion.Length()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 78
  summary: Calculates the length of the Quaternion.
  syntax:
    content:
      CSharp: public float Length()
    parameters: []
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The computed length of the Quaternion.
  id: System.Numerics.Quaternion.Length
- uid: System.Numerics.Quaternion.LengthSquared
  href: System.Numerics.Quaternion.yml
  name: LengthSquared()
  fullName: System.Numerics.Quaternion.LengthSquared()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 89
  summary: Calculates the length squared of the Quaternion. This operation is cheaper than Length().
  syntax:
    content:
      CSharp: public float LengthSquared()
    parameters: []
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The length squared of the Quaternion.
  id: System.Numerics.Quaternion.LengthSquared
- uid: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Normalize(Quaternion)
  fullName: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 99
  summary: Divides each component of the Quaternion by the length of the Quaternion.
  syntax:
    content:
      CSharp: public static Quaternion Normalize(Quaternion value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The normalized Quaternion.
  id: System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Conjugate(Quaternion)
  fullName: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 120
  summary: Creates the conjugate of a specified Quaternion.
  syntax:
    content:
      CSharp: public static Quaternion Conjugate(Quaternion value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion of which to return the conjugate.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: A new Quaternion that is the conjugate of the specified one.
  id: System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Inverse(Quaternion)
  fullName: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 137
  summary: Returns the inverse of a Quaternion.
  syntax:
    content:
      CSharp: public static Quaternion Inverse(Quaternion value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The inverted Quaternion.
  id: System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
  href: System.Numerics.Quaternion.yml
  name: CreateFromAxisAngle(Vector3, float)
  fullName: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3, float)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 162
  summary: Creates a Quaternion from a vector and an angle to rotate about the vector.
  syntax:
    content:
      CSharp: public static Quaternion CreateFromAxisAngle(Vector3 axis, float angle)
    parameters:
    - id: axis
      type:
        id: System.Numerics.Vector3
        name: Vector3
        href: System.Numerics.Vector3.yml
      description: The vector to rotate around.
    - id: angle
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The angle, in radians, to rotate around the vector.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The created Quaternion.
  id: System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)
- uid: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
  href: System.Numerics.Quaternion.yml
  name: CreateFromYawPitchRoll(float, float, float)
  fullName: System.Numerics.Quaternion.CreateFromYawPitchRoll(float, float, float)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 185
  summary: Creates a new Quaternion from the given yaw, pitch, and roll, in radians.
  syntax:
    content:
      CSharp: public static Quaternion CreateFromYawPitchRoll(float yaw, float pitch, float roll)
    parameters:
    - id: yaw
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The yaw angle, in radians, around the Y-axis.
    - id: pitch
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The pitch angle, in radians, around the X-axis.
    - id: roll
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The roll angle, in radians, around the Z-axis.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
  id: System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)
- uid: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  href: System.Numerics.Quaternion.yml
  name: CreateFromRotationMatrix(Matrix4x4)
  fullName: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 218
  summary: Creates a Quaternion from the given rotation matrix.
  syntax:
    content:
      CSharp: public static Quaternion CreateFromRotationMatrix(Matrix4x4 matrix)
    parameters:
    - id: matrix
      type:
        id: System.Numerics.Matrix4x4
        name: Matrix4x4
        href: System.Numerics.Matrix4x4.yml
      description: The rotation matrix.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The created Quaternion.
  id: System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)
- uid: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Dot(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 273
  summary: Calculates the dot product of two Quaternions.
  syntax:
    content:
      CSharp: public static float Dot(Quaternion quaternion1, Quaternion quaternion2)
    parameters:
    - id: quaternion1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: quaternion2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second source Quaternion.
    return:
      id: Single
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The dot product of the Quaternions.
  id: System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  href: System.Numerics.Quaternion.yml
  name: Slerp(Quaternion, Quaternion, float)
  fullName: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion, System.Numerics.Quaternion, float)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 288
  summary: Interpolates between two quaternions, using spherical linear interpolation.
  syntax:
    content:
      CSharp: public static Quaternion Slerp(Quaternion quaternion1, Quaternion quaternion2, float amount)
    parameters:
    - id: quaternion1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: quaternion2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second source Quaternion.
    - id: amount
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The relative weight of the second source Quaternion in the interpolation.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The interpolated Quaternion.
  id: System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
- uid: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
  href: System.Numerics.Quaternion.yml
  name: Lerp(Quaternion, Quaternion, float)
  fullName: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion, System.Numerics.Quaternion, float)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 341
  summary: Linearly interpolates between two quaternions.
  syntax:
    content:
      CSharp: public static Quaternion Lerp(Quaternion quaternion1, Quaternion quaternion2, float amount)
    parameters:
    - id: quaternion1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: quaternion2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second source Quaternion.
    - id: amount
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The relative weight of the second source Quaternion in the interpolation.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The interpolated Quaternion.
  id: System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)
- uid: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Concatenate(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 384
  summary: Concatenates two Quaternions; the result represents the value1 rotation followed by the value2 rotation.
  syntax:
    content:
      CSharp: public static Quaternion Concatenate(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first Quaternion rotation in the series.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second Quaternion rotation in the series.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: A new Quaternion representing the concatenation of the value1 rotation followed by the value2 rotation.
  id: System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Negate(Quaternion)
  fullName: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 420
  summary: Flips the sign of each component of the quaternion.
  syntax:
    content:
      CSharp: public static Quaternion Negate(Quaternion value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The negated Quaternion.
  id: System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Add(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Add(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 438
  summary: Adds two Quaternions element-by-element.
  syntax:
    content:
      CSharp: public static Quaternion Add(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of adding the Quaternions.
  id: System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Subtract(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 456
  summary: Subtracts one Quaternion from another.
  syntax:
    content:
      CSharp: public static Quaternion Subtract(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second Quaternion, to be subtracted from the first.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the subtraction.
  id: System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Multiply(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 474
  summary: Multiplies two Quaternions together.
  syntax:
    content:
      CSharp: public static Quaternion Multiply(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion on the left side of the multiplication.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion on the right side of the multiplication.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the multiplication.
  id: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
  href: System.Numerics.Quaternion.yml
  name: Multiply(Quaternion, float)
  fullName: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion, float)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 509
  summary: Multiplies a Quaternion by a scalar value.
  syntax:
    content:
      CSharp: public static Quaternion Multiply(Quaternion value1, float value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    - id: value2
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The scalar value.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the multiplication.
  id: System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)
- uid: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Divide(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 527
  summary: Divides a Quaternion by another Quaternion.
  syntax:
    content:
      CSharp: public static Quaternion Divide(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The divisor.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the division.
  id: System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator -(Quaternion)
  fullName: System.Numerics.Quaternion.operator -(System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 570
  summary: Flips the sign of each component of the quaternion.
  syntax:
    content:
      CSharp: public static Quaternion operator -(Quaternion value)
    parameters:
    - id: value
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The negated Quaternion.
  id: System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator +(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator +(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 588
  summary: Adds two Quaternions element-by-element.
  syntax:
    content:
      CSharp: public static Quaternion operator +(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second source Quaternion.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of adding the Quaternions.
  id: System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator -(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator -(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 606
  summary: Subtracts one Quaternion from another.
  syntax:
    content:
      CSharp: public static Quaternion operator -(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second Quaternion, to be subtracted from the first.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the subtraction.
  id: System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator *(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator *(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 624
  summary: Multiplies two Quaternions together.
  syntax:
    content:
      CSharp: public static Quaternion operator *(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion on the left side of the multiplication.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion on the right side of the multiplication.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the multiplication.
  id: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
  href: System.Numerics.Quaternion.yml
  name: operator *(Quaternion, float)
  fullName: System.Numerics.Quaternion.operator *(System.Numerics.Quaternion, float)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 659
  summary: Multiplies a Quaternion by a scalar value.
  syntax:
    content:
      CSharp: public static Quaternion operator *(Quaternion value1, float value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    - id: value2
      type:
        id: System.Single
        name: float
        isExternal: true
      description: The scalar value.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the multiplication.
  id: System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)
- uid: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator /(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator /(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 677
  summary: Divides a Quaternion by another Quaternion.
  syntax:
    content:
      CSharp: public static Quaternion operator /(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The source Quaternion.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The divisor.
    return:
      id: Quaternion
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The result of the division.
  id: System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator ==(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator ==(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 721
  summary: Returns a boolean indicating whether the two given Quaternions are equal.
  syntax:
    content:
      CSharp: public static bool operator ==(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first Quaternion to compare.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second Quaternion to compare.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: True if the Quaternions are equal; False otherwise.
  id: System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: operator !=(Quaternion, Quaternion)
  fullName: System.Numerics.Quaternion.operator !=(System.Numerics.Quaternion, System.Numerics.Quaternion)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 735
  summary: Returns a boolean indicating whether the two given Quaternions are not equal.
  syntax:
    content:
      CSharp: public static bool operator !=(Quaternion value1, Quaternion value2)
    parameters:
    - id: value1
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The first Quaternion to compare.
    - id: value2
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The second Quaternion to compare.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: True if the Quaternions are not equal; False if they are equal.
  id: System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  href: System.Numerics.Quaternion.yml
  name: Equals(Quaternion)
  fullName: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 748
  summary: Returns a boolean indicating whether the given Quaternion is equal to this Quaternion instance.
  syntax:
    content:
      CSharp: public bool Equals(Quaternion other)
    parameters:
    - id: other
      type:
        id: System.Numerics.Quaternion
        name: Quaternion
        href: System.Numerics.Quaternion.yml
      description: The Quaternion to compare this instance to.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: True if the other Quaternion is equal to this instance; False otherwise.
  id: System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)
- uid: System.Numerics.Quaternion.Equals(System.Object)
  href: System.Numerics.Quaternion.yml
  name: Equals(object)
  fullName: System.Numerics.Quaternion.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 761
  summary: Returns a boolean indicating whether the given Object is equal to this Quaternion instance.
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The Object to compare against.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: True if the Object is equal to this Quaternion; False otherwise.
  id: System.Numerics.Quaternion.Equals(System.Object)
- uid: System.Numerics.Quaternion.ToString
  href: System.Numerics.Quaternion.yml
  name: ToString()
  fullName: System.Numerics.Quaternion.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 775
  summary: Returns a String representing this Quaternion instance.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: The string representation.
  id: System.Numerics.Quaternion.ToString
- uid: System.Numerics.Quaternion.GetHashCode
  href: System.Numerics.Quaternion.yml
  name: GetHashCode()
  fullName: System.Numerics.Quaternion.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Quaternion.cs
    startLine: 786
  summary: Returns the hash code for this instance.
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The hash code.
  id: System.Numerics.Quaternion.GetHashCode
