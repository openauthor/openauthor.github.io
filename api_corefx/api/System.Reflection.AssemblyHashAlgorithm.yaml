id: System.Reflection.AssemblyHashAlgorithm
href: System.Reflection.AssemblyHashAlgorithm.yaml
name:
  CSharp: AssemblyHashAlgorithm
qualifiedName:
  CSharp: System.Reflection.AssemblyHashAlgorithm
type: Enum
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
  startLine: 157
summary: Specifies all the hash algorithms used for hashing assembly files and for generating the strong name.
syntax:
  content:
    CSharp: public enum AssemblyHashAlgorithm
inheritance:
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: System.Reflection.AssemblyHashAlgorithm.None
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: None
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.None
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 162
  summary: A mask indicating that there is no hash algorithm. If you specify None for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.
  syntax:
    content:
      CSharp: None = 0
- id: System.Reflection.AssemblyHashAlgorithm.MD5
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: MD5
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.MD5
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 167
  summary: Retrieves the MD5 message-digest algorithm. MD5 was developed by Rivest in 1991. It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security. The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4. Message-digest size, as well as padding requirements, remain the same.
  syntax:
    content:
      CSharp: MD5 = 0x8003
- id: System.Reflection.AssemblyHashAlgorithm.Sha1
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: Sha1
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.Sha1
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 172
  summary: Retrieves a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.
  syntax:
    content:
      CSharp: Sha1 = 0x8004
- id: System.Reflection.AssemblyHashAlgorithm.Sha256
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: Sha256
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.Sha256
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 177
  summary: Retrieves a version of the Secure Hash Algorithm with a hash size of 256 bits.
  syntax:
    content:
      CSharp: Sha256 = 0x800c
- id: System.Reflection.AssemblyHashAlgorithm.Sha384
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: Sha384
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.Sha384
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 182
  summary: Retrieves a version of the Secure Hash Algorithm with a hash size of 384 bits.
  syntax:
    content:
      CSharp: Sha384 = 0x800d
- id: System.Reflection.AssemblyHashAlgorithm.Sha512
  href: System.Reflection.AssemblyHashAlgorithm.yaml
  name:
    CSharp: Sha512
  qualifiedName:
    CSharp: System.Reflection.AssemblyHashAlgorithm.Sha512
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/System.Reflection.cs
    startLine: 187
  summary: Retrieves a version of the Secure Hash Algorithm with a hash size of 512 bits.
  syntax:
    content:
      CSharp: Sha512 = 0x800e
