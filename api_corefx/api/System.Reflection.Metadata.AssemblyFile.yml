items:
- uid: System.Reflection.Metadata.AssemblyFile
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: AssemblyFile
  fullName: System.Reflection.Metadata.AssemblyFile
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 7
  syntax:
    content:
      CSharp: public struct AssemblyFile
  inheritance:
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Reflection.Metadata.AssemblyFile
  children:
  - System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  - System.Reflection.Metadata.AssemblyFile.Name
  - System.Reflection.Metadata.AssemblyFile.HashValue
  - System.Reflection.Metadata.AssemblyFile.GetCustomAttributes
- uid: System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: ContainsMetadata
  fullName: System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 34
  summary: True if the file contains metadata.
  syntax:
    content:
      CSharp: public bool ContainsMetadata { get; }
    parameters:
    - id: ContainsMetadata
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.Reflection.Metadata.AssemblyFile.ContainsMetadata
- uid: System.Reflection.Metadata.AssemblyFile.Name
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: Name
  fullName: System.Reflection.Metadata.AssemblyFile.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 45
  summary: File name with extension.
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yml
  id: System.Reflection.Metadata.AssemblyFile.Name
- uid: System.Reflection.Metadata.AssemblyFile.HashValue
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: HashValue
  fullName: System.Reflection.Metadata.AssemblyFile.HashValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 56
  summary: Hash value of the file content calculated using [System.Reflection.Metadata.AssemblyDefinition.HashAlgorithm](System.Reflection.Metadata.AssemblyDefinition.yml).
  syntax:
    content:
      CSharp: public BlobHandle HashValue { get; }
    parameters:
    - id: HashValue
      type:
        id: System.Reflection.Metadata.BlobHandle
        name: BlobHandle
        href: System.Reflection.Metadata.BlobHandle.yml
  id: System.Reflection.Metadata.AssemblyFile.HashValue
- uid: System.Reflection.Metadata.AssemblyFile.GetCustomAttributes
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: GetCustomAttributes()
  fullName: System.Reflection.Metadata.AssemblyFile.GetCustomAttributes()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 61
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
  id: System.Reflection.Metadata.AssemblyFile.GetCustomAttributes
