id: System.Reflection.Metadata.AssemblyReference
href: System.Reflection.Metadata.AssemblyReference.yaml
name:
  CSharp: AssemblyReference
qualifiedName:
  CSharp: System.Reflection.Metadata.AssemblyReference
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
  startLine: 8
syntax:
  content:
    CSharp: public struct AssemblyReference
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.AssemblyReference.Version
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: Version
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.Version
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 39
  syntax:
    content:
      CSharp: public Version Version { get; }
    parameters:
    - id: Version
      type:
        id: Version
        name: Version
        isExternal: true
- id: System.Reflection.Metadata.AssemblyReference.Flags
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: Flags
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.Flags
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 58
  syntax:
    content:
      CSharp: public AssemblyFlags Flags { get; }
    parameters:
    - id: Flags
      type:
        id: System.Reflection.AssemblyFlags
        name: AssemblyFlags
        href: System.Reflection.AssemblyFlags.yaml
- id: System.Reflection.Metadata.AssemblyReference.Name
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 71
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.AssemblyReference.Culture
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: Culture
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.Culture
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 84
  syntax:
    content:
      CSharp: public StringHandle Culture { get; }
    parameters:
    - id: Culture
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.AssemblyReference.PublicKeyOrToken
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: PublicKeyOrToken
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.PublicKeyOrToken
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 97
  syntax:
    content:
      CSharp: public BlobHandle PublicKeyOrToken { get; }
    parameters:
    - id: PublicKeyOrToken
      type:
        id: System.Reflection.Metadata.BlobHandle
        name: BlobHandle
        href: System.Reflection.Metadata.BlobHandle.yaml
- id: System.Reflection.Metadata.AssemblyReference.HashValue
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: HashValue
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.HashValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 110
  syntax:
    content:
      CSharp: public BlobHandle HashValue { get; }
    parameters:
    - id: HashValue
      type:
        id: System.Reflection.Metadata.BlobHandle
        name: BlobHandle
        href: System.Reflection.Metadata.BlobHandle.yaml
- id: System.Reflection.Metadata.AssemblyReference.GetCustomAttributes
  href: System.Reflection.Metadata.AssemblyReference.yaml
  name:
    CSharp: GetCustomAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.AssemblyReference.GetCustomAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyReference.cs
    startLine: 123
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
