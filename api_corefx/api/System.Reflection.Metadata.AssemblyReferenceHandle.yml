items:
- uid: System.Reflection.Metadata.AssemblyReferenceHandle
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: AssemblyReferenceHandle
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1371
  syntax:
    content:
      CSharp: public struct AssemblyReferenceHandle
  inheritance:
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Reflection.Metadata.AssemblyReferenceHandle
  children:
  - System.Reflection.Metadata.AssemblyReferenceHandle.op_Implicit(System.Reflection.Metadata.AssemblyReferenceHandle)~System.Reflection.Metadata.Handle
  - System.Reflection.Metadata.AssemblyReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.AssemblyReferenceHandle
  - System.Reflection.Metadata.AssemblyReferenceHandle.IsNil
  - System.Reflection.Metadata.AssemblyReferenceHandle.op_Equality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
  - System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Object)
  - System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Reflection.Metadata.AssemblyReferenceHandle)
  - System.Reflection.Metadata.AssemblyReferenceHandle.GetHashCode
  - System.Reflection.Metadata.AssemblyReferenceHandle.op_Inequality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.op_Implicit(System.Reflection.Metadata.AssemblyReferenceHandle)~System.Reflection.Metadata.Handle
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: implicit operator Handle(AssemblyReferenceHandle)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.implicit operator System.Reflection.Metadata.Handle(System.Reflection.Metadata.AssemblyReferenceHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1410
  syntax:
    content:
      CSharp: public static implicit operator Handle(AssemblyReferenceHandle handle) { return new Handle(handle._token); }
    parameters:
    - id: handle
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    return:
      id: Handle
  id: System.Reflection.Metadata.AssemblyReferenceHandle.op_Implicit(System.Reflection.Metadata.AssemblyReferenceHandle)~System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.AssemblyReferenceHandle
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: explicit operator AssemblyReferenceHandle(Handle)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.explicit operator System.Reflection.Metadata.AssemblyReferenceHandle(System.Reflection.Metadata.Handle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1415
  syntax:
    content:
      CSharp: public static explicit operator AssemblyReferenceHandle(Handle handle) { if (handle.TokenType != tokenType) { Handle.ThrowInvalidCast(); } return new AssemblyReferenceHandle(handle.value); }
    parameters:
    - id: handle
      type:
        id: System.Reflection.Metadata.Handle
        name: Handle
        href: System.Reflection.Metadata.Handle.yml
    return:
      id: AssemblyReferenceHandle
  id: System.Reflection.Metadata.AssemblyReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.AssemblyReferenceHandle
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.IsNil
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: IsNil
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.IsNil
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1425
  syntax:
    content:
      CSharp: public bool IsNil { get; }
    parameters:
    - id: IsNil
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.Reflection.Metadata.AssemblyReferenceHandle.IsNil
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.op_Equality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: operator ==(AssemblyReferenceHandle, AssemblyReferenceHandle)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.operator ==(System.Reflection.Metadata.AssemblyReferenceHandle, System.Reflection.Metadata.AssemblyReferenceHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1442
  syntax:
    content:
      CSharp: public static bool operator ==(AssemblyReferenceHandle left, AssemblyReferenceHandle right) { return left._token == right._token; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    - id: right
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.AssemblyReferenceHandle.op_Equality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Object)
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: Equals(object)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1447
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
  id: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Object)
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Reflection.Metadata.AssemblyReferenceHandle)
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: Equals(AssemblyReferenceHandle)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Reflection.Metadata.AssemblyReferenceHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1452
  syntax:
    content:
      CSharp: public bool Equals(AssemblyReferenceHandle other)
    parameters:
    - id: other
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Reflection.Metadata.AssemblyReferenceHandle)
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.GetHashCode
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: GetHashCode()
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1457
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
  id: System.Reflection.Metadata.AssemblyReferenceHandle.GetHashCode
- uid: System.Reflection.Metadata.AssemblyReferenceHandle.op_Inequality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
  href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
  name: operator !=(AssemblyReferenceHandle, AssemblyReferenceHandle)
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle.operator !=(System.Reflection.Metadata.AssemblyReferenceHandle, System.Reflection.Metadata.AssemblyReferenceHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1462
  syntax:
    content:
      CSharp: public static bool operator !=(AssemblyReferenceHandle left, AssemblyReferenceHandle right) { return left._token != right._token; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    - id: right
      type:
        id: System.Reflection.Metadata.AssemblyReferenceHandle
        name: AssemblyReferenceHandle
        href: System.Reflection.Metadata.AssemblyReferenceHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.AssemblyReferenceHandle.op_Inequality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)
