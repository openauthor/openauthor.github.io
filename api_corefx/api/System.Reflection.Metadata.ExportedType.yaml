id: System.Reflection.Metadata.ExportedType
href: System.Reflection.Metadata.ExportedType.yaml
name:
  CSharp: ExportedType
qualifiedName:
  CSharp: System.Reflection.Metadata.ExportedType
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
  startLine: 7
syntax:
  content:
    CSharp: public struct ExportedType
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.ExportedType.Attributes
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 28
  syntax:
    content:
      CSharp: public TypeAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: TypeAttributes
        name: TypeAttributes
        isExternal: true
- id: System.Reflection.Metadata.ExportedType.IsForwarder
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: IsForwarder
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.IsForwarder
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 33
  syntax:
    content:
      CSharp: public bool IsForwarder { get; }
    parameters:
    - id: IsForwarder
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Reflection.Metadata.ExportedType.Name
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 38
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.ExportedType.Namespace
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: Namespace
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.Namespace
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 43
  syntax:
    content:
      CSharp: public NamespaceDefinitionHandle Namespace { get; }
    parameters:
    - id: Namespace
      type:
        id: System.Reflection.Metadata.NamespaceDefinitionHandle
        name: NamespaceDefinitionHandle
        href: System.Reflection.Metadata.NamespaceDefinitionHandle.yaml
- id: System.Reflection.Metadata.ExportedType.Implementation
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: Implementation
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.Implementation
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 63
  summary: Handle to resolve the implementation of the target type.
  syntax:
    content:
      CSharp: public Handle Implementation { get; }
    parameters:
    - id: Implementation
      type:
        id: System.Reflection.Metadata.Handle
        name: Handle
        href: System.Reflection.Metadata.Handle.yaml
- id: System.Reflection.Metadata.ExportedType.GetCustomAttributes
  href: System.Reflection.Metadata.ExportedType.yaml
  name:
    CSharp: GetCustomAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.ExportedType.GetCustomAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ExportedType.cs
    startLine: 71
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
