id: System.Reflection.Metadata.FieldDefinition
href: System.Reflection.Metadata.FieldDefinition.yaml
name:
  CSharp: FieldDefinition
qualifiedName:
  CSharp: System.Reflection.Metadata.FieldDefinition
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
  startLine: 8
syntax:
  content:
    CSharp: public struct FieldDefinition
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.FieldDefinition.Name
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 39
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.FieldDefinition.Attributes
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 52
  syntax:
    content:
      CSharp: public FieldAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: FieldAttributes
        name: FieldAttributes
        isExternal: true
- id: System.Reflection.Metadata.FieldDefinition.Signature
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: Signature
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.Signature
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 65
  syntax:
    content:
      CSharp: public BlobHandle Signature { get; }
    parameters:
    - id: Signature
      type:
        id: System.Reflection.Metadata.BlobHandle
        name: BlobHandle
        href: System.Reflection.Metadata.BlobHandle.yaml
- id: System.Reflection.Metadata.FieldDefinition.GetDeclaringType
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetDeclaringType
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetDeclaringType
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 78
  syntax:
    content:
      CSharp: public TypeDefinitionHandle GetDeclaringType()
    parameters: []
    return:
      id: TypeDefinitionHandle
- id: System.Reflection.Metadata.FieldDefinition.GetDefaultValue
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetDefaultValue
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetDefaultValue
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 83
  syntax:
    content:
      CSharp: public ConstantHandle GetDefaultValue()
    parameters: []
    return:
      id: ConstantHandle
- id: System.Reflection.Metadata.FieldDefinition.GetRelativeVirtualAddress
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetRelativeVirtualAddress
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetRelativeVirtualAddress
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 88
  syntax:
    content:
      CSharp: public int GetRelativeVirtualAddress()
    parameters: []
    return:
      id: Int32
- id: System.Reflection.Metadata.FieldDefinition.GetOffset
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetOffset
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetOffset
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 102
  summary: Returns field layout offset, or -1 if not available.
  syntax:
    content:
      CSharp: public int GetOffset()
    parameters: []
    return:
      id: Int32
- id: System.Reflection.Metadata.FieldDefinition.GetMarshallingDescriptor
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetMarshallingDescriptor
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetMarshallingDescriptor
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 124
  syntax:
    content:
      CSharp: public BlobHandle GetMarshallingDescriptor()
    parameters: []
    return:
      id: BlobHandle
- id: System.Reflection.Metadata.FieldDefinition.GetCustomAttributes
  href: System.Reflection.Metadata.FieldDefinition.yaml
  name:
    CSharp: GetCustomAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.FieldDefinition.GetCustomAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/FieldDefinition.cs
    startLine: 135
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
