items:
- uid: System.Reflection.Metadata.GenericParameterConstraint
  href: System.Reflection.Metadata.GenericParameterConstraint.yml
  name: GenericParameterConstraint
  fullName: System.Reflection.Metadata.GenericParameterConstraint
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/GenericParameterConstraint.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/GenericParameterConstraint.cs
    startLine: 7
  syntax:
    content:
      CSharp: public struct GenericParameterConstraint
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Reflection.Metadata.GenericParameterConstraint
  children:
  - System.Reflection.Metadata.GenericParameterConstraint.Parameter
  - System.Reflection.Metadata.GenericParameterConstraint.Type
  - System.Reflection.Metadata.GenericParameterConstraint.GetCustomAttributes
- uid: System.Reflection.Metadata.GenericParameterConstraint.Parameter
  href: System.Reflection.Metadata.GenericParameterConstraint.yml
  name: Parameter
  fullName: System.Reflection.Metadata.GenericParameterConstraint.Parameter
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/GenericParameterConstraint.cs
    startLine: 34
  summary: The constrained [System.Reflection.Metadata.GenericParameterHandle](System.Reflection.Metadata.GenericParameterHandle.yml).
  syntax:
    content:
      CSharp: public GenericParameterHandle Parameter { get; }
    parameters:
    - id: Parameter
      type:
        id: System.Reflection.Metadata.GenericParameterHandle
        name: GenericParameterHandle
        href: System.Reflection.Metadata.GenericParameterHandle.yml
  id: System.Reflection.Metadata.GenericParameterConstraint.Parameter
- uid: System.Reflection.Metadata.GenericParameterConstraint.Type
  href: System.Reflection.Metadata.GenericParameterConstraint.yml
  name: Type
  fullName: System.Reflection.Metadata.GenericParameterConstraint.Type
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/GenericParameterConstraint.cs
    startLine: 47
  summary: >-
    Handle ([System.Reflection.Metadata.TypeDefinitionHandle](System.Reflection.Metadata.TypeDefinitionHandle.yml), [System.Reflection.Metadata.TypeReferenceHandle](System.Reflection.Metadata.TypeReferenceHandle.yml), or [System.Reflection.Metadata.TypeSpecificationHandle](System.Reflection.Metadata.TypeSpecificationHandle.yml))

    specifying from which type this generic parameter is constrained to derive,

    or which interface this generic parameter is constrained to implement.
  syntax:
    content:
      CSharp: public EntityHandle Type { get; }
    parameters:
    - id: Type
      type:
        id: System.Reflection.Metadata.EntityHandle
        name: EntityHandle
        href: System.Reflection.Metadata.EntityHandle.yml
  id: System.Reflection.Metadata.GenericParameterConstraint.Type
- uid: System.Reflection.Metadata.GenericParameterConstraint.GetCustomAttributes
  href: System.Reflection.Metadata.GenericParameterConstraint.yml
  name: GetCustomAttributes()
  fullName: System.Reflection.Metadata.GenericParameterConstraint.GetCustomAttributes()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/GenericParameterConstraint.cs
    startLine: 52
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
      type:
        id: System.Reflection.Metadata.CustomAttributeHandleCollection
        name: CustomAttributeHandleCollection
        href: System.Reflection.Metadata.CustomAttributeHandleCollection.yml
  id: System.Reflection.Metadata.GenericParameterConstraint.GetCustomAttributes
