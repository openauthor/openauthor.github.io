id: System.Reflection.Metadata.ManifestResource
href: System.Reflection.Metadata.ManifestResource.yaml
name:
  CSharp: ManifestResource
qualifiedName:
  CSharp: System.Reflection.Metadata.ManifestResource
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
  startLine: 7
syntax:
  content:
    CSharp: public struct ManifestResource
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.ManifestResource.Offset
  href: System.Reflection.Metadata.ManifestResource.yaml
  name:
    CSharp: Offset
  qualifiedName:
    CSharp: System.Reflection.Metadata.ManifestResource.Offset
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
    startLine: 34
  summary: Specifies the byte offset within the referenced file at which this resource record begins.
  syntax:
    content:
      CSharp: public long Offset { get; }
    parameters:
    - id: Offset
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
- id: System.Reflection.Metadata.ManifestResource.Attributes
  href: System.Reflection.Metadata.ManifestResource.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.ManifestResource.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
    startLine: 45
  summary: Resource attributes.
  syntax:
    content:
      CSharp: public ManifestResourceAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: System.Reflection.ManifestResourceAttributes
        name: ManifestResourceAttributes
        href: System.Reflection.ManifestResourceAttributes.yaml
- id: System.Reflection.Metadata.ManifestResource.Name
  href: System.Reflection.Metadata.ManifestResource.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Reflection.Metadata.ManifestResource.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
    startLine: 56
  summary: Name of the resource.
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.ManifestResource.Implementation
  href: System.Reflection.Metadata.ManifestResource.yaml
  name:
    CSharp: Implementation
  qualifiedName:
    CSharp: System.Reflection.Metadata.ManifestResource.Implementation
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
    startLine: 70
  summary: '[System.Reflection.Metadata.AssemblyFileHandle](System.Reflection.Metadata.AssemblyFileHandle.yaml), [System.Reflection.Metadata.AssemblyReferenceHandle](System.Reflection.Metadata.AssemblyReferenceHandle.yaml), or nil handle.'
  syntax:
    content:
      CSharp: public Handle Implementation { get; }
    parameters:
    - id: Implementation
      type:
        id: System.Reflection.Metadata.Handle
        name: Handle
        href: System.Reflection.Metadata.Handle.yaml
- id: System.Reflection.Metadata.ManifestResource.GetCustomAttributes
  href: System.Reflection.Metadata.ManifestResource.yaml
  name:
    CSharp: GetCustomAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.ManifestResource.GetCustomAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/ManifestResource.cs
    startLine: 75
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
