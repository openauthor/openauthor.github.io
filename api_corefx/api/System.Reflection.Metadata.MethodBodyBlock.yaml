id: System.Reflection.Metadata.MethodBodyBlock
href: System.Reflection.Metadata.MethodBodyBlock.yaml
name:
  CSharp: MethodBodyBlock
qualifiedName:
  CSharp: System.Reflection.Metadata.MethodBodyBlock
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
  startLine: 11
syntax:
  content:
    CSharp: public sealed class MethodBodyBlock
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Reflection.Metadata.MethodBodyBlock.Size
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: Size
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.Size
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 41
  summary: Size of the method body - includes the header, IL and exception regions.
  syntax:
    content:
      CSharp: public int Size { get; }
    parameters:
    - id: Size
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Reflection.Metadata.MethodBodyBlock.MaxStack
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: MaxStack
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.MaxStack
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 46
  syntax:
    content:
      CSharp: public int MaxStack { get; }
    parameters:
    - id: MaxStack
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Reflection.Metadata.MethodBodyBlock.LocalVariablesInitialized
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: LocalVariablesInitialized
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.LocalVariablesInitialized
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 51
  syntax:
    content:
      CSharp: public bool LocalVariablesInitialized { get; }
    parameters:
    - id: LocalVariablesInitialized
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Reflection.Metadata.MethodBodyBlock.LocalSignature
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: LocalSignature
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.LocalSignature
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 56
  syntax:
    content:
      CSharp: public StandaloneSignatureHandle LocalSignature { get; }
    parameters:
    - id: LocalSignature
      type:
        id: System.Reflection.Metadata.StandaloneSignatureHandle
        name: StandaloneSignatureHandle
        href: System.Reflection.Metadata.StandaloneSignatureHandle.yaml
- id: System.Reflection.Metadata.MethodBodyBlock.ExceptionRegions
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: ExceptionRegions
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.ExceptionRegions
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 61
  syntax:
    content:
      CSharp: public ImmutableArray<ExceptionRegion> ExceptionRegions { get; }
    parameters:
    - id: ExceptionRegions
      type:
        id: ImmutableArray{System.Reflection.Metadata.ExceptionRegion}
        name: ImmutableArray{System.Reflection.Metadata.ExceptionRegion}
        isExternal: true
- id: System.Reflection.Metadata.MethodBodyBlock.GetILBytes
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: GetILBytes
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.GetILBytes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 66
  syntax:
    content:
      CSharp: public byte[] GetILBytes()
    parameters: []
    return: {}
- id: System.Reflection.Metadata.MethodBodyBlock.GetILContent
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: GetILContent
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.GetILContent
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 71
  syntax:
    content:
      CSharp: public ImmutableArray<byte> GetILContent()
    parameters: []
    return:
      id: ImmutableArray
- id: System.Reflection.Metadata.MethodBodyBlock.GetILReader
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: GetILReader
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.GetILReader
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 77
  syntax:
    content:
      CSharp: public BlobReader GetILReader()
    parameters: []
    return:
      id: BlobReader
- id: System.Reflection.Metadata.MethodBodyBlock.Create(System.Reflection.Metadata.BlobReader)
  href: System.Reflection.Metadata.MethodBodyBlock.yaml
  name:
    CSharp: Create
  qualifiedName:
    CSharp: System.Reflection.Metadata.MethodBodyBlock.Create(System.Reflection.Metadata.BlobReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/MethodBodyBlock.cs
    startLine: 95
  syntax:
    content:
      CSharp: public static MethodBodyBlock Create(BlobReader reader)
    parameters:
    - id: reader
      type:
        id: System.Reflection.Metadata.BlobReader
        name: BlobReader
        href: System.Reflection.Metadata.BlobReader.yaml
    return:
      id: MethodBodyBlock
