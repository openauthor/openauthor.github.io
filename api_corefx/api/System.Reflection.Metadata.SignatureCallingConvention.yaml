id: System.Reflection.Metadata.SignatureCallingConvention
href: System.Reflection.Metadata.SignatureCallingConvention.yaml
name:
  CSharp: SignatureCallingConvention
qualifiedName:
  CSharp: System.Reflection.Metadata.SignatureCallingConvention
type: Enum
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
  startLine: 10
summary: >-
  Specifies how arguments in a given signature are passed from the caller to the callee.

  Underlying values correspond to the representation in the leading signature byte

  represented by [System.Reflection.Metadata.SignatureHeader](System.Reflection.Metadata.SignatureHeader.yaml).
syntax:
  content:
    CSharp: public enum SignatureCallingConvention
inheritance:
- id: System.Enum
  name: System.Enum
  isExternal: true
items:
- id: System.Reflection.Metadata.SignatureCallingConvention.Default
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: Default
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.Default
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 15
  summary: Managed calling convention with fixed-length argument list.
  syntax:
    content:
      CSharp: Default = 0x0
- id: System.Reflection.Metadata.SignatureCallingConvention.CDecl
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: CDecl
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.CDecl
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 20
  summary: Unmanaged C/C++-style calling convention where the call stack is cleaned by the caller.
  syntax:
    content:
      CSharp: CDecl = 0x1
- id: System.Reflection.Metadata.SignatureCallingConvention.StdCall
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: StdCall
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.StdCall
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 25
  summary: Unmanaged calling convention where call stack is cleaned up by the callee.
  syntax:
    content:
      CSharp: StdCall = 0x2
- id: System.Reflection.Metadata.SignatureCallingConvention.ThisCall
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: ThisCall
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.ThisCall
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 30
  summary: Unmanaged C++-style calling convention for calling instance member functions with a fixed argument list.
  syntax:
    content:
      CSharp: ThisCall = 0x3
- id: System.Reflection.Metadata.SignatureCallingConvention.FastCall
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: FastCall
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.FastCall
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 35
  summary: Unmanaged calling convention where arguments are passed in registers when possible.
  syntax:
    content:
      CSharp: FastCall = 0x4
- id: System.Reflection.Metadata.SignatureCallingConvention.VarArgs
  href: System.Reflection.Metadata.SignatureCallingConvention.yaml
  name:
    CSharp: VarArgs
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureCallingConvention.VarArgs
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureCallingConvention.cs
    startLine: 40
  summary: Managed calling convention for passing extra arguments.
  syntax:
    content:
      CSharp: VarArgs = 0x5
