id: System.Reflection.Metadata.SignatureHeader
href: System.Reflection.Metadata.SignatureHeader.yaml
name:
  CSharp: SignatureHeader
qualifiedName:
  CSharp: System.Reflection.Metadata.SignatureHeader
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
  startLine: 14
summary: Represents the signature characteristics specified by the leading byte of signature blobs.
syntax:
  content:
    CSharp: public struct SignatureHeader
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: CallingConventionOrKindMask
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 17
  syntax:
    content:
      CSharp: CallingConventionOrKindMask
- id: System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: SignatureHeader(System.Byte)
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.SignatureHeader(System.Byte)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 20
  syntax:
    content:
      CSharp: public SignatureHeader(byte rawValue)
    parameters:
    - id: rawValue
      type:
        id: System.Byte
        name: System.Byte
        isExternal: true
    return:
      id: Void
- id: System.Reflection.Metadata.SignatureHeader.RawValue
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: RawValue
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.RawValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 25
  syntax:
    content:
      CSharp: public byte RawValue { get; }
    parameters:
    - id: RawValue
      type:
        id: System.Byte
        name: System.Byte
        isExternal: true
- id: System.Reflection.Metadata.SignatureHeader.CallingConvention
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: CallingConvention
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 30
  syntax:
    content:
      CSharp: public SignatureCallingConvention CallingConvention { get; }
    parameters:
    - id: CallingConvention
      type:
        id: System.Reflection.Metadata.SignatureCallingConvention
        name: SignatureCallingConvention
        href: System.Reflection.Metadata.SignatureCallingConvention.yaml
- id: System.Reflection.Metadata.SignatureHeader.Kind
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: Kind
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.Kind
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 45
  syntax:
    content:
      CSharp: public SignatureKind Kind { get; }
    parameters:
    - id: Kind
      type:
        id: System.Reflection.Metadata.SignatureKind
        name: SignatureKind
        href: System.Reflection.Metadata.SignatureKind.yaml
- id: System.Reflection.Metadata.SignatureHeader.Attributes
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 60
  syntax:
    content:
      CSharp: public SignatureAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: System.Reflection.Metadata.SignatureAttributes
        name: SignatureAttributes
        href: System.Reflection.Metadata.SignatureAttributes.yaml
- id: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: HasExplicitThis
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 65
  syntax:
    content:
      CSharp: public bool HasExplicitThis { get; }
    parameters:
    - id: HasExplicitThis
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Reflection.Metadata.SignatureHeader.IsInstance
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: IsInstance
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.IsInstance
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 70
  syntax:
    content:
      CSharp: public bool IsInstance { get; }
    parameters:
    - id: IsInstance
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Reflection.Metadata.SignatureHeader.IsGeneric
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: IsGeneric
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.IsGeneric
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 75
  syntax:
    content:
      CSharp: public bool IsGeneric { get; }
    parameters:
    - id: IsGeneric
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 80
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 85
  syntax:
    content:
      CSharp: public bool Equals(SignatureHeader other)
    parameters:
    - id: other
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yaml
    return:
      id: Boolean
- id: System.Reflection.Metadata.SignatureHeader.GetHashCode
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.GetHashCode
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 90
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 95
  syntax:
    content:
      CSharp: public static bool operator ==(SignatureHeader left, SignatureHeader right) { return left._rawValue == right._rawValue; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yaml
    - id: right
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yaml
    return:
      id: Boolean
- id: System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 100
  syntax:
    content:
      CSharp: public static bool operator !=(SignatureHeader left, SignatureHeader right) { return left._rawValue != right._rawValue; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yaml
    - id: right
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yaml
    return:
      id: Boolean
- id: System.Reflection.Metadata.SignatureHeader.ToString
  href: System.Reflection.Metadata.SignatureHeader.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: System.Reflection.Metadata.SignatureHeader.ToString
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 105
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
