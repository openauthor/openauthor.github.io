items:
- uid: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: SignatureHeader
  fullName: System.Reflection.Metadata.SignatureHeader
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 14
  summary: Represents the signature characteristics specified by the leading byte of signature blobs.
  syntax:
    content:
      CSharp: 'public struct SignatureHeader : IEquatable<SignatureHeader>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Reflection.Metadata.SignatureHeader
  children:
  - System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  - System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
  - System.Reflection.Metadata.SignatureHeader.RawValue
  - System.Reflection.Metadata.SignatureHeader.CallingConvention
  - System.Reflection.Metadata.SignatureHeader.Kind
  - System.Reflection.Metadata.SignatureHeader.Attributes
  - System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  - System.Reflection.Metadata.SignatureHeader.IsInstance
  - System.Reflection.Metadata.SignatureHeader.IsGeneric
  - System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  - System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.GetHashCode
  - System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.ToString
- uid: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: CallingConventionOrKindMask
  fullName: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 17
  syntax:
    content:
      CSharp: public const byte CallingConventionOrKindMask;
  id: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
- uid: System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: SignatureHeader(byte)
  fullName: System.Reflection.Metadata.SignatureHeader.SignatureHeader(byte)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 20
  syntax:
    content:
      CSharp: public SignatureHeader(byte rawValue)
    parameters:
    - id: rawValue
      type:
        id: System.Byte
        name: byte
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
- uid: System.Reflection.Metadata.SignatureHeader.RawValue
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: RawValue
  fullName: System.Reflection.Metadata.SignatureHeader.RawValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 25
  syntax:
    content:
      CSharp: public byte RawValue { get; }
    parameters:
    - id: RawValue
      type:
        id: System.Byte
        name: byte
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.RawValue
- uid: System.Reflection.Metadata.SignatureHeader.CallingConvention
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: CallingConvention
  fullName: System.Reflection.Metadata.SignatureHeader.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 30
  syntax:
    content:
      CSharp: public SignatureCallingConvention CallingConvention { get; }
    parameters:
    - id: CallingConvention
      type:
        id: System.Reflection.Metadata.SignatureCallingConvention
        name: SignatureCallingConvention
        href: System.Reflection.Metadata.SignatureCallingConvention.yml
  id: System.Reflection.Metadata.SignatureHeader.CallingConvention
- uid: System.Reflection.Metadata.SignatureHeader.Kind
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Kind
  fullName: System.Reflection.Metadata.SignatureHeader.Kind
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 45
  syntax:
    content:
      CSharp: public SignatureKind Kind { get; }
    parameters:
    - id: Kind
      type:
        id: System.Reflection.Metadata.SignatureKind
        name: SignatureKind
        href: System.Reflection.Metadata.SignatureKind.yml
  id: System.Reflection.Metadata.SignatureHeader.Kind
- uid: System.Reflection.Metadata.SignatureHeader.Attributes
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Attributes
  fullName: System.Reflection.Metadata.SignatureHeader.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 60
  syntax:
    content:
      CSharp: public SignatureAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: System.Reflection.Metadata.SignatureAttributes
        name: SignatureAttributes
        href: System.Reflection.Metadata.SignatureAttributes.yml
  id: System.Reflection.Metadata.SignatureHeader.Attributes
- uid: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: HasExplicitThis
  fullName: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 65
  syntax:
    content:
      CSharp: public bool HasExplicitThis { get; }
    parameters:
    - id: HasExplicitThis
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
- uid: System.Reflection.Metadata.SignatureHeader.IsInstance
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: IsInstance
  fullName: System.Reflection.Metadata.SignatureHeader.IsInstance
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 70
  syntax:
    content:
      CSharp: public bool IsInstance { get; }
    parameters:
    - id: IsInstance
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.IsInstance
- uid: System.Reflection.Metadata.SignatureHeader.IsGeneric
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: IsGeneric
  fullName: System.Reflection.Metadata.SignatureHeader.IsGeneric
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 75
  syntax:
    content:
      CSharp: public bool IsGeneric { get; }
    parameters:
    - id: IsGeneric
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.IsGeneric
- uid: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Equals(object)
  fullName: System.Reflection.Metadata.SignatureHeader.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 80
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
- uid: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Equals(SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 85
  syntax:
    content:
      CSharp: public bool Equals(SignatureHeader other)
    parameters:
    - id: other
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
- uid: System.Reflection.Metadata.SignatureHeader.GetHashCode
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: GetHashCode()
  fullName: System.Reflection.Metadata.SignatureHeader.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 90
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.GetHashCode
- uid: System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: operator ==(SignatureHeader, SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.operator ==(System.Reflection.Metadata.SignatureHeader, System.Reflection.Metadata.SignatureHeader)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 95
  syntax:
    content:
      CSharp: public static bool operator ==(SignatureHeader left, SignatureHeader right)
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yml
    - id: right
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
- uid: System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: operator !=(SignatureHeader, SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.operator !=(System.Reflection.Metadata.SignatureHeader, System.Reflection.Metadata.SignatureHeader)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 100
  syntax:
    content:
      CSharp: public static bool operator !=(SignatureHeader left, SignatureHeader right)
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yml
    - id: right
      type:
        id: System.Reflection.Metadata.SignatureHeader
        name: SignatureHeader
        href: System.Reflection.Metadata.SignatureHeader.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
- uid: System.Reflection.Metadata.SignatureHeader.ToString
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: ToString()
  fullName: System.Reflection.Metadata.SignatureHeader.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 105
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Reflection.Metadata.SignatureHeader.ToString
