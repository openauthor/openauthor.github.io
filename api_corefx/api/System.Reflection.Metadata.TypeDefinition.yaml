id: System.Reflection.Metadata.TypeDefinition
href: System.Reflection.Metadata.TypeDefinition.yaml
name:
  CSharp: TypeDefinition
qualifiedName:
  CSharp: System.Reflection.Metadata.TypeDefinition
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
  startLine: 9
syntax:
  content:
    CSharp: public struct TypeDefinition
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.Metadata.TypeDefinition.Attributes
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 40
  syntax:
    content:
      CSharp: public TypeAttributes Attributes { get; }
    parameters:
    - id: Attributes
      type:
        id: TypeAttributes
        name: TypeAttributes
        isExternal: true
- id: System.Reflection.Metadata.TypeDefinition.Name
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: Name
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 56
  summary: Name of the type.
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yaml
- id: System.Reflection.Metadata.TypeDefinition.Namespace
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: Namespace
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.Namespace
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 72
  summary: Namespace of the type, or nil if the type is nested or defined in a root namespace.
  syntax:
    content:
      CSharp: public NamespaceDefinitionHandle Namespace { get; }
    parameters:
    - id: Namespace
      type:
        id: System.Reflection.Metadata.NamespaceDefinitionHandle
        name: NamespaceDefinitionHandle
        href: System.Reflection.Metadata.NamespaceDefinitionHandle.yaml
- id: System.Reflection.Metadata.TypeDefinition.BaseType
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: BaseType
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.BaseType
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 89
  summary: >-
    The base type of the type definition: either

    [System.Reflection.Metadata.TypeSpecificationHandle](System.Reflection.Metadata.TypeSpecificationHandle.yaml), [System.Reflection.Metadata.TypeReferenceHandle](System.Reflection.Metadata.TypeReferenceHandle.yaml) or [System.Reflection.Metadata.TypeDefinitionHandle](System.Reflection.Metadata.TypeDefinitionHandle.yaml).
  syntax:
    content:
      CSharp: public Handle BaseType { get; }
    parameters:
    - id: BaseType
      type:
        id: System.Reflection.Metadata.Handle
        name: Handle
        href: System.Reflection.Metadata.Handle.yaml
- id: System.Reflection.Metadata.TypeDefinition.GetLayout
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetLayout
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetLayout
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 102
  syntax:
    content:
      CSharp: public TypeLayout GetLayout()
    parameters: []
    return:
      id: TypeLayout
- id: System.Reflection.Metadata.TypeDefinition.GetDeclaringType
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetDeclaringType
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetDeclaringType
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 129
  summary: Returns the enclosing type of a specified nested type or nil handle if the type is not nested.
  syntax:
    content:
      CSharp: public TypeDefinitionHandle GetDeclaringType()
    parameters: []
    return:
      id: TypeDefinitionHandle
- id: System.Reflection.Metadata.TypeDefinition.GetGenericParameters
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetGenericParameters
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetGenericParameters
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 134
  syntax:
    content:
      CSharp: public GenericParameterHandleCollection GetGenericParameters()
    parameters: []
    return:
      id: GenericParameterHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetMethods
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetMethods
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetMethods
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 139
  syntax:
    content:
      CSharp: public MethodDefinitionHandleCollection GetMethods()
    parameters: []
    return:
      id: MethodDefinitionHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetFields
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetFields
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetFields
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 144
  syntax:
    content:
      CSharp: public FieldDefinitionHandleCollection GetFields()
    parameters: []
    return:
      id: FieldDefinitionHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetProperties
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetProperties
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetProperties
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 149
  syntax:
    content:
      CSharp: public PropertyDefinitionHandleCollection GetProperties()
    parameters: []
    return:
      id: PropertyDefinitionHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetEvents
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetEvents
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetEvents
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 154
  syntax:
    content:
      CSharp: public EventDefinitionHandleCollection GetEvents()
    parameters: []
    return:
      id: EventDefinitionHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetNestedTypes
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetNestedTypes
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetNestedTypes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 162
  summary: Returns an array of types nested in the specified type.
  syntax:
    content:
      CSharp: public ImmutableArray<TypeDefinitionHandle> GetNestedTypes()
    parameters: []
    return:
      id: ImmutableArray
- id: System.Reflection.Metadata.TypeDefinition.GetMethodImplementations
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetMethodImplementations
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetMethodImplementations
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 167
  syntax:
    content:
      CSharp: public MethodImplementationHandleCollection GetMethodImplementations()
    parameters: []
    return:
      id: MethodImplementationHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetInterfaceImplementations
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetInterfaceImplementations
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetInterfaceImplementations
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 172
  syntax:
    content:
      CSharp: public InterfaceImplementationHandleCollection GetInterfaceImplementations()
    parameters: []
    return:
      id: InterfaceImplementationHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetCustomAttributes
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetCustomAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetCustomAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 177
  syntax:
    content:
      CSharp: public CustomAttributeHandleCollection GetCustomAttributes()
    parameters: []
    return:
      id: CustomAttributeHandleCollection
- id: System.Reflection.Metadata.TypeDefinition.GetDeclarativeSecurityAttributes
  href: System.Reflection.Metadata.TypeDefinition.yaml
  name:
    CSharp: GetDeclarativeSecurityAttributes
  qualifiedName:
    CSharp: System.Reflection.Metadata.TypeDefinition.GetDeclarativeSecurityAttributes
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeDefinition.cs
    startLine: 182
  syntax:
    content:
      CSharp: public DeclarativeSecurityAttributeHandleCollection GetDeclarativeSecurityAttributes()
    parameters: []
    return:
      id: DeclarativeSecurityAttributeHandleCollection
