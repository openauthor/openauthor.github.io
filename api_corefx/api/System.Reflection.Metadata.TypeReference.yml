items:
- uid: System.Reflection.Metadata.TypeReference
  href: System.Reflection.Metadata.TypeReference.yml
  name: TypeReference
  fullName: System.Reflection.Metadata.TypeReference
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeReference.cs
    startLine: 8
  syntax:
    content:
      CSharp: public struct TypeReference
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Reflection.Metadata.TypeReference
  children:
  - System.Reflection.Metadata.TypeReference.ResolutionScope
  - System.Reflection.Metadata.TypeReference.Name
  - System.Reflection.Metadata.TypeReference.Namespace
- uid: System.Reflection.Metadata.TypeReference.ResolutionScope
  href: System.Reflection.Metadata.TypeReference.yml
  name: ResolutionScope
  fullName: System.Reflection.Metadata.TypeReference.ResolutionScope
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeReference.cs
    startLine: 52
  summary: Resolution scope in which the target type is defined and is uniquely identified by the specified [System.Reflection.Metadata.TypeReference.Namespace](System.Reflection.Metadata.TypeReference.yml) and [System.Reflection.Metadata.TypeReference.Name](System.Reflection.Metadata.TypeReference.yml).
  syntax:
    content:
      CSharp: public EntityHandle ResolutionScope { get; }
    parameters:
    - id: ResolutionScope
      type:
        id: System.Reflection.Metadata.EntityHandle
        name: EntityHandle
        href: System.Reflection.Metadata.EntityHandle.yml
  id: System.Reflection.Metadata.TypeReference.ResolutionScope
- uid: System.Reflection.Metadata.TypeReference.Name
  href: System.Reflection.Metadata.TypeReference.yml
  name: Name
  fullName: System.Reflection.Metadata.TypeReference.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeReference.cs
    startLine: 68
  summary: Name of the target type.
  syntax:
    content:
      CSharp: public StringHandle Name { get; }
    parameters:
    - id: Name
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yml
  id: System.Reflection.Metadata.TypeReference.Name
- uid: System.Reflection.Metadata.TypeReference.Namespace
  href: System.Reflection.Metadata.TypeReference.yml
  name: Namespace
  fullName: System.Reflection.Metadata.TypeReference.Namespace
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/TypeReference.cs
    startLine: 84
  summary: Full name of the namespace where the target type is defined, or nil if the type is nested or defined in a root namespace.
  syntax:
    content:
      CSharp: public StringHandle Namespace { get; }
    parameters:
    - id: Namespace
      type:
        id: System.Reflection.Metadata.StringHandle
        name: StringHandle
        href: System.Reflection.Metadata.StringHandle.yml
  id: System.Reflection.Metadata.TypeReference.Namespace
