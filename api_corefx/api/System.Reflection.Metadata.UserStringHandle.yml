items:
- uid: System.Reflection.Metadata.UserStringHandle
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: UserStringHandle
  fullName: System.Reflection.Metadata.UserStringHandle
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1804
  syntax:
    content:
      CSharp: public struct UserStringHandle
  inheritance:
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: System.Reflection.Metadata.UserStringHandle
  children:
  - System.Reflection.Metadata.UserStringHandle.op_Implicit(System.Reflection.Metadata.UserStringHandle)~System.Reflection.Metadata.Handle
  - System.Reflection.Metadata.UserStringHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.UserStringHandle
  - System.Reflection.Metadata.UserStringHandle.IsNil
  - System.Reflection.Metadata.UserStringHandle.op_Equality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
  - System.Reflection.Metadata.UserStringHandle.Equals(System.Object)
  - System.Reflection.Metadata.UserStringHandle.Equals(System.Reflection.Metadata.UserStringHandle)
  - System.Reflection.Metadata.UserStringHandle.GetHashCode
  - System.Reflection.Metadata.UserStringHandle.op_Inequality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
- uid: System.Reflection.Metadata.UserStringHandle.op_Implicit(System.Reflection.Metadata.UserStringHandle)~System.Reflection.Metadata.Handle
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: implicit operator Handle(UserStringHandle)
  fullName: System.Reflection.Metadata.UserStringHandle.implicit operator System.Reflection.Metadata.Handle(System.Reflection.Metadata.UserStringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1820
  syntax:
    content:
      CSharp: public static implicit operator Handle(UserStringHandle handle) { return new Handle(handle._token); }
    parameters:
    - id: handle
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    return:
      id: Handle
  id: System.Reflection.Metadata.UserStringHandle.op_Implicit(System.Reflection.Metadata.UserStringHandle)~System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.UserStringHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.UserStringHandle
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: explicit operator UserStringHandle(Handle)
  fullName: System.Reflection.Metadata.UserStringHandle.explicit operator System.Reflection.Metadata.UserStringHandle(System.Reflection.Metadata.Handle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1825
  syntax:
    content:
      CSharp: public static explicit operator UserStringHandle(Handle handle) { if (handle.TokenType != tokenType) { Handle.ThrowInvalidCast(); } return new UserStringHandle(handle.value); }
    parameters:
    - id: handle
      type:
        id: System.Reflection.Metadata.Handle
        name: Handle
        href: System.Reflection.Metadata.Handle.yml
    return:
      id: UserStringHandle
  id: System.Reflection.Metadata.UserStringHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.UserStringHandle
- uid: System.Reflection.Metadata.UserStringHandle.IsNil
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: IsNil
  fullName: System.Reflection.Metadata.UserStringHandle.IsNil
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1835
  syntax:
    content:
      CSharp: public bool IsNil { get; }
    parameters:
    - id: IsNil
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.Reflection.Metadata.UserStringHandle.IsNil
- uid: System.Reflection.Metadata.UserStringHandle.op_Equality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: operator ==(UserStringHandle, UserStringHandle)
  fullName: System.Reflection.Metadata.UserStringHandle.operator ==(System.Reflection.Metadata.UserStringHandle, System.Reflection.Metadata.UserStringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1851
  syntax:
    content:
      CSharp: public static bool operator ==(UserStringHandle left, UserStringHandle right) { return left._token == right._token; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    - id: right
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.UserStringHandle.op_Equality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
- uid: System.Reflection.Metadata.UserStringHandle.Equals(System.Object)
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: Equals(object)
  fullName: System.Reflection.Metadata.UserStringHandle.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1856
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
  id: System.Reflection.Metadata.UserStringHandle.Equals(System.Object)
- uid: System.Reflection.Metadata.UserStringHandle.Equals(System.Reflection.Metadata.UserStringHandle)
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: Equals(UserStringHandle)
  fullName: System.Reflection.Metadata.UserStringHandle.Equals(System.Reflection.Metadata.UserStringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1861
  syntax:
    content:
      CSharp: public bool Equals(UserStringHandle other)
    parameters:
    - id: other
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.UserStringHandle.Equals(System.Reflection.Metadata.UserStringHandle)
- uid: System.Reflection.Metadata.UserStringHandle.GetHashCode
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: GetHashCode()
  fullName: System.Reflection.Metadata.UserStringHandle.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1866
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
  id: System.Reflection.Metadata.UserStringHandle.GetHashCode
- uid: System.Reflection.Metadata.UserStringHandle.op_Inequality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: operator !=(UserStringHandle, UserStringHandle)
  fullName: System.Reflection.Metadata.UserStringHandle.operator !=(System.Reflection.Metadata.UserStringHandle, System.Reflection.Metadata.UserStringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 1871
  syntax:
    content:
      CSharp: public static bool operator !=(UserStringHandle left, UserStringHandle right) { return left._token != right._token; }
    parameters:
    - id: left
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    - id: right
      type:
        id: System.Reflection.Metadata.UserStringHandle
        name: UserStringHandle
        href: System.Reflection.Metadata.UserStringHandle.yml
    return:
      id: Boolean
  id: System.Reflection.Metadata.UserStringHandle.op_Inequality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)
