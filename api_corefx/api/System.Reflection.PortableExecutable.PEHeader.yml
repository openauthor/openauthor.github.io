items:
- uid: System.Reflection.PortableExecutable.PEHeader
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: PEHeader
  fullName: System.Reflection.PortableExecutable.PEHeader
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 8
  syntax:
    content:
      CSharp: public sealed class PEHeader
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader
  children:
  - System.Reflection.PortableExecutable.PEHeader.Magic
  - System.Reflection.PortableExecutable.PEHeader.MajorLinkerVersion
  - System.Reflection.PortableExecutable.PEHeader.MinorLinkerVersion
  - System.Reflection.PortableExecutable.PEHeader.SizeOfCode
  - System.Reflection.PortableExecutable.PEHeader.SizeOfInitializedData
  - System.Reflection.PortableExecutable.PEHeader.SizeOfUninitializedData
  - System.Reflection.PortableExecutable.PEHeader.AddressOfEntryPoint
  - System.Reflection.PortableExecutable.PEHeader.BaseOfCode
  - System.Reflection.PortableExecutable.PEHeader.BaseOfData
  - System.Reflection.PortableExecutable.PEHeader.ImageBase
  - System.Reflection.PortableExecutable.PEHeader.SectionAlignment
  - System.Reflection.PortableExecutable.PEHeader.FileAlignment
  - System.Reflection.PortableExecutable.PEHeader.MajorOperatingSystemVersion
  - System.Reflection.PortableExecutable.PEHeader.MinorOperatingSystemVersion
  - System.Reflection.PortableExecutable.PEHeader.MajorImageVersion
  - System.Reflection.PortableExecutable.PEHeader.MinorImageVersion
  - System.Reflection.PortableExecutable.PEHeader.MajorSubsystemVersion
  - System.Reflection.PortableExecutable.PEHeader.MinorSubsystemVersion
  - System.Reflection.PortableExecutable.PEHeader.SizeOfImage
  - System.Reflection.PortableExecutable.PEHeader.SizeOfHeaders
  - System.Reflection.PortableExecutable.PEHeader.CheckSum
  - System.Reflection.PortableExecutable.PEHeader.Subsystem
  - System.Reflection.PortableExecutable.PEHeader.DllCharacteristics
  - System.Reflection.PortableExecutable.PEHeader.SizeOfStackReserve
  - System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit
  - System.Reflection.PortableExecutable.PEHeader.SizeOfHeapReserve
  - System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit
  - System.Reflection.PortableExecutable.PEHeader.NumberOfRvaAndSizes
  - System.Reflection.PortableExecutable.PEHeader.ExportTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.ImportTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.ResourceTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.ExceptionTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.CertificateTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.BaseRelocationTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.DebugTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.CopyrightTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.GlobalPointerTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.ThreadLocalStorageTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.LoadConfigTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.BoundImportTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.ImportAddressTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.DelayImportTableDirectory
  - System.Reflection.PortableExecutable.PEHeader.CorHeaderTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.Magic
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: Magic
  fullName: System.Reflection.PortableExecutable.PEHeader.Magic
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 15
  summary: Identifies the format of the image file.
  syntax:
    content:
      CSharp: public PEMagic Magic { get; private set; }
    parameters:
    - id: Magic
      type:
        id: System.Reflection.PortableExecutable.PEMagic
        name: PEMagic
        href: System.Reflection.PortableExecutable.PEMagic.yml
  id: System.Reflection.PortableExecutable.PEHeader.Magic
- uid: System.Reflection.PortableExecutable.PEHeader.MajorLinkerVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MajorLinkerVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MajorLinkerVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 20
  summary: The linker major version number.
  syntax:
    content:
      CSharp: public byte MajorLinkerVersion { get; private set; }
    parameters:
    - id: MajorLinkerVersion
      type:
        id: System.Byte
        name: System.Byte
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MajorLinkerVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MinorLinkerVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MinorLinkerVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MinorLinkerVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 25
  summary: The linker minor version number.
  syntax:
    content:
      CSharp: public byte MinorLinkerVersion { get; private set; }
    parameters:
    - id: MinorLinkerVersion
      type:
        id: System.Byte
        name: System.Byte
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MinorLinkerVersion
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfCode
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfCode
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfCode
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 30
  summary: The size of the code (text) section, or the sum of all code sections if there are multiple sections.
  syntax:
    content:
      CSharp: public int SizeOfCode { get; private set; }
    parameters:
    - id: SizeOfCode
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfCode
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfInitializedData
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfInitializedData
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfInitializedData
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 35
  summary: The size of the initialized data section, or the sum of all such sections if there are multiple data sections.
  syntax:
    content:
      CSharp: public int SizeOfInitializedData { get; private set; }
    parameters:
    - id: SizeOfInitializedData
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfInitializedData
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfUninitializedData
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfUninitializedData
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfUninitializedData
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 40
  summary: The size of the uninitialized data section (BSS), or the sum of all such sections if there are multiple BSS sections.
  syntax:
    content:
      CSharp: public int SizeOfUninitializedData { get; private set; }
    parameters:
    - id: SizeOfUninitializedData
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfUninitializedData
- uid: System.Reflection.PortableExecutable.PEHeader.AddressOfEntryPoint
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: AddressOfEntryPoint
  fullName: System.Reflection.PortableExecutable.PEHeader.AddressOfEntryPoint
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 47
  summary: >-
    The address of the entry point relative to the image base when the PE file is loaded into memory.

    For program images, this is the starting address. For device drivers, this is the address of the initialization function.

    An entry point is optional for DLLs. When no entry point is present, this field must be zero.
  syntax:
    content:
      CSharp: public int AddressOfEntryPoint { get; private set; }
    parameters:
    - id: AddressOfEntryPoint
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.AddressOfEntryPoint
- uid: System.Reflection.PortableExecutable.PEHeader.BaseOfCode
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: BaseOfCode
  fullName: System.Reflection.PortableExecutable.PEHeader.BaseOfCode
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 52
  summary: The address that is relative to the image base of the beginning-of-code section when it is loaded into memory.
  syntax:
    content:
      CSharp: public int BaseOfCode { get; private set; }
    parameters:
    - id: BaseOfCode
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.BaseOfCode
- uid: System.Reflection.PortableExecutable.PEHeader.BaseOfData
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: BaseOfData
  fullName: System.Reflection.PortableExecutable.PEHeader.BaseOfData
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 57
  summary: The address that is relative to the image base of the beginning-of-data section when it is loaded into memory.
  syntax:
    content:
      CSharp: public int BaseOfData { get; private set; }
    parameters:
    - id: BaseOfData
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.BaseOfData
- uid: System.Reflection.PortableExecutable.PEHeader.ImageBase
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ImageBase
  fullName: System.Reflection.PortableExecutable.PEHeader.ImageBase
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 67
  summary: >-
    The preferred address of the first byte of image when loaded into memory;

    must be a multiple of 64K.
  syntax:
    content:
      CSharp: public ulong ImageBase { get; private set; }
    parameters:
    - id: ImageBase
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.ImageBase
- uid: System.Reflection.PortableExecutable.PEHeader.SectionAlignment
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SectionAlignment
  fullName: System.Reflection.PortableExecutable.PEHeader.SectionAlignment
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 73
  summary: >-
    The alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to [System.Reflection.PortableExecutable.PEHeader.FileAlignment](System.Reflection.PortableExecutable.PEHeader.yml).

    The default is the page size for the architecture.
  syntax:
    content:
      CSharp: public int SectionAlignment { get; private set; }
    parameters:
    - id: SectionAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SectionAlignment
- uid: System.Reflection.PortableExecutable.PEHeader.FileAlignment
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: FileAlignment
  fullName: System.Reflection.PortableExecutable.PEHeader.FileAlignment
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 81
  summary: >-
    The alignment factor (in bytes) that is used to align the raw data of sections in the image file.

    The value should be a power of 2 between 512 and 64K, inclusive. The default is 512.

    If the [System.Reflection.PortableExecutable.PEHeader.SectionAlignment](System.Reflection.PortableExecutable.PEHeader.yml) is less than the architecture's page size,

    then [System.Reflection.PortableExecutable.PEHeader.FileAlignment](System.Reflection.PortableExecutable.PEHeader.yml) must match [System.Reflection.PortableExecutable.PEHeader.SectionAlignment](System.Reflection.PortableExecutable.PEHeader.yml).
  syntax:
    content:
      CSharp: public int FileAlignment { get; private set; }
    parameters:
    - id: FileAlignment
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.FileAlignment
- uid: System.Reflection.PortableExecutable.PEHeader.MajorOperatingSystemVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MajorOperatingSystemVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MajorOperatingSystemVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 86
  summary: The major version number of the required operating system.
  syntax:
    content:
      CSharp: public ushort MajorOperatingSystemVersion { get; private set; }
    parameters:
    - id: MajorOperatingSystemVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MajorOperatingSystemVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MinorOperatingSystemVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MinorOperatingSystemVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MinorOperatingSystemVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 91
  summary: The minor version number of the required operating system.
  syntax:
    content:
      CSharp: public ushort MinorOperatingSystemVersion { get; private set; }
    parameters:
    - id: MinorOperatingSystemVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MinorOperatingSystemVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MajorImageVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MajorImageVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MajorImageVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 96
  summary: The major version number of the image.
  syntax:
    content:
      CSharp: public ushort MajorImageVersion { get; private set; }
    parameters:
    - id: MajorImageVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MajorImageVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MinorImageVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MinorImageVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MinorImageVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 101
  summary: The minor version number of the image.
  syntax:
    content:
      CSharp: public ushort MinorImageVersion { get; private set; }
    parameters:
    - id: MinorImageVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MinorImageVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MajorSubsystemVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MajorSubsystemVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MajorSubsystemVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 106
  summary: The major version number of the subsystem.
  syntax:
    content:
      CSharp: public ushort MajorSubsystemVersion { get; private set; }
    parameters:
    - id: MajorSubsystemVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MajorSubsystemVersion
- uid: System.Reflection.PortableExecutable.PEHeader.MinorSubsystemVersion
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: MinorSubsystemVersion
  fullName: System.Reflection.PortableExecutable.PEHeader.MinorSubsystemVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 111
  summary: The minor version number of the subsystem.
  syntax:
    content:
      CSharp: public ushort MinorSubsystemVersion { get; private set; }
    parameters:
    - id: MinorSubsystemVersion
      type:
        id: System.UInt16
        name: System.UInt16
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.MinorSubsystemVersion
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfImage
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfImage
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfImage
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 117
  summary: >-
    The size (in bytes) of the image, including all headers, as the image is loaded in memory.

    It must be a multiple of [System.Reflection.PortableExecutable.PEHeader.SectionAlignment](System.Reflection.PortableExecutable.PEHeader.yml).
  syntax:
    content:
      CSharp: public int SizeOfImage { get; private set; }
    parameters:
    - id: SizeOfImage
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfImage
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfHeaders
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfHeaders
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfHeaders
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 122
  summary: The combined size of an MS DOS stub, PE header, and section headers rounded up to a multiple of FileAlignment.
  syntax:
    content:
      CSharp: public int SizeOfHeaders { get; private set; }
    parameters:
    - id: SizeOfHeaders
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfHeaders
- uid: System.Reflection.PortableExecutable.PEHeader.CheckSum
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: CheckSum
  fullName: System.Reflection.PortableExecutable.PEHeader.CheckSum
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 127
  summary: The image file checksum.
  syntax:
    content:
      CSharp: public uint CheckSum { get; private set; }
    parameters:
    - id: CheckSum
      type:
        id: System.UInt32
        name: System.UInt32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.CheckSum
- uid: System.Reflection.PortableExecutable.PEHeader.Subsystem
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: Subsystem
  fullName: System.Reflection.PortableExecutable.PEHeader.Subsystem
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 132
  summary: The subsystem that is required to run this image.
  syntax:
    content:
      CSharp: public Subsystem Subsystem { get; private set; }
    parameters:
    - id: Subsystem
      type:
        id: System.Reflection.PortableExecutable.Subsystem
        name: Subsystem
        href: System.Reflection.PortableExecutable.Subsystem.yml
  id: System.Reflection.PortableExecutable.PEHeader.Subsystem
- uid: System.Reflection.PortableExecutable.PEHeader.DllCharacteristics
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: DllCharacteristics
  fullName: System.Reflection.PortableExecutable.PEHeader.DllCharacteristics
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 134
  syntax:
    content:
      CSharp: public DllCharacteristics DllCharacteristics { get; private set; }
    parameters:
    - id: DllCharacteristics
      type:
        id: System.Reflection.PortableExecutable.DllCharacteristics
        name: DllCharacteristics
        href: System.Reflection.PortableExecutable.DllCharacteristics.yml
  id: System.Reflection.PortableExecutable.PEHeader.DllCharacteristics
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfStackReserve
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfStackReserve
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfStackReserve
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 140
  summary: >-
    The size of the stack to reserve. Only [System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit](System.Reflection.PortableExecutable.PEHeader.yml) is committed;

    the rest is made available one page at a time until the reserve size is reached.
  syntax:
    content:
      CSharp: public ulong SizeOfStackReserve { get; private set; }
    parameters:
    - id: SizeOfStackReserve
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfStackReserve
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfStackCommit
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 145
  summary: The size of the stack to commit.
  syntax:
    content:
      CSharp: public ulong SizeOfStackCommit { get; private set; }
    parameters:
    - id: SizeOfStackCommit
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapReserve
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfHeapReserve
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapReserve
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 151
  summary: >-
    The size of the local heap space to reserve. Only [System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit](System.Reflection.PortableExecutable.PEHeader.yml) is committed;

    the rest is made available one page at a time until the reserve size is reached.
  syntax:
    content:
      CSharp: public ulong SizeOfHeapReserve { get; private set; }
    parameters:
    - id: SizeOfHeapReserve
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapReserve
- uid: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: SizeOfHeapCommit
  fullName: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 156
  summary: The size of the local heap space to commit.
  syntax:
    content:
      CSharp: public ulong SizeOfHeapCommit { get; private set; }
    parameters:
    - id: SizeOfHeapCommit
      type:
        id: System.UInt64
        name: System.UInt64
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit
- uid: System.Reflection.PortableExecutable.PEHeader.NumberOfRvaAndSizes
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: NumberOfRvaAndSizes
  fullName: System.Reflection.PortableExecutable.PEHeader.NumberOfRvaAndSizes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 161
  summary: The number of data-directory entries in the remainder of the [System.Reflection.PortableExecutable.PEHeader](System.Reflection.PortableExecutable.PEHeader.yml). Each describes a location and size.
  syntax:
    content:
      CSharp: public int NumberOfRvaAndSizes { get; private set; }
    parameters:
    - id: NumberOfRvaAndSizes
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Reflection.PortableExecutable.PEHeader.NumberOfRvaAndSizes
- uid: System.Reflection.PortableExecutable.PEHeader.ExportTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ExportTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ExportTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 167
  syntax:
    content:
      CSharp: public DirectoryEntry ExportTableDirectory { get; private set; }
    parameters:
    - id: ExportTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ExportTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.ImportTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ImportTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ImportTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 168
  syntax:
    content:
      CSharp: public DirectoryEntry ImportTableDirectory { get; private set; }
    parameters:
    - id: ImportTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ImportTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.ResourceTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ResourceTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ResourceTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 169
  syntax:
    content:
      CSharp: public DirectoryEntry ResourceTableDirectory { get; private set; }
    parameters:
    - id: ResourceTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ResourceTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.ExceptionTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ExceptionTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ExceptionTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 170
  syntax:
    content:
      CSharp: public DirectoryEntry ExceptionTableDirectory { get; private set; }
    parameters:
    - id: ExceptionTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ExceptionTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.CertificateTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: CertificateTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.CertificateTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 177
  summary: >-
    The Certificate Table entry points to a table of attribute certificates.

    These certificates are not loaded into memory as part of the image.

    As such, the first field of this entry, which is normally an RVA, is a file pointer instead.
  syntax:
    content:
      CSharp: public DirectoryEntry CertificateTableDirectory { get; private set; }
    parameters:
    - id: CertificateTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.CertificateTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.BaseRelocationTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: BaseRelocationTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.BaseRelocationTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 179
  syntax:
    content:
      CSharp: public DirectoryEntry BaseRelocationTableDirectory { get; private set; }
    parameters:
    - id: BaseRelocationTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.BaseRelocationTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.DebugTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: DebugTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.DebugTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 180
  syntax:
    content:
      CSharp: public DirectoryEntry DebugTableDirectory { get; private set; }
    parameters:
    - id: DebugTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.DebugTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.CopyrightTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: CopyrightTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.CopyrightTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 181
  syntax:
    content:
      CSharp: public DirectoryEntry CopyrightTableDirectory { get; private set; }
    parameters:
    - id: CopyrightTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.CopyrightTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.GlobalPointerTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: GlobalPointerTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.GlobalPointerTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 182
  syntax:
    content:
      CSharp: public DirectoryEntry GlobalPointerTableDirectory { get; private set; }
    parameters:
    - id: GlobalPointerTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.GlobalPointerTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.ThreadLocalStorageTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ThreadLocalStorageTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ThreadLocalStorageTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 183
  syntax:
    content:
      CSharp: public DirectoryEntry ThreadLocalStorageTableDirectory { get; private set; }
    parameters:
    - id: ThreadLocalStorageTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ThreadLocalStorageTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.LoadConfigTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: LoadConfigTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.LoadConfigTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 184
  syntax:
    content:
      CSharp: public DirectoryEntry LoadConfigTableDirectory { get; private set; }
    parameters:
    - id: LoadConfigTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.LoadConfigTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.BoundImportTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: BoundImportTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.BoundImportTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 185
  syntax:
    content:
      CSharp: public DirectoryEntry BoundImportTableDirectory { get; private set; }
    parameters:
    - id: BoundImportTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.BoundImportTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.ImportAddressTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: ImportAddressTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.ImportAddressTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 186
  syntax:
    content:
      CSharp: public DirectoryEntry ImportAddressTableDirectory { get; private set; }
    parameters:
    - id: ImportAddressTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.ImportAddressTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.DelayImportTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: DelayImportTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.DelayImportTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 187
  syntax:
    content:
      CSharp: public DirectoryEntry DelayImportTableDirectory { get; private set; }
    parameters:
    - id: DelayImportTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.DelayImportTableDirectory
- uid: System.Reflection.PortableExecutable.PEHeader.CorHeaderTableDirectory
  href: System.Reflection.PortableExecutable.PEHeader.yml
  name: CorHeaderTableDirectory
  fullName: System.Reflection.PortableExecutable.PEHeader.CorHeaderTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeader.cs
    startLine: 188
  syntax:
    content:
      CSharp: public DirectoryEntry CorHeaderTableDirectory { get; private set; }
    parameters:
    - id: CorHeaderTableDirectory
      type:
        id: System.Reflection.PortableExecutable.DirectoryEntry
        name: DirectoryEntry
        href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  id: System.Reflection.PortableExecutable.PEHeader.CorHeaderTableDirectory
