id: System.Reflection.PortableExecutable.PEMemoryBlock
href: System.Reflection.PortableExecutable.PEMemoryBlock.yaml
name:
  CSharp: PEMemoryBlock
qualifiedName:
  CSharp: System.Reflection.PortableExecutable.PEMemoryBlock
type: Struct
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
  startLine: 9
syntax:
  content:
    CSharp: public struct PEMemoryBlock
inheritance:
- id: System.ValueType
  name: System.ValueType
  isExternal: true
items:
- id: System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yaml
  name:
    CSharp: Pointer
  qualifiedName:
    CSharp: System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 23
  syntax:
    content:
      CSharp: public unsafe byte *Pointer { get; }
    parameters:
    - id: Pointer
      type:
        isExternal: true
- id: System.Reflection.PortableExecutable.PEMemoryBlock.Length
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yaml
  name:
    CSharp: Length
  qualifiedName:
    CSharp: System.Reflection.PortableExecutable.PEMemoryBlock.Length
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 31
  syntax:
    content:
      CSharp: public int Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Reflection.PortableExecutable.PEMemoryBlock.GetContent
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yaml
  name:
    CSharp: GetContent
  qualifiedName:
    CSharp: System.Reflection.PortableExecutable.PEMemoryBlock.GetContent
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 41
  syntax:
    content:
      CSharp: public ImmutableArray<byte> GetContent()
    parameters: []
    return:
      id: ImmutableArray
