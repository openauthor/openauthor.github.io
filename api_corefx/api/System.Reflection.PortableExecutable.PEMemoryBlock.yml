items:
- uid: System.Reflection.PortableExecutable.PEMemoryBlock
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yml
  name: PEMemoryBlock
  fullName: System.Reflection.PortableExecutable.PEMemoryBlock
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 9
  syntax:
    content:
      CSharp: public struct PEMemoryBlock
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Reflection.PortableExecutable.PEMemoryBlock
  children:
  - System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
  - System.Reflection.PortableExecutable.PEMemoryBlock.Length
  - System.Reflection.PortableExecutable.PEMemoryBlock.GetContent
- uid: System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yml
  name: Pointer
  fullName: System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 23
  syntax:
    content:
      CSharp: public unsafe byte *Pointer { get; }
    parameters:
    - id: Pointer
      type:
        name: byte*
        isExternal: true
  id: System.Reflection.PortableExecutable.PEMemoryBlock.Pointer
- uid: System.Reflection.PortableExecutable.PEMemoryBlock.Length
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yml
  name: Length
  fullName: System.Reflection.PortableExecutable.PEMemoryBlock.Length
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 31
  syntax:
    content:
      CSharp: public int Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.PEMemoryBlock.Length
- uid: System.Reflection.PortableExecutable.PEMemoryBlock.GetContent
  href: System.Reflection.PortableExecutable.PEMemoryBlock.yml
  name: GetContent()
  fullName: System.Reflection.PortableExecutable.PEMemoryBlock.GetContent()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEMemoryBlock.cs
    startLine: 41
  syntax:
    content:
      CSharp: public ImmutableArray<byte> GetContent()
    parameters: []
    return:
      id: ImmutableArray
      type:
        id: ImmutableArray{System.Byte}
        name: ImmutableArray<byte>
        isExternal: true
  id: System.Reflection.PortableExecutable.PEMemoryBlock.GetContent
