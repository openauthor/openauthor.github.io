items:
- uid: System.Reflection.PortableExecutable.SectionHeader
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: SectionHeader
  fullName: System.Reflection.PortableExecutable.SectionHeader
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 5
  syntax:
    content:
      CSharp: public struct SectionHeader
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader
  children:
  - System.Reflection.PortableExecutable.SectionHeader.Name
  - System.Reflection.PortableExecutable.SectionHeader.VirtualSize
  - System.Reflection.PortableExecutable.SectionHeader.VirtualAddress
  - System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData
  - System.Reflection.PortableExecutable.SectionHeader.PointerToRawData
  - System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations
  - System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers
  - System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations
  - System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers
  - System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics
- uid: System.Reflection.PortableExecutable.SectionHeader.Name
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: Name
  fullName: System.Reflection.PortableExecutable.SectionHeader.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 21
  summary: An 8-byte, null-padded UTF-8 encoded string. If the string is exactly 8 characters long, there is no terminating null.
  syntax:
    content:
      CSharp: public string Name { get; }
    parameters:
    - id: Name
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.Name
- uid: System.Reflection.PortableExecutable.SectionHeader.VirtualSize
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: VirtualSize
  fullName: System.Reflection.PortableExecutable.SectionHeader.VirtualSize
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 28
  summary: >-
    The total size of the section when loaded into memory.

    If this value is greater than [System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData](System.Reflection.PortableExecutable.SectionHeader.yml), the section is zero-padded.

    This field is valid only for PE images and should be set to zero for object files.
  syntax:
    content:
      CSharp: public int VirtualSize { get; }
    parameters:
    - id: VirtualSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.VirtualSize
- uid: System.Reflection.PortableExecutable.SectionHeader.VirtualAddress
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: VirtualAddress
  fullName: System.Reflection.PortableExecutable.SectionHeader.VirtualAddress
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 36
  summary: >-
    For PE images, the address of the first byte of the section relative to the image base when the

    section is loaded into memory. For object files, this field is the address of the first byte before

    relocation is applied; for simplicity, compilers should set this to zero. Otherwise,

    it is an arbitrary value that is subtracted from offsets during relocation.
  syntax:
    content:
      CSharp: public int VirtualAddress { get; }
    parameters:
    - id: VirtualAddress
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.VirtualAddress
- uid: System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: SizeOfRawData
  fullName: System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 46
  summary: >-
    The size of the section (for object files) or the size of the initialized data on disk (for image files).

    For PE images, this must be a multiple of [System.Reflection.PortableExecutable.PEHeader.FileAlignment](System.Reflection.PortableExecutable.PEHeader.yml).

    If this is less than [System.Reflection.PortableExecutable.SectionHeader.VirtualSize](System.Reflection.PortableExecutable.SectionHeader.yml), the remainder of the section is zero-filled.

    Because the [System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData](System.Reflection.PortableExecutable.SectionHeader.yml) field is rounded but the [System.Reflection.PortableExecutable.SectionHeader.VirtualSize](System.Reflection.PortableExecutable.SectionHeader.yml) field is not,

    it is possible for [System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData](System.Reflection.PortableExecutable.SectionHeader.yml) to be greater than [System.Reflection.PortableExecutable.SectionHeader.VirtualSize](System.Reflection.PortableExecutable.SectionHeader.yml) as well.

    When a section contains only uninitialized data, this field should be zero.
  syntax:
    content:
      CSharp: public int SizeOfRawData { get; }
    parameters:
    - id: SizeOfRawData
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData
- uid: System.Reflection.PortableExecutable.SectionHeader.PointerToRawData
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: PointerToRawData
  fullName: System.Reflection.PortableExecutable.SectionHeader.PointerToRawData
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 54
  summary: >-
    The file pointer to the first page of the section within the COFF file.

    For PE images, this must be a multiple of [System.Reflection.PortableExecutable.PEHeader.FileAlignment](System.Reflection.PortableExecutable.PEHeader.yml).

    For object files, the value should be aligned on a 4 byte boundary for best performance.

    When a section contains only uninitialized data, this field should be zero.
  syntax:
    content:
      CSharp: public int PointerToRawData { get; }
    parameters:
    - id: PointerToRawData
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.PointerToRawData
- uid: System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: PointerToRelocations
  fullName: System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 60
  summary: >-
    The file pointer to the beginning of relocation entries for the section.

    This is set to zero for PE images or if there are no relocations.
  syntax:
    content:
      CSharp: public int PointerToRelocations { get; }
    parameters:
    - id: PointerToRelocations
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations
- uid: System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: PointerToLineNumbers
  fullName: System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 67
  summary: >-
    The file pointer to the beginning of line-number entries for the section.

    This is set to zero if there are no COFF line numbers.

    This value should be zero for an image because COFF debugging information is deprecated.
  syntax:
    content:
      CSharp: public int PointerToLineNumbers { get; }
    parameters:
    - id: PointerToLineNumbers
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers
- uid: System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: NumberOfRelocations
  fullName: System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 72
  summary: The number of relocation entries for the section. This is set to zero for PE images.
  syntax:
    content:
      CSharp: public ushort NumberOfRelocations { get; }
    parameters:
    - id: NumberOfRelocations
      type:
        id: System.UInt16
        name: ushort
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations
- uid: System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: NumberOfLineNumbers
  fullName: System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 78
  summary: >-
    The number of line-number entries for the section.

    This value should be zero for an image because COFF debugging information is deprecated.
  syntax:
    content:
      CSharp: public ushort NumberOfLineNumbers { get; }
    parameters:
    - id: NumberOfLineNumbers
      type:
        id: System.UInt16
        name: ushort
        isExternal: true
  id: System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers
- uid: System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics
  href: System.Reflection.PortableExecutable.SectionHeader.yml
  name: SectionCharacteristics
  fullName: System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/SectionHeader.cs
    startLine: 83
  summary: The flags that describe the characteristics of the section.
  syntax:
    content:
      CSharp: public SectionCharacteristics SectionCharacteristics { get; }
    parameters:
    - id: SectionCharacteristics
      type:
        id: System.Reflection.PortableExecutable.SectionCharacteristics
        name: SectionCharacteristics
        href: System.Reflection.PortableExecutable.SectionCharacteristics.yml
  id: System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics
