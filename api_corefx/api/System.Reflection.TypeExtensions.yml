items:
- uid: System.Reflection.TypeExtensions
  href: System.Reflection.TypeExtensions.yml
  name: TypeExtensions
  fullName: System.Reflection.TypeExtensions
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 11
  syntax:
    content:
      CSharp: public class TypeExtensions
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Reflection.TypeExtensions
  children:
  - System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
  - System.Reflection.TypeExtensions.GetConstructors(System.Type)
  - System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  - System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
  - System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetEvents(System.Type)
  - System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetField(System.Type,System.String)
  - System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetFields(System.Type)
  - System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  - System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  - System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
  - System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetMembers(System.Type)
  - System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
  - System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
  - System.Reflection.TypeExtensions.GetMethods(System.Type)
  - System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetProperties(System.Type)
  - System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
  - System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
  - System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
  - System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
  - System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
  - System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
- uid: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
  href: System.Reflection.TypeExtensions.yml
  name: GetConstructor(Type, Type[])
  fullName: System.Reflection.TypeExtensions.GetConstructor(System.Type, System.Type[])
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 13
  syntax:
    content:
      CSharp: public static ConstructorInfo GetConstructor(Type type, Type[] types)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: types
      type:
        id: System.Array
        name: Type[]
        isExternal: true
    return:
      id: ConstructorInfo
      type:
        id: System.Reflection.ConstructorInfo
        name: ConstructorInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetConstructor(System.Type,System.Type[])
- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetConstructors(Type)
  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 19
  syntax:
    content:
      CSharp: public static ConstructorInfo[] GetConstructors(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: ConstructorInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetConstructors(System.Type)
- uid: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetConstructors(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetConstructors(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 25
  syntax:
    content:
      CSharp: public static ConstructorInfo[] GetConstructors(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: ConstructorInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetConstructors(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetDefaultMembers(Type)
  fullName: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 31
  syntax:
    content:
      CSharp: public static MemberInfo[] GetDefaultMembers(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetDefaultMembers(System.Type)
- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
  href: System.Reflection.TypeExtensions.yml
  name: GetEvent(Type, string)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 37
  syntax:
    content:
      CSharp: public static EventInfo GetEvent(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: EventInfo
      type:
        id: System.Reflection.EventInfo
        name: EventInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetEvent(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvent(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 43
  syntax:
    content:
      CSharp: public static EventInfo GetEvent(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      id: EventInfo
      type:
        id: System.Reflection.EventInfo
        name: EventInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetEvent(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetEvents(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetEvents(Type)
  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 49
  syntax:
    content:
      CSharp: public static EventInfo[] GetEvents(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: EventInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetEvents(System.Type)
- uid: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetEvents(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetEvents(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 55
  syntax:
    content:
      CSharp: public static EventInfo[] GetEvents(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: EventInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetEvents(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
  href: System.Reflection.TypeExtensions.yml
  name: GetField(Type, string)
  fullName: System.Reflection.TypeExtensions.GetField(System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 61
  syntax:
    content:
      CSharp: public static FieldInfo GetField(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: FieldInfo
      type:
        id: System.Reflection.FieldInfo
        name: FieldInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetField(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetField(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetField(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 67
  syntax:
    content:
      CSharp: public static FieldInfo GetField(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      id: FieldInfo
      type:
        id: System.Reflection.FieldInfo
        name: FieldInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetField(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetFields(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetFields(Type)
  fullName: System.Reflection.TypeExtensions.GetFields(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 73
  syntax:
    content:
      CSharp: public static FieldInfo[] GetFields(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: FieldInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetFields(System.Type)
- uid: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetFields(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetFields(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 79
  syntax:
    content:
      CSharp: public static FieldInfo[] GetFields(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: FieldInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetGenericArguments(Type)
  fullName: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 85
  syntax:
    content:
      CSharp: public static Type[] GetGenericArguments(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: Type[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetGenericArguments(System.Type)
- uid: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetInterfaces(Type)
  fullName: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 91
  syntax:
    content:
      CSharp: public static Type[] GetInterfaces(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: Type[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetInterfaces(System.Type)
- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
  href: System.Reflection.TypeExtensions.yml
  name: GetMember(Type, string)
  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 97
  syntax:
    content:
      CSharp: public static MemberInfo[] GetMember(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMember(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetMember(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMember(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 103
  syntax:
    content:
      CSharp: public static MemberInfo[] GetMember(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMember(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMembers(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetMembers(Type)
  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 109
  syntax:
    content:
      CSharp: public static MemberInfo[] GetMembers(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMembers(System.Type)
- uid: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetMembers(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMembers(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 115
  syntax:
    content:
      CSharp: public static MemberInfo[] GetMembers(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: MemberInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMembers(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
  href: System.Reflection.TypeExtensions.yml
  name: GetMethod(Type, string)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 121
  syntax:
    content:
      CSharp: public static MethodInfo GetMethod(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: MethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetMethod(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 127
  syntax:
    content:
      CSharp: public static MethodInfo GetMethod(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      id: MethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
  href: System.Reflection.TypeExtensions.yml
  name: GetMethod(Type, string, Type[])
  fullName: System.Reflection.TypeExtensions.GetMethod(System.Type, string, System.Type[])
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 133
  syntax:
    content:
      CSharp: public static MethodInfo GetMethod(Type type, string name, Type[] types)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: types
      type:
        id: System.Array
        name: Type[]
        isExternal: true
    return:
      id: MethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: MethodInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMethod(System.Type,System.String,System.Type[])
- uid: System.Reflection.TypeExtensions.GetMethods(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetMethods(Type)
  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 139
  syntax:
    content:
      CSharp: public static MethodInfo[] GetMethods(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: MethodInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMethods(System.Type)
- uid: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetMethods(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetMethods(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 145
  syntax:
    content:
      CSharp: public static MethodInfo[] GetMethods(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: MethodInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetMethods(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetNestedType(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedType(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 151
  syntax:
    content:
      CSharp: public static Type GetNestedType(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      id: Type
      type:
        id: System.Type
        name: Type
        isExternal: true
  id: System.Reflection.TypeExtensions.GetNestedType(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetNestedTypes(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetNestedTypes(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 157
  syntax:
    content:
      CSharp: public static Type[] GetNestedTypes(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: Type[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetNestedTypes(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperties(System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetProperties(Type)
  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 163
  syntax:
    content:
      CSharp: public static PropertyInfo[] GetProperties(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      type:
        id: System.Array
        name: PropertyInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperties(System.Type)
- uid: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetProperties(Type, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperties(System.Type, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 169
  syntax:
    content:
      CSharp: public static PropertyInfo[] GetProperties(Type type, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      type:
        id: System.Array
        name: PropertyInfo[]
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperties(System.Type,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
  href: System.Reflection.TypeExtensions.yml
  name: GetProperty(Type, string)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 175
  syntax:
    content:
      CSharp: public static PropertyInfo GetProperty(Type type, string name)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: PropertyInfo
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
  href: System.Reflection.TypeExtensions.yml
  name: GetProperty(Type, string, BindingFlags)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, string, System.Reflection.BindingFlags)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 181
  syntax:
    content:
      CSharp: public static PropertyInfo GetProperty(Type type, string name, BindingFlags bindingAttr)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: bindingAttr
      type:
        id: System.Reflection.BindingFlags
        name: BindingFlags
        isExternal: true
    return:
      id: PropertyInfo
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: GetProperty(Type, string, Type)
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, string, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 187
  syntax:
    content:
      CSharp: public static PropertyInfo GetProperty(Type type, string name, Type returnType)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: returnType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: PropertyInfo
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type)
- uid: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
  href: System.Reflection.TypeExtensions.yml
  name: GetProperty(Type, string, Type, Type[])
  fullName: System.Reflection.TypeExtensions.GetProperty(System.Type, string, System.Type, System.Type[])
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 193
  syntax:
    content:
      CSharp: public static PropertyInfo GetProperty(Type type, string name, Type returnType, Type[] types)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: returnType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: types
      type:
        id: System.Array
        name: Type[]
        isExternal: true
    return:
      id: PropertyInfo
      type:
        id: System.Reflection.PropertyInfo
        name: PropertyInfo
        isExternal: true
  id: System.Reflection.TypeExtensions.GetProperty(System.Type,System.String,System.Type,System.Type[])
- uid: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
  href: System.Reflection.TypeExtensions.yml
  name: IsAssignableFrom(Type, Type)
  fullName: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 199
  syntax:
    content:
      CSharp: public static bool IsAssignableFrom(Type type, Type c)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: c
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.TypeExtensions.IsAssignableFrom(System.Type,System.Type)
- uid: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
  href: System.Reflection.TypeExtensions.yml
  name: IsInstanceOfType(Type, object)
  fullName: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.TypeExtensions/src/System/Reflection/TypeExtensions.CoreCLR.cs
    startLine: 205
  syntax:
    content:
      CSharp: public static bool IsInstanceOfType(Type type, object o)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: o
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Reflection.TypeExtensions.IsInstanceOfType(System.Type,System.Object)
