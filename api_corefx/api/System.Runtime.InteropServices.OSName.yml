items:
- uid: System.Runtime.InteropServices.OSName
  href: System.Runtime.InteropServices.OSName.yml
  name: OSName
  fullName: System.Runtime.InteropServices.OSName
  type: Struct
  source:
    remote: &o0
      path: src/System.Runtime.Environment/src/OSName.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 5
  syntax:
    content:
      CSharp: 'public struct OSName : IEquatable<OSName>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: System.Runtime.InteropServices.OSName
  children:
  - System.Runtime.InteropServices.OSName.Windows
  - System.Runtime.InteropServices.OSName.Linux
  - System.Runtime.InteropServices.OSName.OSX
  - System.Runtime.InteropServices.OSName.#ctor(System.String)
  - System.Runtime.InteropServices.OSName.Equals(System.Runtime.InteropServices.OSName)
  - System.Runtime.InteropServices.OSName.Equals(System.Object)
  - System.Runtime.InteropServices.OSName.GetHashCode
  - System.Runtime.InteropServices.OSName.ToString
  - System.Runtime.InteropServices.OSName.op_Equality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
  - System.Runtime.InteropServices.OSName.op_Inequality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
- uid: System.Runtime.InteropServices.OSName.Windows
  href: System.Runtime.InteropServices.OSName.yml
  name: Windows
  fullName: System.Runtime.InteropServices.OSName.Windows
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 13
  syntax:
    content:
      CSharp: public static readonly OSName Windows;
  id: System.Runtime.InteropServices.OSName.Windows
- uid: System.Runtime.InteropServices.OSName.Linux
  href: System.Runtime.InteropServices.OSName.yml
  name: Linux
  fullName: System.Runtime.InteropServices.OSName.Linux
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 14
  syntax:
    content:
      CSharp: public static readonly OSName Linux;
  id: System.Runtime.InteropServices.OSName.Linux
- uid: System.Runtime.InteropServices.OSName.OSX
  href: System.Runtime.InteropServices.OSName.yml
  name: OSX
  fullName: System.Runtime.InteropServices.OSName.OSX
  type: Field
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 15
  syntax:
    content:
      CSharp: public static readonly OSName OSX;
  id: System.Runtime.InteropServices.OSName.OSX
- uid: System.Runtime.InteropServices.OSName.#ctor(System.String)
  href: System.Runtime.InteropServices.OSName.yml
  name: OSName(string)
  fullName: System.Runtime.InteropServices.OSName.OSName(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 17
  syntax:
    content:
      CSharp: public OSName(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Runtime.InteropServices.OSName.#ctor(System.String)
- uid: System.Runtime.InteropServices.OSName.Equals(System.Runtime.InteropServices.OSName)
  href: System.Runtime.InteropServices.OSName.yml
  name: Equals(OSName)
  fullName: System.Runtime.InteropServices.OSName.Equals(System.Runtime.InteropServices.OSName)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 25
  syntax:
    content:
      CSharp: public bool Equals(OSName other)
    parameters:
    - id: other
      type:
        id: System.Runtime.InteropServices.OSName
        name: OSName
        href: System.Runtime.InteropServices.OSName.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Runtime.InteropServices.OSName.Equals(System.Runtime.InteropServices.OSName)
- uid: System.Runtime.InteropServices.OSName.Equals(System.Object)
  href: System.Runtime.InteropServices.OSName.yml
  name: Equals(object)
  fullName: System.Runtime.InteropServices.OSName.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 30
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Runtime.InteropServices.OSName.Equals(System.Object)
- uid: System.Runtime.InteropServices.OSName.GetHashCode
  href: System.Runtime.InteropServices.OSName.yml
  name: GetHashCode()
  fullName: System.Runtime.InteropServices.OSName.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 40
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Runtime.InteropServices.OSName.GetHashCode
- uid: System.Runtime.InteropServices.OSName.ToString
  href: System.Runtime.InteropServices.OSName.yml
  name: ToString()
  fullName: System.Runtime.InteropServices.OSName.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 45
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Runtime.InteropServices.OSName.ToString
- uid: System.Runtime.InteropServices.OSName.op_Equality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
  href: System.Runtime.InteropServices.OSName.yml
  name: operator ==(OSName, OSName)
  fullName: System.Runtime.InteropServices.OSName.operator ==(System.Runtime.InteropServices.OSName, System.Runtime.InteropServices.OSName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 50
  syntax:
    content:
      CSharp: public static bool operator ==(OSName left, OSName right)
    parameters:
    - id: left
      type:
        id: System.Runtime.InteropServices.OSName
        name: OSName
        href: System.Runtime.InteropServices.OSName.yml
    - id: right
      type:
        id: System.Runtime.InteropServices.OSName
        name: OSName
        href: System.Runtime.InteropServices.OSName.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Runtime.InteropServices.OSName.op_Equality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
- uid: System.Runtime.InteropServices.OSName.op_Inequality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
  href: System.Runtime.InteropServices.OSName.yml
  name: operator !=(OSName, OSName)
  fullName: System.Runtime.InteropServices.OSName.operator !=(System.Runtime.InteropServices.OSName, System.Runtime.InteropServices.OSName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Runtime.Environment/src/OSName.cs
    startLine: 55
  syntax:
    content:
      CSharp: public static bool operator !=(OSName left, OSName right)
    parameters:
    - id: left
      type:
        id: System.Runtime.InteropServices.OSName
        name: OSName
        href: System.Runtime.InteropServices.OSName.yml
    - id: right
      type:
        id: System.Runtime.InteropServices.OSName
        name: OSName
        href: System.Runtime.InteropServices.OSName.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Runtime.InteropServices.OSName.op_Inequality(System.Runtime.InteropServices.OSName,System.Runtime.InteropServices.OSName)
