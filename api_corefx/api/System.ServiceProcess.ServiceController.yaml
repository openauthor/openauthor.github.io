id: System.ServiceProcess.ServiceController
href: System.ServiceProcess.ServiceController.yaml
name:
  CSharp: ServiceController
qualifiedName:
  CSharp: System.ServiceProcess.ServiceController
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
  startLine: 18
syntax:
  content:
    CSharp: public class ServiceController
inheritance:
- id: IDisposable
  name: IDisposable
  isExternal: true
items:
- id: System.ServiceProcess.ServiceController.#ctor(System.String)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServiceController(System.String)
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServiceController(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 40
  syntax:
    content:
      CSharp: 'public ServiceController(string name): this (name, DefaultMachineName)'
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.#ctor(System.String,System.String)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServiceController(System.String,System.String)
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServiceController(System.String,System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 46
  syntax:
    content:
      CSharp: public ServiceController(string name, string machineName)
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.CanPauseAndContinue
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: CanPauseAndContinue
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.CanPauseAndContinue
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 92
  syntax:
    content:
      CSharp: public bool CanPauseAndContinue { get; }
    parameters:
    - id: CanPauseAndContinue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.ServiceProcess.ServiceController.CanShutdown
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: CanShutdown
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.CanShutdown
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 103
  syntax:
    content:
      CSharp: public bool CanShutdown { get; }
    parameters:
    - id: CanShutdown
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.ServiceProcess.ServiceController.CanStop
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: CanStop
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.CanStop
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 113
  syntax:
    content:
      CSharp: public bool CanStop { get; }
    parameters:
    - id: CanStop
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
- id: System.ServiceProcess.ServiceController.DisplayName
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: DisplayName
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.DisplayName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 123
  syntax:
    content:
      CSharp: public string DisplayName { get; }
    parameters:
    - id: DisplayName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.ServiceProcess.ServiceController.DependentServices
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: DependentServices
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.DependentServices
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 135
  syntax:
    content:
      CSharp: public ServiceController[] DependentServices { get; }
    parameters:
    - id: DependentServices
      type:
        id: System.Array
        name: System.Array
        isExternal: true
- id: System.ServiceProcess.ServiceController.MachineName
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: MachineName
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.MachineName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 196
  syntax:
    content:
      CSharp: public string MachineName { get; }
    parameters:
    - id: MachineName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.ServiceProcess.ServiceController.ServiceName
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServiceName
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServiceName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 205
  syntax:
    content:
      CSharp: public string ServiceName { get; }
    parameters:
    - id: ServiceName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.ServiceProcess.ServiceController.ServicesDependedOn
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServicesDependedOn
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServicesDependedOn
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 215
  syntax:
    content:
      CSharp: public unsafe ServiceController[] ServicesDependedOn { get; }
    parameters:
    - id: ServicesDependedOn
      type:
        id: System.Array
        name: System.Array
        isExternal: true
- id: System.ServiceProcess.ServiceController.ServiceHandle
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServiceHandle
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServiceHandle
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 307
  syntax:
    content:
      CSharp: public SafeHandle ServiceHandle { get; }
    parameters:
    - id: ServiceHandle
      type:
        id: SafeHandle
        name: SafeHandle
        isExternal: true
- id: System.ServiceProcess.ServiceController.Status
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Status
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Status
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 316
  syntax:
    content:
      CSharp: public ServiceControllerStatus Status { get; }
    parameters:
    - id: Status
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yaml
- id: System.ServiceProcess.ServiceController.ServiceType
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: ServiceType
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.ServiceType
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 326
  syntax:
    content:
      CSharp: public ServiceType ServiceType { get; }
    parameters:
    - id: ServiceType
      type:
        id: System.ServiceProcess.ServiceType
        name: ServiceType
        href: System.ServiceProcess.ServiceType.yaml
- id: System.ServiceProcess.ServiceController.Dispose
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Dispose
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Dispose
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 344
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.GetDevices
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: GetDevices
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.GetDevices
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 509
  syntax:
    content:
      CSharp: public static ServiceController[] GetDevices()
    parameters: []
    return: {}
- id: System.ServiceProcess.ServiceController.GetDevices(System.String)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: GetDevices
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.GetDevices(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 515
  syntax:
    content:
      CSharp: public static ServiceController[] GetDevices(string machineName)
    parameters:
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return: {}
- id: System.ServiceProcess.ServiceController.GetServices
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: GetServices
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.GetServices
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 537
  syntax:
    content:
      CSharp: public static ServiceController[] GetServices()
    parameters: []
    return: {}
- id: System.ServiceProcess.ServiceController.GetServices(System.String)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: GetServices
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.GetServices(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 543
  syntax:
    content:
      CSharp: public static ServiceController[] GetServices(string machineName)
    parameters:
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return: {}
- id: System.ServiceProcess.ServiceController.Pause
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Pause
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Pause
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 632
  syntax:
    content:
      CSharp: public unsafe void Pause()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.Continue
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Continue
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Continue
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 652
  syntax:
    content:
      CSharp: public unsafe void Continue()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.Refresh
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Refresh
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Refresh
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 672
  syntax:
    content:
      CSharp: public void Refresh()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.Start
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Start
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Start
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 680
  syntax:
    content:
      CSharp: public void Start()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.Start(System.String[])
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Start
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Start(System.String[])
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 686
  syntax:
    content:
      CSharp: public void Start(string[] args)
    parameters:
    - id: args
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.Stop
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: Stop
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.Stop
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 742
  syntax:
    content:
      CSharp: public unsafe void Stop()
    parameters: []
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: WaitForStatus
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 776
  syntax:
    content:
      CSharp: public void WaitForStatus(ServiceControllerStatus desiredStatus)
    parameters:
    - id: desiredStatus
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yaml
    return:
      id: Void
- id: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,TimeSpan)
  href: System.ServiceProcess.ServiceController.yaml
  name:
    CSharp: WaitForStatus
  qualifiedName:
    CSharp: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 783
  syntax:
    content:
      CSharp: public void WaitForStatus(ServiceControllerStatus desiredStatus, TimeSpan timeout)
    parameters:
    - id: desiredStatus
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yaml
    - id: timeout
      type:
        id: TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: Void
