items:
- uid: System.ServiceProcess.ServiceController
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceController
  fullName: System.ServiceProcess.ServiceController
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 18
  syntax:
    content:
      CSharp: public class ServiceController
  inheritance:
  - id: IDisposable
    name: IDisposable
    isExternal: true
  id: System.ServiceProcess.ServiceController
  children:
  - System.ServiceProcess.ServiceController.#ctor(System.String)
  - System.ServiceProcess.ServiceController.#ctor(System.String,System.String)
  - System.ServiceProcess.ServiceController.CanPauseAndContinue
  - System.ServiceProcess.ServiceController.CanShutdown
  - System.ServiceProcess.ServiceController.CanStop
  - System.ServiceProcess.ServiceController.DisplayName
  - System.ServiceProcess.ServiceController.DependentServices
  - System.ServiceProcess.ServiceController.MachineName
  - System.ServiceProcess.ServiceController.ServiceName
  - System.ServiceProcess.ServiceController.ServicesDependedOn
  - System.ServiceProcess.ServiceController.ServiceHandle
  - System.ServiceProcess.ServiceController.Status
  - System.ServiceProcess.ServiceController.ServiceType
  - System.ServiceProcess.ServiceController.Dispose
  - System.ServiceProcess.ServiceController.GetDevices
  - System.ServiceProcess.ServiceController.GetDevices(System.String)
  - System.ServiceProcess.ServiceController.GetServices
  - System.ServiceProcess.ServiceController.GetServices(System.String)
  - System.ServiceProcess.ServiceController.Pause
  - System.ServiceProcess.ServiceController.Continue
  - System.ServiceProcess.ServiceController.Refresh
  - System.ServiceProcess.ServiceController.Start
  - System.ServiceProcess.ServiceController.Start(System.String[])
  - System.ServiceProcess.ServiceController.Stop
  - System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
  - System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,TimeSpan)
- uid: System.ServiceProcess.ServiceController.#ctor(System.String)
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceController(string)
  fullName: System.ServiceProcess.ServiceController.ServiceController(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 40
  syntax:
    content:
      CSharp: 'public ServiceController(string name): this (name, DefaultMachineName)'
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ServiceProcess.ServiceController.#ctor(System.String)
- uid: System.ServiceProcess.ServiceController.#ctor(System.String,System.String)
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceController(string, string)
  fullName: System.ServiceProcess.ServiceController.ServiceController(string, string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 46
  syntax:
    content:
      CSharp: public ServiceController(string name, string machineName)
    parameters:
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ServiceProcess.ServiceController.#ctor(System.String,System.String)
- uid: System.ServiceProcess.ServiceController.CanPauseAndContinue
  href: System.ServiceProcess.ServiceController.yml
  name: CanPauseAndContinue
  fullName: System.ServiceProcess.ServiceController.CanPauseAndContinue
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 92
  syntax:
    content:
      CSharp: public bool CanPauseAndContinue { get; }
    parameters:
    - id: CanPauseAndContinue
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.ServiceProcess.ServiceController.CanPauseAndContinue
- uid: System.ServiceProcess.ServiceController.CanShutdown
  href: System.ServiceProcess.ServiceController.yml
  name: CanShutdown
  fullName: System.ServiceProcess.ServiceController.CanShutdown
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 103
  syntax:
    content:
      CSharp: public bool CanShutdown { get; }
    parameters:
    - id: CanShutdown
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.ServiceProcess.ServiceController.CanShutdown
- uid: System.ServiceProcess.ServiceController.CanStop
  href: System.ServiceProcess.ServiceController.yml
  name: CanStop
  fullName: System.ServiceProcess.ServiceController.CanStop
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 113
  syntax:
    content:
      CSharp: public bool CanStop { get; }
    parameters:
    - id: CanStop
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.ServiceProcess.ServiceController.CanStop
- uid: System.ServiceProcess.ServiceController.DisplayName
  href: System.ServiceProcess.ServiceController.yml
  name: DisplayName
  fullName: System.ServiceProcess.ServiceController.DisplayName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 123
  syntax:
    content:
      CSharp: public string DisplayName { get; }
    parameters:
    - id: DisplayName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ServiceProcess.ServiceController.DisplayName
- uid: System.ServiceProcess.ServiceController.DependentServices
  href: System.ServiceProcess.ServiceController.yml
  name: DependentServices
  fullName: System.ServiceProcess.ServiceController.DependentServices
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 135
  syntax:
    content:
      CSharp: public ServiceController[] DependentServices { get; }
    parameters:
    - id: DependentServices
      type:
        id: System.Array
        name: System.Array
        isExternal: true
  id: System.ServiceProcess.ServiceController.DependentServices
- uid: System.ServiceProcess.ServiceController.MachineName
  href: System.ServiceProcess.ServiceController.yml
  name: MachineName
  fullName: System.ServiceProcess.ServiceController.MachineName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 196
  syntax:
    content:
      CSharp: public string MachineName { get; }
    parameters:
    - id: MachineName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ServiceProcess.ServiceController.MachineName
- uid: System.ServiceProcess.ServiceController.ServiceName
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceName
  fullName: System.ServiceProcess.ServiceController.ServiceName
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 205
  syntax:
    content:
      CSharp: public string ServiceName { get; }
    parameters:
    - id: ServiceName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.ServiceProcess.ServiceController.ServiceName
- uid: System.ServiceProcess.ServiceController.ServicesDependedOn
  href: System.ServiceProcess.ServiceController.yml
  name: ServicesDependedOn
  fullName: System.ServiceProcess.ServiceController.ServicesDependedOn
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 215
  syntax:
    content:
      CSharp: public unsafe ServiceController[] ServicesDependedOn { get; }
    parameters:
    - id: ServicesDependedOn
      type:
        id: System.Array
        name: System.Array
        isExternal: true
  id: System.ServiceProcess.ServiceController.ServicesDependedOn
- uid: System.ServiceProcess.ServiceController.ServiceHandle
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceHandle
  fullName: System.ServiceProcess.ServiceController.ServiceHandle
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 307
  syntax:
    content:
      CSharp: public SafeHandle ServiceHandle { get; }
    parameters:
    - id: ServiceHandle
      type:
        id: SafeHandle
        name: SafeHandle
        isExternal: true
  id: System.ServiceProcess.ServiceController.ServiceHandle
- uid: System.ServiceProcess.ServiceController.Status
  href: System.ServiceProcess.ServiceController.yml
  name: Status
  fullName: System.ServiceProcess.ServiceController.Status
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 316
  syntax:
    content:
      CSharp: public ServiceControllerStatus Status { get; }
    parameters:
    - id: Status
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yml
  id: System.ServiceProcess.ServiceController.Status
- uid: System.ServiceProcess.ServiceController.ServiceType
  href: System.ServiceProcess.ServiceController.yml
  name: ServiceType
  fullName: System.ServiceProcess.ServiceController.ServiceType
  type: Property
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 326
  syntax:
    content:
      CSharp: public ServiceType ServiceType { get; }
    parameters:
    - id: ServiceType
      type:
        id: System.ServiceProcess.ServiceType
        name: ServiceType
        href: System.ServiceProcess.ServiceType.yml
  id: System.ServiceProcess.ServiceController.ServiceType
- uid: System.ServiceProcess.ServiceController.Dispose
  href: System.ServiceProcess.ServiceController.yml
  name: Dispose()
  fullName: System.ServiceProcess.ServiceController.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 344
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
  id: System.ServiceProcess.ServiceController.Dispose
- uid: System.ServiceProcess.ServiceController.GetDevices
  href: System.ServiceProcess.ServiceController.yml
  name: GetDevices()
  fullName: System.ServiceProcess.ServiceController.GetDevices()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 509
  syntax:
    content:
      CSharp: public static ServiceController[] GetDevices()
    parameters: []
    return: {}
  id: System.ServiceProcess.ServiceController.GetDevices
- uid: System.ServiceProcess.ServiceController.GetDevices(System.String)
  href: System.ServiceProcess.ServiceController.yml
  name: GetDevices(string)
  fullName: System.ServiceProcess.ServiceController.GetDevices(string)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 515
  syntax:
    content:
      CSharp: public static ServiceController[] GetDevices(string machineName)
    parameters:
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return: {}
  id: System.ServiceProcess.ServiceController.GetDevices(System.String)
- uid: System.ServiceProcess.ServiceController.GetServices
  href: System.ServiceProcess.ServiceController.yml
  name: GetServices()
  fullName: System.ServiceProcess.ServiceController.GetServices()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 537
  syntax:
    content:
      CSharp: public static ServiceController[] GetServices()
    parameters: []
    return: {}
  id: System.ServiceProcess.ServiceController.GetServices
- uid: System.ServiceProcess.ServiceController.GetServices(System.String)
  href: System.ServiceProcess.ServiceController.yml
  name: GetServices(string)
  fullName: System.ServiceProcess.ServiceController.GetServices(string)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 543
  syntax:
    content:
      CSharp: public static ServiceController[] GetServices(string machineName)
    parameters:
    - id: machineName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return: {}
  id: System.ServiceProcess.ServiceController.GetServices(System.String)
- uid: System.ServiceProcess.ServiceController.Pause
  href: System.ServiceProcess.ServiceController.yml
  name: Pause()
  fullName: System.ServiceProcess.ServiceController.Pause()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 632
  syntax:
    content:
      CSharp: public unsafe void Pause()
    parameters: []
  id: System.ServiceProcess.ServiceController.Pause
- uid: System.ServiceProcess.ServiceController.Continue
  href: System.ServiceProcess.ServiceController.yml
  name: Continue()
  fullName: System.ServiceProcess.ServiceController.Continue()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 652
  syntax:
    content:
      CSharp: public unsafe void Continue()
    parameters: []
  id: System.ServiceProcess.ServiceController.Continue
- uid: System.ServiceProcess.ServiceController.Refresh
  href: System.ServiceProcess.ServiceController.yml
  name: Refresh()
  fullName: System.ServiceProcess.ServiceController.Refresh()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 672
  syntax:
    content:
      CSharp: public void Refresh()
    parameters: []
  id: System.ServiceProcess.ServiceController.Refresh
- uid: System.ServiceProcess.ServiceController.Start
  href: System.ServiceProcess.ServiceController.yml
  name: Start()
  fullName: System.ServiceProcess.ServiceController.Start()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 680
  syntax:
    content:
      CSharp: public void Start()
    parameters: []
  id: System.ServiceProcess.ServiceController.Start
- uid: System.ServiceProcess.ServiceController.Start(System.String[])
  href: System.ServiceProcess.ServiceController.yml
  name: Start(string[])
  fullName: System.ServiceProcess.ServiceController.Start(string[])
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 686
  syntax:
    content:
      CSharp: public void Start(string[] args)
    parameters:
    - id: args
      type:
        id: System.Array
        name: System.Array
        isExternal: true
  id: System.ServiceProcess.ServiceController.Start(System.String[])
- uid: System.ServiceProcess.ServiceController.Stop
  href: System.ServiceProcess.ServiceController.yml
  name: Stop()
  fullName: System.ServiceProcess.ServiceController.Stop()
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 742
  syntax:
    content:
      CSharp: public unsafe void Stop()
    parameters: []
  id: System.ServiceProcess.ServiceController.Stop
- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
  href: System.ServiceProcess.ServiceController.yml
  name: WaitForStatus(ServiceControllerStatus)
  fullName: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 776
  syntax:
    content:
      CSharp: public void WaitForStatus(ServiceControllerStatus desiredStatus)
    parameters:
    - id: desiredStatus
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yml
  id: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)
- uid: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,TimeSpan)
  href: System.ServiceProcess.ServiceController.yml
  name: WaitForStatus(ServiceControllerStatus, TimeSpan)
  fullName: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus, TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.ServiceProcess.ServiceController/src/System/ServiceProcess/ServiceController.cs
    startLine: 783
  syntax:
    content:
      CSharp: public void WaitForStatus(ServiceControllerStatus desiredStatus, TimeSpan timeout)
    parameters:
    - id: desiredStatus
      type:
        id: System.ServiceProcess.ServiceControllerStatus
        name: ServiceControllerStatus
        href: System.ServiceProcess.ServiceControllerStatus.yml
    - id: timeout
      type:
        id: TimeSpan
        name: TimeSpan
        isExternal: true
  id: System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,TimeSpan)
