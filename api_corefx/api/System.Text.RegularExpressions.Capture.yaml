id: System.Text.RegularExpressions.Capture
href: System.Text.RegularExpressions.Capture.yaml
name:
  CSharp: Capture
qualifiedName:
  CSharp: System.Text.RegularExpressions.Capture
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
  startLine: 14
summary: >-
  Represents the results from a single subexpression capture. The object represents

  one substring for a single successful capture.
syntax:
  content:
    CSharp: public class Capture
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Text.RegularExpressions.Capture.Index
  href: System.Text.RegularExpressions.Capture.yaml
  name:
    CSharp: Index
  qualifiedName:
    CSharp: System.Text.RegularExpressions.Capture.Index
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 34
  summary: >-
    Returns the position in the original string where the first character of

    captured substring was found.
  syntax:
    content:
      CSharp: public int Index { get; }
    parameters:
    - id: Index
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Text.RegularExpressions.Capture.Length
  href: System.Text.RegularExpressions.Capture.yaml
  name:
    CSharp: Length
  qualifiedName:
    CSharp: System.Text.RegularExpressions.Capture.Length
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 48
  summary: Returns the length of the captured substring.
  syntax:
    content:
      CSharp: public int Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Text.RegularExpressions.Capture.Value
  href: System.Text.RegularExpressions.Capture.yaml
  name:
    CSharp: Value
  qualifiedName:
    CSharp: System.Text.RegularExpressions.Capture.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 59
  summary: Returns the value of this Regex Capture.
  syntax:
    content:
      CSharp: public string Value { get; }
    parameters:
    - id: Value
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.Text.RegularExpressions.Capture.ToString
  href: System.Text.RegularExpressions.Capture.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: System.Text.RegularExpressions.Capture.ToString
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 73
  summary: Returns the substring that was matched.
  syntax:
    content:
      CSharp: override public String ToString()
    parameters: []
    return:
      id: String
