items:
- uid: System.Text.RegularExpressions.Capture
  href: System.Text.RegularExpressions.Capture.yml
  name: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  source:
    remote: &o0
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 14
  summary: >-
    Represents the results from a single subexpression capture. The object represents

    one substring for a single successful capture.
  syntax:
    content:
      CSharp: public class Capture
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Text.RegularExpressions.Capture
  children:
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.Value
  - System.Text.RegularExpressions.Capture.ToString
- uid: System.Text.RegularExpressions.Capture.Index
  href: System.Text.RegularExpressions.Capture.yml
  name: Index
  fullName: System.Text.RegularExpressions.Capture.Index
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 34
  summary: >-
    Returns the position in the original string where the first character of

    captured substring was found.
  syntax:
    content:
      CSharp: public int Index { get; }
    parameters:
    - id: Index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.Capture.Index
- uid: System.Text.RegularExpressions.Capture.Length
  href: System.Text.RegularExpressions.Capture.yml
  name: Length
  fullName: System.Text.RegularExpressions.Capture.Length
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 48
  summary: Returns the length of the captured substring.
  syntax:
    content:
      CSharp: public int Length { get; }
    parameters:
    - id: Length
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.Capture.Length
- uid: System.Text.RegularExpressions.Capture.Value
  href: System.Text.RegularExpressions.Capture.yml
  name: Value
  fullName: System.Text.RegularExpressions.Capture.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 59
  summary: Returns the value of this Regex Capture.
  syntax:
    content:
      CSharp: public string Value { get; }
    parameters:
    - id: Value
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Capture.Value
- uid: System.Text.RegularExpressions.Capture.ToString
  href: System.Text.RegularExpressions.Capture.yml
  name: ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 73
  summary: Returns the substring that was matched.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Capture.ToString
