items:
- uid: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: CaptureCollection
  fullName: System.Text.RegularExpressions.CaptureCollection
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 20
  summary: >-
    Represents a sequence of capture substrings. The object is used

    to return the set of captures done by a single capturing group.
  syntax:
    content:
      CSharp: public class CaptureCollection
  inheritance:
  - id: ICollection
    name: ICollection
    isExternal: true
  id: System.Text.RegularExpressions.CaptureCollection
  children:
  - System.Text.RegularExpressions.CaptureCollection.Count
  - System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.GetEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 35
  summary: Returns the number of captures.
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Text.RegularExpressions.CaptureCollection.Count
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: this[int]
  fullName: System.Text.RegularExpressions.CaptureCollection.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 43
  summary: Returns a specific capture, by index, in this collection.
  syntax:
    content:
      CSharp: public Capture this[int i] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Text.RegularExpressions.Capture
        name: Capture
        href: System.Text.RegularExpressions.Capture.yml
  id: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 51
  summary: Provides an enumerator in the same order as Item[].
  syntax:
    content:
      CSharp: public IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
  id: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
