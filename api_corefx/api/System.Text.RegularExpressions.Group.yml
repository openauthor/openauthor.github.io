items:
- uid: System.Text.RegularExpressions.Group
  href: System.Text.RegularExpressions.Group.yml
  name: Group
  fullName: System.Text.RegularExpressions.Group
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroup.cs
    startLine: 14
  summary: >-
    Represents the results from a single capturing group. A capturing group can

    capture zero, one, or more strings in a single match because of quantifiers, so

    Group supplies a collection of Capture objects.
  syntax:
    content:
      CSharp: public class Group
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.Text.RegularExpressions.Capture
    name: Capture
    href: System.Text.RegularExpressions.Capture.yml
  id: System.Text.RegularExpressions.Group
  children:
  - System.Text.RegularExpressions.Group.Success
  - System.Text.RegularExpressions.Group.Captures
- uid: System.Text.RegularExpressions.Group.Success
  href: System.Text.RegularExpressions.Group.yml
  name: Success
  fullName: System.Text.RegularExpressions.Group.Success
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroup.cs
    startLine: 35
  summary: Indicates whether the match is successful.
  syntax:
    content:
      CSharp: public bool Success { get; }
    parameters:
    - id: Success
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: System.Text.RegularExpressions.Group.Success
- uid: System.Text.RegularExpressions.Group.Captures
  href: System.Text.RegularExpressions.Group.yml
  name: Captures
  fullName: System.Text.RegularExpressions.Group.Captures
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroup.cs
    startLine: 51
  summary: >-
    Returns a collection of all the captures matched by the capturing

    group, in innermost-leftmost-first order (or innermost-rightmost-first order if

    compiled with the "r" option). The collection may have zero or more items.
  syntax:
    content:
      CSharp: public CaptureCollection Captures { get; }
    parameters:
    - id: Captures
      type:
        id: System.Text.RegularExpressions.CaptureCollection
        name: CaptureCollection
        href: System.Text.RegularExpressions.CaptureCollection.yml
  id: System.Text.RegularExpressions.Group.Captures
