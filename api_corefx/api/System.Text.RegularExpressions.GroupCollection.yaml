id: System.Text.RegularExpressions.GroupCollection
href: System.Text.RegularExpressions.GroupCollection.yaml
name:
  CSharp: GroupCollection
qualifiedName:
  CSharp: System.Text.RegularExpressions.GroupCollection
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
  startLine: 16
summary: >-
  Represents a sequence of capture substrings. The object is used

  to return the set of captures done by a single capturing group.
syntax:
  content:
    CSharp: public class GroupCollection
inheritance:
- id: ICollection
  name: ICollection
  isExternal: true
items:
- id: System.Text.RegularExpressions.GroupCollection.Count
  href: System.Text.RegularExpressions.GroupCollection.yaml
  name:
    CSharp: Count
  qualifiedName:
    CSharp: System.Text.RegularExpressions.GroupCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 33
  summary: Returns the number of groups.
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Text.RegularExpressions.GroupCollection.Item(System.Int32)
  href: System.Text.RegularExpressions.GroupCollection.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: System.Text.RegularExpressions.GroupCollection.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 38
  syntax:
    content:
      CSharp: public Group this[int groupnum] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Text.RegularExpressions.Group
        name: Group
        href: System.Text.RegularExpressions.Group.yaml
- id: System.Text.RegularExpressions.GroupCollection.Item(System.String)
  href: System.Text.RegularExpressions.GroupCollection.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: System.Text.RegularExpressions.GroupCollection.Item(System.String)
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 43
  syntax:
    content:
      CSharp: public Group this[string groupname] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Text.RegularExpressions.Group
        name: Group
        href: System.Text.RegularExpressions.Group.yaml
- id: System.Text.RegularExpressions.GroupCollection.GetEnumerator
  href: System.Text.RegularExpressions.GroupCollection.yaml
  name:
    CSharp: GetEnumerator
  qualifiedName:
    CSharp: System.Text.RegularExpressions.GroupCollection.GetEnumerator
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 57
  summary: Provides an enumerator in the same order as Item[].
  syntax:
    content:
      CSharp: public IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
