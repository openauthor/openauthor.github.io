items:
- uid: System.Text.RegularExpressions.GroupCollection
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: GroupCollection
  fullName: System.Text.RegularExpressions.GroupCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 16
  summary: >-
    Represents a sequence of capture substrings. The object is used

    to return the set of captures done by a single capturing group.
  syntax:
    content:
      CSharp: 'public class GroupCollection : ICollection, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Text.RegularExpressions.GroupCollection
  children:
  - System.Text.RegularExpressions.GroupCollection.Count
  - System.Text.RegularExpressions.GroupCollection.Item(System.Int32)
  - System.Text.RegularExpressions.GroupCollection.Item(System.String)
  - System.Text.RegularExpressions.GroupCollection.GetEnumerator
  - System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#IsSynchronized
  - System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#SyncRoot
  - System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
- uid: System.Text.RegularExpressions.GroupCollection.Count
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: Count
  fullName: System.Text.RegularExpressions.GroupCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 33
  summary: Returns the number of groups.
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.GroupCollection.Count
- uid: System.Text.RegularExpressions.GroupCollection.Item(System.Int32)
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: this[int]
  fullName: System.Text.RegularExpressions.GroupCollection.this[int]
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 38
  syntax:
    content:
      CSharp: public Group this[int groupnum] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Text.RegularExpressions.Group
        name: Group
        href: System.Text.RegularExpressions.Group.yml
  id: System.Text.RegularExpressions.GroupCollection.Item(System.Int32)
- uid: System.Text.RegularExpressions.GroupCollection.Item(System.String)
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: this[string]
  fullName: System.Text.RegularExpressions.GroupCollection.this[string]
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 43
  syntax:
    content:
      CSharp: public Group this[string groupname] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Text.RegularExpressions.Group
        name: Group
        href: System.Text.RegularExpressions.Group.yml
  id: System.Text.RegularExpressions.GroupCollection.Item(System.String)
- uid: System.Text.RegularExpressions.GroupCollection.GetEnumerator
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: GetEnumerator()
  fullName: System.Text.RegularExpressions.GroupCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 57
  summary: Provides an enumerator in the same order as Item[].
  syntax:
    content:
      CSharp: public IEnumerator GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Text.RegularExpressions.GroupCollection.GetEnumerator
- uid: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#IsSynchronized
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: ICollection.IsSynchronized
  fullName: System.Text.RegularExpressions.GroupCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 102
  syntax:
    content:
      CSharp: bool ICollection.IsSynchronized { get; }
    parameters:
    - id: System.Collections.ICollection.IsSynchronized
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#IsSynchronized
- uid: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#SyncRoot
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: ICollection.SyncRoot
  fullName: System.Text.RegularExpressions.GroupCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 107
  syntax:
    content:
      CSharp: object ICollection.SyncRoot { get; }
    parameters:
    - id: System.Collections.ICollection.SyncRoot
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#SyncRoot
- uid: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  href: System.Text.RegularExpressions.GroupCollection.yml
  name: ICollection.CopyTo(Array, int)
  fullName: System.Text.RegularExpressions.GroupCollection.System.Collections.ICollection.CopyTo(System.Array, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexGroupCollection.cs
    startLine: 112
  syntax:
    content:
      CSharp: void ICollection.CopyTo(Array array, int arrayIndex)
    parameters:
    - id: array
      type:
        id: System.Array
        name: Array
        isExternal: true
    - id: arrayIndex
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
