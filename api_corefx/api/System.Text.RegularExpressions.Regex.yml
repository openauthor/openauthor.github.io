items:
- uid: System.Text.RegularExpressions.Regex
  href: System.Text.RegularExpressions.Regex.yml
  name: Regex
  fullName: System.Text.RegularExpressions.Regex
  type: Class
  source:
    remote: &o0
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 19
  summary: >-
    Represents an immutable, compiled regular expression. Also

    contains static methods that allow use of regular expressions without instantiating

    a Regex explicitly.
  syntax:
    content:
      CSharp: public class Regex
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Text.RegularExpressions.Regex
  children:
  - System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  - System.Text.RegularExpressions.Regex.#ctor
  - System.Text.RegularExpressions.Regex.#ctor(System.String)
  - System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Escape(System.String)
  - System.Text.RegularExpressions.Regex.Unescape(System.String)
  - System.Text.RegularExpressions.Regex.CacheSize
  - System.Text.RegularExpressions.Regex.Options
  - System.Text.RegularExpressions.Regex.MatchTimeout
  - System.Text.RegularExpressions.Regex.RightToLeft
  - System.Text.RegularExpressions.Regex.ToString
  - System.Text.RegularExpressions.Regex.GetGroupNames
  - System.Text.RegularExpressions.Regex.GetGroupNumbers
  - System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  - System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Match(System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Matches(System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  - System.Text.RegularExpressions.Regex.Split(System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
- uid: System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  href: System.Text.RegularExpressions.Regex.yml
  name: InfiniteMatchTimeout
  fullName: System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
  type: Field
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 38
  syntax:
    content:
      CSharp: public static readonly TimeSpan InfiniteMatchTimeout;
  id: System.Text.RegularExpressions.Regex.InfiniteMatchTimeout
- uid: System.Text.RegularExpressions.Regex.#ctor
  href: System.Text.RegularExpressions.Regex.yml
  name: Regex()
  fullName: System.Text.RegularExpressions.Regex.Regex()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 65
  syntax:
    content:
      CSharp: protected Regex()
    parameters: []
  id: System.Text.RegularExpressions.Regex.#ctor
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Regex(string)
  fullName: System.Text.RegularExpressions.Regex.Regex(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 74
  summary: >-
    Creates and compiles a regular expression object for the specified regular

    expression.
  syntax:
    content:
      CSharp: 'public Regex(String pattern): this (pattern, RegexOptions.None, DefaultMatchTimeout, false)'
    parameters:
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.#ctor(System.String)
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Regex(string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 83
  summary: >-
    Creates and compiles a regular expression object for the

    specified regular expression with options that modify the pattern.
  syntax:
    content:
      CSharp: 'public Regex(String pattern, RegexOptions options): this (pattern, options, DefaultMatchTimeout, false)'
    parameters:
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
  id: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Regex(string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 88
  syntax:
    content:
      CSharp: 'public Regex(String pattern, RegexOptions options, TimeSpan matchTimeout): this (pattern, options, matchTimeout, false)'
    parameters:
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
  id: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Escape(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Escape(string)
  fullName: System.Text.RegularExpressions.Regex.Escape(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 191
  summary: >-
    Escapes a minimal set of metacharacters (\, *, +, ?, |, {, [, (, ), ^, $, ., #, and

    whitespace) by replacing them with their \ codes. This converts a string so that

    it can be used as a constant within a regular expression safely. (Note that the

    reason # and whitespace must be escaped is so the string can be used safely

    within an expression parsed with x mode. If future Regex features add

    additional metacharacters, developers should depend on Escape to escape those

    characters as well.)
  syntax:
    content:
      CSharp: public static string Escape(string str)
    parameters:
    - id: str
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Escape(System.String)
- uid: System.Text.RegularExpressions.Regex.Unescape(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Unescape(string)
  fullName: System.Text.RegularExpressions.Regex.Unescape(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 202
  summary: Unescapes any escaped characters in the input string.
  syntax:
    content:
      CSharp: public static string Unescape(string str)
    parameters:
    - id: str
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Unescape(System.String)
- uid: System.Text.RegularExpressions.Regex.CacheSize
  href: System.Text.RegularExpressions.Regex.yml
  name: CacheSize
  fullName: System.Text.RegularExpressions.Regex.CacheSize
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 211
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Concurrency", "CA8001", Justification = "Reviewed for thread-safety")] public static int CacheSize { get; set; }'
    parameters:
    - id: CacheSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.Regex.CacheSize
- uid: System.Text.RegularExpressions.Regex.Options
  href: System.Text.RegularExpressions.Regex.yml
  name: Options
  fullName: System.Text.RegularExpressions.Regex.Options
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 238
  summary: Returns the options passed into the constructor
  syntax:
    content:
      CSharp: public RegexOptions Options { get; }
    parameters:
    - id: Options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
  id: System.Text.RegularExpressions.Regex.Options
- uid: System.Text.RegularExpressions.Regex.MatchTimeout
  href: System.Text.RegularExpressions.Regex.yml
  name: MatchTimeout
  fullName: System.Text.RegularExpressions.Regex.MatchTimeout
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 247
  summary: The match timeout used by this Regex instance.
  syntax:
    content:
      CSharp: public TimeSpan MatchTimeout { get; }
    parameters:
    - id: MatchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
  id: System.Text.RegularExpressions.Regex.MatchTimeout
- uid: System.Text.RegularExpressions.Regex.RightToLeft
  href: System.Text.RegularExpressions.Regex.yml
  name: RightToLeft
  fullName: System.Text.RegularExpressions.Regex.RightToLeft
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 255
  summary: Indicates whether the regular expression matches from right to left.
  syntax:
    content:
      CSharp: public bool RightToLeft { get; }
    parameters:
    - id: RightToLeft
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.RightToLeft
- uid: System.Text.RegularExpressions.Regex.ToString
  href: System.Text.RegularExpressions.Regex.yml
  name: ToString()
  fullName: System.Text.RegularExpressions.Regex.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 266
  summary: Returns the regular expression pattern passed into the constructor
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.ToString
- uid: System.Text.RegularExpressions.Regex.GetGroupNames
  href: System.Text.RegularExpressions.Regex.yml
  name: GetGroupNames()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNames()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 281
  summary: >-
    Returns the GroupNameCollection for the regular expression. This collection contains the

    set of strings used to name capturing groups in the expression.
  syntax:
    content:
      CSharp: public string[] GetGroupNames()
    parameters: []
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.GetGroupNames
- uid: System.Text.RegularExpressions.Regex.GetGroupNumbers
  href: System.Text.RegularExpressions.Regex.yml
  name: GetGroupNumbers()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNumbers()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 314
  summary: Returns the integer group number corresponding to a group name.
  syntax:
    content:
      CSharp: public int[] GetGroupNumbers()
    parameters: []
    return:
      type:
        id: System.Array
        name: int[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.GetGroupNumbers
- uid: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: GroupNameFromNumber(int)
  fullName: System.Text.RegularExpressions.Regex.GroupNameFromNumber(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 351
  summary: Retrieves a group name that corresponds to a group number.
  syntax:
    content:
      CSharp: public string GroupNameFromNumber(int i)
    parameters:
    - id: i
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
- uid: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: GroupNumberFromName(string)
  fullName: System.Text.RegularExpressions.Regex.GroupNumberFromName(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 387
  summary: Returns a group number that corresponds to a group name.
  syntax:
    content:
      CSharp: public int GroupNumberFromName(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: IsMatch(string, string)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 429
  summary: Searches the input string for one or more occurrences of the text supplied in the given pattern.
  syntax:
    content:
      CSharp: public static bool IsMatch(string input, string pattern)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: IsMatch(string, string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 442
  summary: >-
    Searches the input string for one or more occurrences of the text

    supplied in the pattern parameter with matching options supplied in the options

    parameter.
  syntax:
    content:
      CSharp: public static bool IsMatch(string input, string pattern, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: IsMatch(string, string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(string, string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 447
  syntax:
    content:
      CSharp: public static bool IsMatch(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: IsMatch(string)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 459
  summary: >-
    Searches the input string for one or more matches using the previous pattern,

    options, and starting position.
  syntax:
    content:
      CSharp: public bool IsMatch(string input)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.IsMatch(System.String)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: IsMatch(string, int)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(string, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 475
  summary: >-
    Searches the input string for one or more matches using the previous pattern and options,

    with a new starting position.
  syntax:
    content:
      CSharp: public bool IsMatch(string input, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string, string)
  fullName: System.Text.RegularExpressions.Regex.Match(string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 490
  summary: >-
    Searches the input string for one or more occurrences of the text

    supplied in the pattern parameter.
  syntax:
    content:
      CSharp: public static Match Match(string input, string pattern)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string, string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 503
  summary: >-
    Searches the input string for one or more occurrences of the text

    supplied in the pattern parameter. Matching is modified with an option

    string.
  syntax:
    content:
      CSharp: public static Match Match(string input, string pattern, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string, string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 509
  syntax:
    content:
      CSharp: public static Match Match(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Match(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string)
  fullName: System.Text.RegularExpressions.Regex.Match(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 522
  summary: >-
    Matches a regular expression with a string and returns

    the precise result as a RegexMatch object.
  syntax:
    content:
      CSharp: public Match Match(string input)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string, int)
  fullName: System.Text.RegularExpressions.Regex.Match(string, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 537
  summary: >-
    Matches a regular expression with a string and returns

    the precise result as a RegexMatch object.
  syntax:
    content:
      CSharp: public Match Match(string input, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Match(string, int, int)
  fullName: System.Text.RegularExpressions.Regex.Match(string, int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 553
  summary: >-
    Matches a regular expression with a string and returns the precise result as a

    RegexMatch object.
  syntax:
    content:
      CSharp: public Match Match(string input, int beginning, int length)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: beginning
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: length
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Match
      type:
        id: System.Text.RegularExpressions.Match
        name: Match
        href: System.Text.RegularExpressions.Match.yml
  id: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Matches(string, string)
  fullName: System.Text.RegularExpressions.Regex.Matches(string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 567
  summary: Returns all the successful matches as if Match were called iteratively numerous times.
  syntax:
    content:
      CSharp: public static MatchCollection Matches(string input, string pattern)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: MatchCollection
      type:
        id: System.Text.RegularExpressions.MatchCollection
        name: MatchCollection
        href: System.Text.RegularExpressions.MatchCollection.yml
  id: System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Matches(string, string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Matches(string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 578
  summary: Returns all the successful matches as if Match were called iteratively numerous times.
  syntax:
    content:
      CSharp: public static MatchCollection Matches(string input, string pattern, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      id: MatchCollection
      type:
        id: System.Text.RegularExpressions.MatchCollection
        name: MatchCollection
        href: System.Text.RegularExpressions.MatchCollection.yml
  id: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Matches(string, string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Matches(string, string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 583
  syntax:
    content:
      CSharp: public static MatchCollection Matches(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: MatchCollection
      type:
        id: System.Text.RegularExpressions.MatchCollection
        name: MatchCollection
        href: System.Text.RegularExpressions.MatchCollection.yml
  id: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Matches(string)
  fullName: System.Text.RegularExpressions.Regex.Matches(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 595
  summary: Returns all the successful matches as if Match was called iteratively numerous times.
  syntax:
    content:
      CSharp: public MatchCollection Matches(string input)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: MatchCollection
      type:
        id: System.Text.RegularExpressions.MatchCollection
        name: MatchCollection
        href: System.Text.RegularExpressions.MatchCollection.yml
  id: System.Text.RegularExpressions.Regex.Matches(System.String)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Matches(string, int)
  fullName: System.Text.RegularExpressions.Regex.Matches(string, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 609
  summary: Returns all the successful matches as if Match was called iteratively numerous times.
  syntax:
    content:
      CSharp: public MatchCollection Matches(string input, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: MatchCollection
      type:
        id: System.Text.RegularExpressions.MatchCollection
        name: MatchCollection
        href: System.Text.RegularExpressions.MatchCollection.yml
  id: System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, string)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 621
  summary: >-
    Replaces all occurrences of the pattern with the  pattern, starting at

    the first character in the input string.
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, string replacement)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 631
  summary: >-
    Replaces all occurrences of

    the with the

    pattern, starting at the first character in the input string.
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, string replacement, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 636
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, string replacement, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 646
  summary: >-
    Replaces all occurrences of the previously defined pattern with the

    pattern, starting at the first character in the

    input string.
  syntax:
    content:
      CSharp: public string Replace(string input, string replacement)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, int)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 659
  summary: >-
    Replaces all occurrences of the previously defined pattern with the

    pattern, starting at the first character in the

    input string.
  syntax:
    content:
      CSharp: public string Replace(string input, string replacement, int count)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, int, int)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 672
  summary: >-
    Replaces all occurrences of the previously defined pattern with the

    pattern, starting at the character position

    .
  syntax:
    content:
      CSharp: public string Replace(string input, string replacement, int count, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: replacement
      type:
        id: System.String
        name: string
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 696
  summary: >-
    Replaces all occurrences of the  with the recent

    replacement pattern.
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, MatchEvaluator evaluator)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, MatchEvaluator, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 705
  summary: >-
    Replaces all occurrences of the  with the recent

    replacement pattern, starting at the first character.
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, string, MatchEvaluator, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 710
  syntax:
    content:
      CSharp: public static string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, System.Text.RegularExpressions.MatchEvaluator)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 719
  summary: >-
    Replaces all occurrences of the previously defined pattern with the recent

    replacement pattern, starting at the first character position.
  syntax:
    content:
      CSharp: public string Replace(string input, MatchEvaluator evaluator)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, MatchEvaluator, int)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, System.Text.RegularExpressions.MatchEvaluator, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 731
  summary: >-
    Replaces all occurrences of the previously defined pattern with the recent

    replacement pattern, starting at the first character position.
  syntax:
    content:
      CSharp: public string Replace(string input, MatchEvaluator evaluator, int count)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Replace(string, MatchEvaluator, int, int)
  fullName: System.Text.RegularExpressions.Regex.Replace(string, System.Text.RegularExpressions.MatchEvaluator, int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 744
  summary: >-
    Replaces all occurrences of the previously defined pattern with the recent

    replacement pattern, starting at the character position

    .
  syntax:
    content:
      CSharp: public string Replace(string input, MatchEvaluator evaluator, int count, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: evaluator
      type:
        id: System.Text.RegularExpressions.MatchEvaluator
        name: MatchEvaluator
        href: System.Text.RegularExpressions.MatchEvaluator.yml
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string, string)
  fullName: System.Text.RegularExpressions.Regex.Split(string, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 756
  summary: >-
    Splits the string at the position defined

    by .
  syntax:
    content:
      CSharp: public static string[] Split(string input, string pattern)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String,System.String)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string, string, RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Split(string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 764
  summary: Splits the string at the position defined by .
  syntax:
    content:
      CSharp: public static string[] Split(string input, string pattern, RegexOptions options)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string, string, RegexOptions, TimeSpan)
  fullName: System.Text.RegularExpressions.Regex.Split(string, string, System.Text.RegularExpressions.RegexOptions, System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 769
  syntax:
    content:
      CSharp: public static string[] Split(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: pattern
      type:
        id: System.String
        name: string
        isExternal: true
    - id: options
      type:
        id: System.Text.RegularExpressions.RegexOptions
        name: RegexOptions
        href: System.Text.RegularExpressions.RegexOptions.yml
    - id: matchTimeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)
- uid: System.Text.RegularExpressions.Regex.Split(System.String)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string)
  fullName: System.Text.RegularExpressions.Regex.Split(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 778
  summary: >-
    Splits the  string at the position defined by a

    previous pattern.
  syntax:
    content:
      CSharp: public string[] Split(string input)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string, int)
  fullName: System.Text.RegularExpressions.Regex.Split(string, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 790
  summary: >-
    Splits the  string at the position defined by a

    previous pattern.
  syntax:
    content:
      CSharp: public string[] Split(string input, int count)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  href: System.Text.RegularExpressions.Regex.yml
  name: Split(string, int, int)
  fullName: System.Text.RegularExpressions.Regex.Split(string, int, int)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 802
  summary: >-
    Splits the  string at the position defined by a

    previous pattern.
  syntax:
    content:
      CSharp: public string[] Split(string input, int count, int startat)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: startat
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
