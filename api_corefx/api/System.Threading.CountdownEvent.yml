items:
- uid: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  source:
    remote: &o0
      path: src/System.Threading/src/System/Threading/CountdownEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 26
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
  syntax:
    content:
      CSharp: 'public class CountdownEvent : IDisposable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Threading.CountdownEvent
  children:
  - System.Threading.CountdownEvent.#ctor(System.Int32)
  - System.Threading.CountdownEvent.CurrentCount
  - System.Threading.CountdownEvent.InitialCount
  - System.Threading.CountdownEvent.IsSet
  - System.Threading.CountdownEvent.WaitHandle
  - System.Threading.CountdownEvent.Dispose
  - System.Threading.CountdownEvent.Dispose(System.Boolean)
  - System.Threading.CountdownEvent.Signal
  - System.Threading.CountdownEvent.Signal(System.Int32)
  - System.Threading.CountdownEvent.AddCount
  - System.Threading.CountdownEvent.TryAddCount
  - System.Threading.CountdownEvent.AddCount(System.Int32)
  - System.Threading.CountdownEvent.TryAddCount(System.Int32)
  - System.Threading.CountdownEvent.Reset
  - System.Threading.CountdownEvent.Reset(System.Int32)
  - System.Threading.CountdownEvent.Wait
  - System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.Int32)
  - System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
- uid: System.Threading.CountdownEvent.#ctor(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent(int)
  fullName: System.Threading.CountdownEvent.CountdownEvent(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 50
  summary: >-
    Initializes a new instance of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) class with the

    specified count.
  syntax:
    content:
      CSharp: public CountdownEvent(int initialCount)
    parameters:
    - id: initialCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of signals required to set the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml).
  id: System.Threading.CountdownEvent.#ctor(System.Int32)
- uid: System.Threading.CountdownEvent.CurrentCount
  href: System.Threading.CountdownEvent.yml
  name: CurrentCount
  fullName: System.Threading.CountdownEvent.CurrentCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 76
  summary: Gets the number of remaining signals required to set the event.
  syntax:
    content:
      CSharp: public int CurrentCount { get; }
    parameters:
    - id: CurrentCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Threading.CountdownEvent.CurrentCount
- uid: System.Threading.CountdownEvent.InitialCount
  href: System.Threading.CountdownEvent.yml
  name: InitialCount
  fullName: System.Threading.CountdownEvent.InitialCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 91
  summary: Gets the numbers of signals initially required to set the event.
  syntax:
    content:
      CSharp: public int InitialCount { get; }
    parameters:
    - id: InitialCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Threading.CountdownEvent.InitialCount
- uid: System.Threading.CountdownEvent.IsSet
  href: System.Threading.CountdownEvent.yml
  name: IsSet
  fullName: System.Threading.CountdownEvent.IsSet
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 100
  summary: Determines whether the event is set.
  syntax:
    content:
      CSharp: public bool IsSet { get; }
    parameters:
    - id: IsSet
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.CountdownEvent.IsSet
- uid: System.Threading.CountdownEvent.WaitHandle
  href: System.Threading.CountdownEvent.yml
  name: WaitHandle
  fullName: System.Threading.CountdownEvent.WaitHandle
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 122
  summary: Gets a [System.Threading.WaitHandle]() that is used to wait for the event to be set.
  syntax:
    content:
      CSharp: public WaitHandle WaitHandle { get; }
    parameters:
    - id: WaitHandle
      type:
        id: System.Threading.WaitHandle
        name: WaitHandle
        isExternal: true
  id: System.Threading.CountdownEvent.WaitHandle
- uid: System.Threading.CountdownEvent.Dispose
  href: System.Threading.CountdownEvent.yml
  name: Dispose()
  fullName: System.Threading.CountdownEvent.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 138
  summary: Releases all resources used by the current instance of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml).
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
  id: System.Threading.CountdownEvent.Dispose
- uid: System.Threading.CountdownEvent.Dispose(System.Boolean)
  href: System.Threading.CountdownEvent.yml
  name: Dispose(bool)
  fullName: System.Threading.CountdownEvent.Dispose(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 159
  summary: >-
    When overridden in a derived class, releases the unmanaged resources used by the

    [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), and optionally releases the managed resources.
  syntax:
    content:
      CSharp: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true to release both managed and unmanaged resources; false to release

        only unmanaged resources.
  id: System.Threading.CountdownEvent.Dispose(System.Boolean)
- uid: System.Threading.CountdownEvent.Signal
  href: System.Threading.CountdownEvent.yml
  name: Signal()
  fullName: System.Threading.CountdownEvent.Signal()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 178
  summary: >-
    Registers a signal with the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), decrementing its

    count.
  syntax:
    content:
      CSharp: public bool Signal()
    parameters: []
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the signal caused the count to reach zero and the event was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Signal
- uid: System.Threading.CountdownEvent.Signal(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: Signal(int)
  fullName: System.Threading.CountdownEvent.Signal(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 220
  summary: >-
    Registers multiple signals with the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml),

    decrementing its count by the specified amount.
  syntax:
    content:
      CSharp: public bool Signal(int signalCount)
    parameters:
    - id: signalCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of signals to register.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the signals caused the count to reach zero and the event was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Signal(System.Int32)
- uid: System.Threading.CountdownEvent.AddCount
  href: System.Threading.CountdownEvent.yml
  name: AddCount()
  fullName: System.Threading.CountdownEvent.AddCount()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 276
  summary: Increments the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by one.
  syntax:
    content:
      CSharp: public void AddCount()
    parameters: []
  id: System.Threading.CountdownEvent.AddCount
- uid: System.Threading.CountdownEvent.TryAddCount
  href: System.Threading.CountdownEvent.yml
  name: TryAddCount()
  fullName: System.Threading.CountdownEvent.TryAddCount()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 290
  summary: Attempts to increment the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by one.
  syntax:
    content:
      CSharp: public bool TryAddCount()
    parameters: []
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the increment succeeded; otherwise, false. If [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) is

        already at zero. this will return false.
  id: System.Threading.CountdownEvent.TryAddCount
- uid: System.Threading.CountdownEvent.AddCount(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: AddCount(int)
  fullName: System.Threading.CountdownEvent.AddCount(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 308
  summary: >-
    Increments the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by a specified

    value.
  syntax:
    content:
      CSharp: public void AddCount(int signalCount)
    parameters:
    - id: signalCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The value by which to increase [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml).
  id: System.Threading.CountdownEvent.AddCount(System.Int32)
- uid: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: TryAddCount(int)
  fullName: System.Threading.CountdownEvent.TryAddCount(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 331
  summary: >-
    Attempts to increment the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by a

    specified value.
  syntax:
    content:
      CSharp: public bool TryAddCount(int signalCount)
    parameters:
    - id: signalCount
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The value by which to increase [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml).
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the increment succeeded; otherwise, false. If [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) is

        already at zero this will return false.
  id: System.Threading.CountdownEvent.TryAddCount(System.Int32)
- uid: System.Threading.CountdownEvent.Reset
  href: System.Threading.CountdownEvent.yml
  name: Reset()
  fullName: System.Threading.CountdownEvent.Reset()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 381
  summary: Resets the [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) to the value of [System.Threading.CountdownEvent.InitialCount](System.Threading.CountdownEvent.yml).
  syntax:
    content:
      CSharp: public void Reset()
    parameters: []
  id: System.Threading.CountdownEvent.Reset
- uid: System.Threading.CountdownEvent.Reset(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: Reset(int)
  fullName: System.Threading.CountdownEvent.Reset(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 398
  summary: Resets the [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) to a specified value.
  syntax:
    content:
      CSharp: public void Reset(int count)
    parameters:
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of signals required to set the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml).
  id: System.Threading.CountdownEvent.Reset(System.Int32)
- uid: System.Threading.CountdownEvent.Wait
  href: System.Threading.CountdownEvent.yml
  name: Wait()
  fullName: System.Threading.CountdownEvent.Wait()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 429
  summary: Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set.
  syntax:
    content:
      CSharp: public void Wait()
    parameters: []
  id: System.Threading.CountdownEvent.Wait
- uid: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  href: System.Threading.CountdownEvent.yml
  name: Wait(CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 452
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, while

    observing a [System.Threading.CancellationToken]().
  syntax:
    content:
      CSharp: public void Wait(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
      description: >-
        The [System.Threading.CancellationToken]() to

        observe.
  id: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  href: System.Threading.CountdownEvent.yml
  name: Wait(TimeSpan)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 471
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    [System.TimeSpan]() to measure the time interval.
  syntax:
    content:
      CSharp: public bool Wait(TimeSpan timeout)
    parameters:
    - id: timeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
      description: >-
        A [System.TimeSpan]() that represents the number of

        milliseconds to wait, or a [System.TimeSpan]() that represents -1 milliseconds to

        wait indefinitely.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Wait(System.TimeSpan)
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  href: System.Threading.CountdownEvent.yml
  name: Wait(TimeSpan, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 501
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using

    a [System.TimeSpan]() to measure the time interval, while observing a

    [System.Threading.CancellationToken]().
  syntax:
    content:
      CSharp: public bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
    parameters:
    - id: timeout
      type:
        id: System.TimeSpan
        name: TimeSpan
        isExternal: true
      description: >-
        A [System.TimeSpan]() that represents the number of

        milliseconds to wait, or a [System.TimeSpan]() that represents -1 milliseconds to

        wait indefinitely.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
      description: >-
        The [System.Threading.CancellationToken]() to

        observe.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
- uid: System.Threading.CountdownEvent.Wait(System.Int32)
  href: System.Threading.CountdownEvent.yml
  name: Wait(int)
  fullName: System.Threading.CountdownEvent.Wait(int)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 524
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    32-bit signed integer to measure the time interval.
  syntax:
    content:
      CSharp: public bool Wait(int millisecondsTimeout)
    parameters:
    - id: millisecondsTimeout
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite]()(-1) to wait indefinitely.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Wait(System.Int32)
- uid: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  href: System.Threading.CountdownEvent.yml
  name: Wait(int, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(int, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 546
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    32-bit signed integer to measure the time interval, while observing a

    [System.Threading.CancellationToken]().
  syntax:
    content:
      CSharp: public bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
    parameters:
    - id: millisecondsTimeout
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite]()(-1) to wait indefinitely.
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
      description: >-
        The [System.Threading.CancellationToken]() to

        observe.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: >-
        true if the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) was set; otherwise,

        false.
  id: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
