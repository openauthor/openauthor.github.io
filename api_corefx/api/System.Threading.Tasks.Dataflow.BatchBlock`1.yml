items:
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: BatchBlock<T>
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>
  type: Class
  source:
    remote: &o0
      path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 24
  summary: Provides a dataflow block that batches inputs into arrays.
  syntax:
    content:
      CSharp: 'public sealed class BatchBlock<T> : IPropagatorBlock<T, T[]>, ITargetBlock<T>, IReceivableSourceBlock<T[]>, ISourceBlock<T[]>, IDataflowBlock, IDebuggerDisplay'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1
  children:
  - System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.Complete
  - System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch
  - System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount
  - System.Threading.Tasks.Dataflow.BatchBlock`1.Completion
  - System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize
  - System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)
  - System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
  - System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
  - System.Threading.Tasks.Dataflow.BatchBlock`1.ToString
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: BatchBlock(int)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.BatchBlock(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 37
  summary: Initializes this [System.Threading.Tasks.Dataflow.BatchBlock`1](System.Threading.Tasks.Dataflow.BatchBlock`1.yml) with the specified batch size.
  syntax:
    content:
      CSharp: 'public BatchBlock(Int32 batchSize): this (batchSize, GroupingDataflowBlockOptions.Default)'
    parameters:
    - id: batchSize
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of items to group into a batch.
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: BatchBlock(int, GroupingDataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.BatchBlock(int, System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 47
  summary: Initializes this [System.Threading.Tasks.Dataflow.BatchBlock`1](System.Threading.Tasks.Dataflow.BatchBlock`1.yml) with the  specified batch size, declining option, and block options.
  syntax:
    content:
      CSharp: public BatchBlock(Int32 batchSize, GroupingDataflowBlockOptions dataflowBlockOptions)
    parameters:
    - id: batchSize
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The number of items to group into a batch.
    - id: dataflowBlockOptions
      type:
        id: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
        name: GroupingDataflowBlockOptions
        href: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.yml
      description: The options with which to configure this [System.Threading.Tasks.Dataflow.BatchBlock`1](System.Threading.Tasks.Dataflow.BatchBlock`1.yml).
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.Complete
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: Complete()
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.Complete()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 103
  syntax:
    content:
      CSharp: public void Complete()
    parameters: []
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.Complete
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: IDataflowBlock.Fault(Exception)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 106
  syntax:
    content:
      CSharp: void IDataflowBlock.Fault(Exception exception)
    parameters:
    - id: exception
      type:
        id: System.Exception
        name: Exception
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: TriggerBatch()
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.TriggerBatch()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 123
  summary: >-
    Triggers the [System.Threading.Tasks.Dataflow.BatchBlock`1](System.Threading.Tasks.Dataflow.BatchBlock`1.yml) to initiate a batching operation even if the number

    of currently queued or postponed items is less than the [System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize](System.Threading.Tasks.Dataflow.BatchBlock`1.yml).
  syntax:
    content:
      CSharp: public void TriggerBatch()
    parameters: []
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: LinkTo(ITargetBlock<T[]>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock<T[]>, System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 126
  syntax:
    content:
      CSharp: public IDisposable LinkTo(ITargetBlock<T[]> target, DataflowLinkOptions linkOptions)
    parameters:
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
        name: ITargetBlock<T[]>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
    - id: linkOptions
      type:
        id: System.Threading.Tasks.Dataflow.DataflowLinkOptions
        name: DataflowLinkOptions
        href: System.Threading.Tasks.Dataflow.DataflowLinkOptions.yml
    return:
      id: IDisposable
      type:
        id: System.IDisposable
        name: IDisposable
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: TryReceive(Predicate<T[]>, out T[])
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.TryReceive(System.Predicate<T[]>, out T[])
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 132
  syntax:
    content:
      CSharp: public bool TryReceive(Predicate<T[]> filter, out T[] item)
    parameters:
    - id: filter
      type:
        id: System.Predicate{`0[]}
        name: Predicate<T[]>
        isExternal: true
    - id: item
      type:
        id: System.Array
        name: T[]
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: TryReceiveAll(out IList<T[]>)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.TryReceiveAll(out System.Collections.Generic.IList<T[]>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 138
  syntax:
    content:
      CSharp: public bool TryReceiveAll(out IList<T[]> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IList{`0[]}
        name: IList<T[]>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: OutputCount
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.OutputCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 141
  syntax:
    content:
      CSharp: public int OutputCount { get; }
    parameters:
    - id: OutputCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.Completion
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: Completion
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.Completion
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 144
  syntax:
    content:
      CSharp: public Task Completion { get; }
    parameters:
    - id: Completion
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.Completion
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: BatchSize
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.BatchSize
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 151
  summary: Gets the size of the batches generated by this [System.Threading.Tasks.Dataflow.BatchBlock`1](System.Threading.Tasks.Dataflow.BatchBlock`1.yml).
  syntax:
    content:
      CSharp: public Int32 BatchSize { get; }
    parameters:
    - id: BatchSize
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, bool)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.System.Threading.Tasks.Dataflow.ITargetBlock<T>.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, T, System.Threading.Tasks.Dataflow.ISourceBlock<T>, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 154
  syntax:
    content:
      CSharp: DataflowMessageStatus ITargetBlock<T>.OfferMessage(DataflowMessageHeader messageHeader, T messageValue, ISourceBlock<T> source, bool consumeToAccept)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: messageValue
      type:
        id: T
        name: T
        href: T
    - id: source
      type:
        id: System.Threading.Tasks.Dataflow.ISourceBlock{`0}
        name: ISourceBlock<T>
        href: System.Threading.Tasks.Dataflow.ISourceBlock{`0}
    - id: consumeToAccept
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    return:
      id: DataflowMessageStatus
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageStatus
        name: DataflowMessageStatus
        href: System.Threading.Tasks.Dataflow.DataflowMessageStatus.yml
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: ISourceBlock<T[]>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T[]>, out bool)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T[]>.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T[]>, out bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 160
  syntax:
    content:
      CSharp: T[] ISourceBlock<T[]>.ConsumeMessage(DataflowMessageHeader messageHeader, ITargetBlock<T[]> target, out bool messageConsumed)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
        name: ITargetBlock<T[]>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
    - id: messageConsumed
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    return:
      type:
        id: System.Array
        name: T[]
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: ISourceBlock<T[]>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T[]>)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T[]>.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T[]>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 166
  syntax:
    content:
      CSharp: bool ISourceBlock<T[]>.ReserveMessage(DataflowMessageHeader messageHeader, ITargetBlock<T[]> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
        name: ITargetBlock<T[]>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: ISourceBlock<T[]>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T[]>)
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T[]>.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T[]>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 172
  syntax:
    content:
      CSharp: void ISourceBlock<T[]>.ReleaseReservation(DataflowMessageHeader messageHeader, ITargetBlock<T[]> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
        name: ITargetBlock<T[]>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0[]}
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})
- uid: System.Threading.Tasks.Dataflow.BatchBlock`1.ToString
  href: System.Threading.Tasks.Dataflow.BatchBlock`1.yml
  name: ToString()
  fullName: System.Threading.Tasks.Dataflow.BatchBlock<T>.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchBlock.cs
    startLine: 181
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchBlock`1.ToString
