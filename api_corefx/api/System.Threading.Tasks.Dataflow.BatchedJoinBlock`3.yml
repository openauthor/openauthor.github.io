items:
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: BatchedJoinBlock<T1, T2, T3>
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 285
  summary: >-
    Provides a dataflow block that batches a specified number of inputs of potentially differing types

    provided to one or more of its targets.
  syntax:
    content:
      CSharp: public sealed class BatchedJoinBlock<T1, T2, T3>
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  children:
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: BatchedJoinBlock(int)
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.BatchedJoinBlock(int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 306
  summary: Initializes this [System.Threading.Tasks.Dataflow.BatchedJoinBlock`3](System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml) with the specified configuration.
  syntax:
    content:
      CSharp: 'public BatchedJoinBlock(Int32 batchSize): this (batchSize, GroupingDataflowBlockOptions.Default)'
    parameters:
    - id: batchSize
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of items to group into a batch.
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: BatchedJoinBlock(int, GroupingDataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.BatchedJoinBlock(int, System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 315
  summary: Initializes this [System.Threading.Tasks.Dataflow.BatchedJoinBlock`3](System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml) with the specified configuration.
  syntax:
    content:
      CSharp: public BatchedJoinBlock(Int32 batchSize, GroupingDataflowBlockOptions dataflowBlockOptions)
    parameters:
    - id: batchSize
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: The number of items to group into a batch.
    - id: dataflowBlockOptions
      type:
        id: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
        name: GroupingDataflowBlockOptions
        href: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.yml
      description: The options with which to configure this [System.Threading.Tasks.Dataflow.BatchedJoinBlock`2](System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.yml).
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: BatchSize
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.BatchSize
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 385
  summary: Gets the size of the batches generated by this [System.Threading.Tasks.Dataflow.BatchedJoinBlock`3](System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml).
  syntax:
    content:
      CSharp: public Int32 BatchSize { get; }
    parameters:
    - id: BatchSize
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: Target1
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.Target1
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 388
  summary: Gets a target that may be used to offer messages of the first type.
  syntax:
    content:
      CSharp: public ITargetBlock<T1> Target1 { get; }
    parameters:
    - id: Target1
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: Target2
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.Target2
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 391
  summary: Gets a target that may be used to offer messages of the second type.
  syntax:
    content:
      CSharp: public ITargetBlock<T2> Target2 { get; }
    parameters:
    - id: Target2
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`1}
        name: ITargetBlock
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`1}
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: Target3
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.Target3
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 394
  summary: Gets a target that may be used to offer messages of the third type.
  syntax:
    content:
      CSharp: public ITargetBlock<T3> Target3 { get; }
    parameters:
    - id: Target3
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`2}
        name: ITargetBlock
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`2}
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: LinkTo(ITargetBlock<Tuple<IList<T1>, IList<T2>, IList<T3>>>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<System.Collections.Generic.IList<T1>, System.Collections.Generic.IList<T2>, System.Collections.Generic.IList<T3>>>, System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 397
  syntax:
    content:
      CSharp: public IDisposable LinkTo(ITargetBlock<Tuple<IList<T1>, IList<T2>, IList<T3>>> target, DataflowLinkOptions linkOptions)
    parameters:
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
        name: ITargetBlock
        href: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
    - id: linkOptions
      type:
        id: System.Threading.Tasks.Dataflow.DataflowLinkOptions
        name: DataflowLinkOptions
        href: System.Threading.Tasks.Dataflow.DataflowLinkOptions.yml
    return:
      id: IDisposable
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: TryReceive(Predicate<Tuple<IList<T1>, IList<T2>, IList<T3>>>, out Tuple<IList<T1>, IList<T2>, IList<T3>>)
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.TryReceive(System.Predicate<System.Tuple<System.Collections.Generic.IList<T1>, System.Collections.Generic.IList<T2>, System.Collections.Generic.IList<T3>>>, out System.Tuple<System.Collections.Generic.IList<T1>, System.Collections.Generic.IList<T2>, System.Collections.Generic.IList<T3>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 403
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] public Boolean TryReceive(Predicate<Tuple<IList<T1>, IList<T2>, IList<T3>>> filter, out Tuple<IList<T1>, IList<T2>, IList<T3>> item)'
    parameters:
    - id: filter
      type:
        id: System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
        name: System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
        isExternal: true
    - id: item
      type:
        id: System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}
        name: System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}
        isExternal: true
    return:
      id: Boolean
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: TryReceiveAll(out IList<Tuple<IList<T1>, IList<T2>, IList<T3>>>)
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.TryReceiveAll(out System.Collections.Generic.IList<System.Tuple<System.Collections.Generic.IList<T1>, System.Collections.Generic.IList<T2>, System.Collections.Generic.IList<T3>>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 410
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")] public bool TryReceiveAll(out IList<Tuple<IList<T1>, IList<T2>, IList<T3>>> items)'
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
        name: System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}
        isExternal: true
    return:
      id: Boolean
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: OutputCount
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.OutputCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 414
  syntax:
    content:
      CSharp: public int OutputCount { get; }
    parameters:
    - id: OutputCount
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: Completion
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.Completion
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 417
  syntax:
    content:
      CSharp: public Task Completion { get; }
    parameters:
    - id: Completion
      type:
        id: System.Threading.Tasks.Task
        name: System.Threading.Tasks.Task
        isExternal: true
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: Complete()
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.Complete()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 420
  syntax:
    content:
      CSharp: public void Complete()
    parameters: []
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete
- uid: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
  href: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.yml
  name: ToString()
  fullName: System.Threading.Tasks.Dataflow.BatchedJoinBlock<T1, T2, T3>.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/BatchedJoinBlock.cs
    startLine: 483
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
  id: System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString
