id: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
href: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.yaml
name:
  CSharp: ExecutionDataflowBlockOptions
qualifiedName:
  CSharp: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Threading.Tasks.Dataflow/src/Base/DataflowBlockOptions.cs
  startLine: 220
summary: >-
  Provides options used to configure the processing performed by dataflow blocks that

  process each message through the invocation of a user-provided delegate, blocks such

  as [System.Threading.Tasks.Dataflow.ActionBlock`1](System.Threading.Tasks.Dataflow.ActionBlock`1.yaml) and [System.Threading.Tasks.Dataflow.TransformBlock`2](System.Threading.Tasks.Dataflow.TransformBlock`2.yaml).
syntax:
  content:
    CSharp: public class ExecutionDataflowBlockOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.Threading.Tasks.Dataflow.DataflowBlockOptions
  name: DataflowBlockOptions
  href: System.Threading.Tasks.Dataflow.DataflowBlockOptions.yaml
items:
- id: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor
  href: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.yaml
  name:
    CSharp: ExecutionDataflowBlockOptions
  qualifiedName:
    CSharp: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.ExecutionDataflowBlockOptions
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/DataflowBlockOptions.cs
    startLine: 253
  summary: Initializes the [System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions](System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.yaml).
  syntax:
    content:
      CSharp: public ExecutionDataflowBlockOptions()
    parameters: []
    return:
      id: Void
- id: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism
  href: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.yaml
  name:
    CSharp: MaxDegreeOfParallelism
  qualifiedName:
    CSharp: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/DataflowBlockOptions.cs
    startLine: 256
  summary: Gets the maximum number of messages that may be processed by the block concurrently.
  syntax:
    content:
      CSharp: public Int32 MaxDegreeOfParallelism { get; set; }
    parameters:
    - id: MaxDegreeOfParallelism
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained
  href: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.yaml
  name:
    CSharp: SingleProducerConstrained
  qualifiedName:
    CSharp: System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/DataflowBlockOptions.cs
    startLine: 279
  summary: Gets whether code using the dataflow block is constrained to one producer at a time.
  syntax:
    content:
      CSharp: public Boolean SingleProducerConstrained { get; set; }
    parameters:
    - id: SingleProducerConstrained
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
