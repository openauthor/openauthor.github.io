items:
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  href: System.Threading.Tasks.Dataflow.ISourceBlock`1.yml
  name: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
  type: Interface
  source:
    remote: &o0
      path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
    startLine: 19
  summary: Represents a dataflow block that is a source of data.
  syntax:
    content:
      CSharp: 'public interface ISourceBlock<out TOutput> : IDataflowBlock'
  id: System.Threading.Tasks.Dataflow.ISourceBlock`1
  children:
  - System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  - System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  - System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  href: System.Threading.Tasks.Dataflow.ISourceBlock`1.yml
  name: LinkTo(ITargetBlock<TOutput>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>, System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
    startLine: 24
  syntax:
    content:
      CSharp: public IDisposable LinkTo(ITargetBlock<TOutput> target, DataflowLinkOptions linkOptions)
    parameters:
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock<TOutput>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
    - id: linkOptions
      type:
        id: System.Threading.Tasks.Dataflow.DataflowLinkOptions
        name: DataflowLinkOptions
        href: System.Threading.Tasks.Dataflow.DataflowLinkOptions.yml
    return:
      id: IDisposable
      type:
        id: System.IDisposable
        name: IDisposable
        isExternal: true
  id: System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  href: System.Threading.Tasks.Dataflow.ISourceBlock`1.yml
  name: ConsumeMessage(DataflowMessageHeader, ITargetBlock<TOutput>, out bool)
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>, out bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
    startLine: 29
  syntax:
    content:
      CSharp: public TOutput ConsumeMessage(DataflowMessageHeader messageHeader, ITargetBlock<TOutput> target, out bool messageConsumed)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock<TOutput>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
    - id: messageConsumed
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    return:
      id: TOutput
      type:
        id: TOutput
        name: TOutput
        href: TOutput
  id: System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  href: System.Threading.Tasks.Dataflow.ISourceBlock`1.yml
  name: ReserveMessage(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
    startLine: 33
  syntax:
    content:
      CSharp: public bool ReserveMessage(DataflowMessageHeader messageHeader, ITargetBlock<TOutput> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock<TOutput>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  href: System.Threading.Tasks.Dataflow.ISourceBlock`1.yml
  name: ReleaseReservation(DataflowMessageHeader, ITargetBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Base/ISourceBlock.cs
    startLine: 36
  syntax:
    content:
      CSharp: public void ReleaseReservation(DataflowMessageHeader messageHeader, ITargetBlock<TOutput> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock<TOutput>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
  id: System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
