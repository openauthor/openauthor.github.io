items:
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: JoinBlock<T1, T2>
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>
  type: Class
  source:
    remote: &o0
      path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 29
  summary: "Provides a dataflow block that joins across multiple dataflow sources, not necessarily of the same type,\r\nwaiting for one item to arrive for each type before theyâ€™re all released together as a tuple of one item per type."
  syntax:
    content:
      CSharp: 'public sealed class JoinBlock<T1, T2> : IReceivableSourceBlock<Tuple<T1, T2>>, ISourceBlock<Tuple<T1, T2>>, IDataflowBlock, IDebuggerDisplay'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2
  children:
  - System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor
  - System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount
  - System.Threading.Tasks.Dataflow.JoinBlock`2.Completion
  - System.Threading.Tasks.Dataflow.JoinBlock`2.Complete
  - System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.Target1
  - System.Threading.Tasks.Dataflow.JoinBlock`2.Target2
  - System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)
  - System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
  - System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
  - System.Threading.Tasks.Dataflow.JoinBlock`2.ToString
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: JoinBlock()
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.JoinBlock()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 43
  summary: Initializes the [System.Threading.Tasks.Dataflow.JoinBlock`2](System.Threading.Tasks.Dataflow.JoinBlock`2.yml).
  syntax:
    content:
      CSharp: 'public JoinBlock(): this (GroupingDataflowBlockOptions.Default)'
    parameters: []
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: JoinBlock(GroupingDataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.JoinBlock(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 50
  summary: Initializes the [System.Threading.Tasks.Dataflow.JoinBlock`2](System.Threading.Tasks.Dataflow.JoinBlock`2.yml).
  syntax:
    content:
      CSharp: public JoinBlock(GroupingDataflowBlockOptions dataflowBlockOptions)
    parameters:
    - id: dataflowBlockOptions
      type:
        id: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions
        name: GroupingDataflowBlockOptions
        href: System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.yml
      description: The options with which to configure this [System.Threading.Tasks.Dataflow.JoinBlock`2](System.Threading.Tasks.Dataflow.JoinBlock`2.yml).
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: LinkTo(ITargetBlock<Tuple<T1, T2>>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<T1, T2>>, System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 114
  syntax:
    content:
      CSharp: public IDisposable LinkTo(ITargetBlock<Tuple<T1, T2>> target, DataflowLinkOptions linkOptions)
    parameters:
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
        name: ITargetBlock<Tuple<T1, T2>>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
    - id: linkOptions
      type:
        id: System.Threading.Tasks.Dataflow.DataflowLinkOptions
        name: DataflowLinkOptions
        href: System.Threading.Tasks.Dataflow.DataflowLinkOptions.yml
    return:
      id: IDisposable
      type:
        id: System.IDisposable
        name: IDisposable
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: TryReceive(Predicate<Tuple<T1, T2>>, out Tuple<T1, T2>)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.TryReceive(System.Predicate<System.Tuple<T1, T2>>, out System.Tuple<T1, T2>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 120
  syntax:
    content:
      CSharp: public bool TryReceive(Predicate<Tuple<T1, T2>> filter, out Tuple<T1, T2> item)
    parameters:
    - id: filter
      type:
        id: System.Predicate{System.Tuple{`0,`1}}
        name: Predicate<Tuple<T1, T2>>
        isExternal: true
    - id: item
      type:
        id: System.Tuple{`0,`1}
        name: Tuple<T1, T2>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: TryReceiveAll(out IList<Tuple<T1, T2>>)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.TryReceiveAll(out System.Collections.Generic.IList<System.Tuple<T1, T2>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 126
  syntax:
    content:
      CSharp: public bool TryReceiveAll(out IList<Tuple<T1, T2>> items)
    parameters:
    - id: items
      type:
        id: System.Collections.Generic.IList{System.Tuple{`0,`1}}
        name: IList<Tuple<T1, T2>>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: OutputCount
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.OutputCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 130
  syntax:
    content:
      CSharp: public int OutputCount { get; }
    parameters:
    - id: OutputCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.Completion
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: Completion
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.Completion
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 133
  syntax:
    content:
      CSharp: public Task Completion { get; }
    parameters:
    - id: Completion
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.Completion
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.Complete
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: Complete()
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.Complete()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 136
  syntax:
    content:
      CSharp: public void Complete()
    parameters: []
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.Complete
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: IDataflowBlock.Fault(Exception)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 146
  syntax:
    content:
      CSharp: void IDataflowBlock.Fault(Exception exception)
    parameters:
    - id: exception
      type:
        id: System.Exception
        name: Exception
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.Target1
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: Target1
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.Target1
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 163
  summary: Gets a target that may be used to offer messages of the first type.
  syntax:
    content:
      CSharp: public ITargetBlock<T1> Target1 { get; }
    parameters:
    - id: Target1
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
        name: ITargetBlock<T1>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`0}
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.Target1
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.Target2
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: Target2
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.Target2
  type: Property
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 166
  summary: Gets a target that may be used to offer messages of the second type.
  syntax:
    content:
      CSharp: public ITargetBlock<T2> Target2 { get; }
    parameters:
    - id: Target2
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{`1}
        name: ITargetBlock<T2>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{`1}
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.Target2
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: ISourceBlock<Tuple<T1, T2>>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<Tuple<T1, T2>>, out bool)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<T1, T2>>.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<T1, T2>>, out bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 169
  syntax:
    content:
      CSharp: Tuple<T1, T2> ISourceBlock<Tuple<T1, T2>>.ConsumeMessage(DataflowMessageHeader messageHeader, ITargetBlock<Tuple<T1, T2>> target, out bool messageConsumed)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
        name: ITargetBlock<Tuple<T1, T2>>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
    - id: messageConsumed
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    return:
      id: Tuple
      type:
        id: System.Tuple{`0,`1}
        name: Tuple<T1, T2>
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: ISourceBlock<Tuple<T1, T2>>.ReserveMessage(DataflowMessageHeader, ITargetBlock<Tuple<T1, T2>>)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<T1, T2>>.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<T1, T2>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 175
  syntax:
    content:
      CSharp: bool ISourceBlock<Tuple<T1, T2>>.ReserveMessage(DataflowMessageHeader messageHeader, ITargetBlock<Tuple<T1, T2>> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
        name: ITargetBlock<Tuple<T1, T2>>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: ISourceBlock<Tuple<T1, T2>>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<Tuple<T1, T2>>)
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.System.Threading.Tasks.Dataflow.ISourceBlock<System.Tuple<T1, T2>>.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<System.Tuple<T1, T2>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 181
  syntax:
    content:
      CSharp: void ISourceBlock<Tuple<T1, T2>>.ReleaseReservation(DataflowMessageHeader messageHeader, ITargetBlock<Tuple<T1, T2>> target)
    parameters:
    - id: messageHeader
      type:
        id: System.Threading.Tasks.Dataflow.DataflowMessageHeader
        name: DataflowMessageHeader
        href: System.Threading.Tasks.Dataflow.DataflowMessageHeader.yml
    - id: target
      type:
        id: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
        name: ITargetBlock<Tuple<T1, T2>>
        href: System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}}
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1,T2}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})
- uid: System.Threading.Tasks.Dataflow.JoinBlock`2.ToString
  href: System.Threading.Tasks.Dataflow.JoinBlock`2.yml
  name: ToString()
  fullName: System.Threading.Tasks.Dataflow.JoinBlock<T1, T2>.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading.Tasks.Dataflow/src/Blocks/JoinBlock.cs
    startLine: 190
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Threading.Tasks.Dataflow.JoinBlock`2.ToString
