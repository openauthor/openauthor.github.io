items:
- uid: System.Threading.WaitHandleExtensions
  href: System.Threading.WaitHandleExtensions.yml
  name: WaitHandleExtensions
  fullName: System.Threading.WaitHandleExtensions
  type: Class
  source:
    remote: &o0
      path: src/System.Runtime.Handles/src/System/Threading/WaitHandleExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Runtime.Handles/src/System/Threading/WaitHandleExtensions.cs
    startLine: 8
  syntax:
    content:
      CSharp: public class WaitHandleExtensions
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Threading.WaitHandleExtensions
  children:
  - System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  - System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
- uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  href: System.Threading.WaitHandleExtensions.yml
  name: GetSafeWaitHandle(WaitHandle)
  fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Handles/src/System/Threading/WaitHandleExtensions.cs
    startLine: 15
  summary: Gets the native operating system handle.
  syntax:
    content:
      CSharp: public static SafeWaitHandle GetSafeWaitHandle(WaitHandle waitHandle)
    parameters:
    - id: waitHandle
      type:
        id: System.Threading.WaitHandle
        name: WaitHandle
        isExternal: true
      description: The [System.Threading.WaitHandle]() to operate on.
    return:
      id: SafeWaitHandle
      type:
        id: Microsoft.Win32.SafeHandles.SafeWaitHandle
        name: SafeWaitHandle
        isExternal: true
      description: A [System.Runtime.InteropServices.SafeHandle]() representing the native operating system handle.
  id: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)
- uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
  href: System.Threading.WaitHandleExtensions.yml
  name: SetSafeWaitHandle(WaitHandle, SafeWaitHandle)
  fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle, Microsoft.Win32.SafeHandles.SafeWaitHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Runtime.Handles/src/System/Threading/WaitHandleExtensions.cs
    startLine: 31
  summary: Sets the native operating system handle
  syntax:
    content:
      CSharp: public static void SetSafeWaitHandle(WaitHandle waitHandle, SafeWaitHandle value)
    parameters:
    - id: waitHandle
      type:
        id: System.Threading.WaitHandle
        name: WaitHandle
        isExternal: true
      description: The [System.Threading.WaitHandle]() to operate on.
    - id: value
      type:
        id: Microsoft.Win32.SafeHandles.SafeWaitHandle
        name: SafeWaitHandle
        isExternal: true
      description: A [System.Runtime.InteropServices.SafeHandle]() representing the native operating system handle.
  id: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)
