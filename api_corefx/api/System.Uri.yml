items:
- uid: System.Uri
  href: System.Uri.yml
  name: Uri
  fullName: System.Uri
  type: Class
  source:
    remote: &o1
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 10
  syntax:
    content:
      CSharp: public class Uri
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Uri
  children:
  - System.Uri.#ctor(System.String)
  - System.Uri.#ctor(System.String,System.UriKind)
  - System.Uri.#ctor(System.Uri,System.String)
  - System.Uri.#ctor(System.Uri,System.Uri)
  - System.Uri.AbsolutePath
  - System.Uri.AbsoluteUri
  - System.Uri.LocalPath
  - System.Uri.Authority
  - System.Uri.HostNameType
  - System.Uri.IsDefaultPort
  - System.Uri.IsFile
  - System.Uri.IsLoopback
  - System.Uri.PathAndQuery
  - System.Uri.Segments
  - System.Uri.IsUnc
  - System.Uri.Host
  - System.Uri.Port
  - System.Uri.Query
  - System.Uri.Fragment
  - System.Uri.Scheme
  - System.Uri.OriginalString
  - System.Uri.DnsSafeHost
  - System.Uri.IdnHost
  - System.Uri.IsAbsoluteUri
  - System.Uri.UserEscaped
  - System.Uri.UserInfo
  - System.Uri.CheckHostName(System.String)
  - System.Uri.CheckSchemeName(System.String)
  - System.Uri.GetHashCode
  - System.Uri.ToString
  - System.Uri.op_Equality(System.Uri,System.Uri)
  - System.Uri.op_Inequality(System.Uri,System.Uri)
  - System.Uri.Equals(System.Object)
  - System.Uri.MakeRelativeUri(System.Uri)
  - System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  - System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  - System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  - System.Uri.IsWellFormedOriginalString
  - System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  - System.Uri.UnescapeDataString(System.String)
  - System.Uri.EscapeUriString(System.String)
  - System.Uri.EscapeDataString(System.String)
  - System.Uri.IsBaseOf(System.Uri)
- uid: System.Uri.#ctor(System.String)
  href: System.Uri.yml
  name: Uri(string)
  fullName: System.Uri.Uri(string)
  type: Constructor
  source:
    remote: &o0
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 323
  syntax:
    content:
      CSharp: public Uri(string uriString)
    parameters:
    - id: uriString
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.#ctor(System.String)
- uid: System.Uri.#ctor(System.String,System.UriKind)
  href: System.Uri.yml
  name: Uri(string, UriKind)
  fullName: System.Uri.Uri(string, System.UriKind)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 334
  syntax:
    content:
      CSharp: public Uri(string uriString, UriKind uriKind)
    parameters:
    - id: uriString
      type:
        id: System.String
        name: string
        isExternal: true
    - id: uriKind
      type:
        id: System.UriKind
        name: UriKind
        href: System.UriKind.yml
  id: System.Uri.#ctor(System.String,System.UriKind)
- uid: System.Uri.#ctor(System.Uri,System.String)
  href: System.Uri.yml
  name: Uri(Uri, string)
  fullName: System.Uri.Uri(System.Uri, string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 349
  syntax:
    content:
      CSharp: public Uri(Uri baseUri, string relativeUri)
    parameters:
    - id: baseUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: relativeUri
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.#ctor(System.Uri,System.String)
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  href: System.Uri.yml
  name: Uri(Uri, Uri)
  fullName: System.Uri.Uri(System.Uri, System.Uri)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 402
  syntax:
    content:
      CSharp: public Uri(Uri baseUri, Uri relativeUri)
    parameters:
    - id: baseUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: relativeUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
  id: System.Uri.#ctor(System.Uri,System.Uri)
- uid: System.Uri.AbsolutePath
  href: System.Uri.yml
  name: AbsolutePath
  fullName: System.Uri.AbsolutePath
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 552
  syntax:
    content:
      CSharp: public string AbsolutePath { get; }
    parameters:
    - id: AbsolutePath
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.AbsolutePath
- uid: System.Uri.AbsoluteUri
  href: System.Uri.yml
  name: AbsoluteUri
  fullName: System.Uri.AbsoluteUri
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 593
  syntax:
    content:
      CSharp: public string AbsoluteUri { get; }
    parameters:
    - id: AbsoluteUri
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.AbsoluteUri
- uid: System.Uri.LocalPath
  href: System.Uri.yml
  name: LocalPath
  fullName: System.Uri.LocalPath
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 626
  syntax:
    content:
      CSharp: public string LocalPath { get; }
    parameters:
    - id: LocalPath
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.LocalPath
- uid: System.Uri.Authority
  href: System.Uri.yml
  name: Authority
  fullName: System.Uri.Authority
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 641
  syntax:
    content:
      CSharp: public string Authority { get; }
    parameters:
    - id: Authority
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.Authority
- uid: System.Uri.HostNameType
  href: System.Uri.yml
  name: HostNameType
  fullName: System.Uri.HostNameType
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 656
  syntax:
    content:
      CSharp: public UriHostNameType HostNameType { get; }
    parameters:
    - id: HostNameType
      type:
        id: System.UriHostNameType
        name: UriHostNameType
        href: System.UriHostNameType.yml
  id: System.Uri.HostNameType
- uid: System.Uri.IsDefaultPort
  href: System.Uri.yml
  name: IsDefaultPort
  fullName: System.Uri.IsDefaultPort
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 688
  syntax:
    content:
      CSharp: public bool IsDefaultPort { get; }
    parameters:
    - id: IsDefaultPort
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsDefaultPort
- uid: System.Uri.IsFile
  href: System.Uri.yml
  name: IsFile
  fullName: System.Uri.IsFile
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 708
  syntax:
    content:
      CSharp: public bool IsFile { get; }
    parameters:
    - id: IsFile
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsFile
- uid: System.Uri.IsLoopback
  href: System.Uri.yml
  name: IsLoopback
  fullName: System.Uri.IsLoopback
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 721
  syntax:
    content:
      CSharp: public bool IsLoopback { get; }
    parameters:
    - id: IsLoopback
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsLoopback
- uid: System.Uri.PathAndQuery
  href: System.Uri.yml
  name: PathAndQuery
  fullName: System.Uri.PathAndQuery
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 739
  syntax:
    content:
      CSharp: public string PathAndQuery { get; }
    parameters:
    - id: PathAndQuery
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.PathAndQuery
- uid: System.Uri.Segments
  href: System.Uri.yml
  name: Segments
  fullName: System.Uri.Segments
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 763
  syntax:
    content:
      CSharp: public string[] Segments { get; }
    parameters:
    - id: Segments
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: System.Uri.Segments
- uid: System.Uri.IsUnc
  href: System.Uri.yml
  name: IsUnc
  fullName: System.Uri.IsUnc
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 802
  syntax:
    content:
      CSharp: public bool IsUnc { get; }
    parameters:
    - id: IsUnc
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsUnc
- uid: System.Uri.Host
  href: System.Uri.yml
  name: Host
  fullName: System.Uri.Host
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 816
  syntax:
    content:
      CSharp: public string Host { get; }
    parameters:
    - id: Host
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.Host
- uid: System.Uri.Port
  href: System.Uri.yml
  name: Port
  fullName: System.Uri.Port
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 966
  syntax:
    content:
      CSharp: public int Port { get; }
    parameters:
    - id: Port
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Uri.Port
- uid: System.Uri.Query
  href: System.Uri.yml
  name: Query
  fullName: System.Uri.Query
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 993
  syntax:
    content:
      CSharp: public string Query { get; }
    parameters:
    - id: Query
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.Query
- uid: System.Uri.Fragment
  href: System.Uri.yml
  name: Fragment
  fullName: System.Uri.Fragment
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1019
  syntax:
    content:
      CSharp: public string Fragment { get; }
    parameters:
    - id: Fragment
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.Fragment
- uid: System.Uri.Scheme
  href: System.Uri.yml
  name: Scheme
  fullName: System.Uri.Scheme
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1046
  syntax:
    content:
      CSharp: public string Scheme { get; }
    parameters:
    - id: Scheme
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.Scheme
- uid: System.Uri.OriginalString
  href: System.Uri.yml
  name: OriginalString
  fullName: System.Uri.OriginalString
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1075
  syntax:
    content:
      CSharp: public string OriginalString { get; }
    parameters:
    - id: OriginalString
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.OriginalString
- uid: System.Uri.DnsSafeHost
  href: System.Uri.yml
  name: DnsSafeHost
  fullName: System.Uri.DnsSafeHost
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1088
  syntax:
    content:
      CSharp: public string DnsSafeHost { get; }
    parameters:
    - id: DnsSafeHost
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.DnsSafeHost
- uid: System.Uri.IdnHost
  href: System.Uri.yml
  name: IdnHost
  fullName: System.Uri.IdnHost
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1150
  syntax:
    content:
      CSharp: public string IdnHost { get; }
    parameters:
    - id: IdnHost
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.IdnHost
- uid: System.Uri.IsAbsoluteUri
  href: System.Uri.yml
  name: IsAbsoluteUri
  fullName: System.Uri.IsAbsoluteUri
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1169
  syntax:
    content:
      CSharp: public bool IsAbsoluteUri { get; }
    parameters:
    - id: IsAbsoluteUri
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsAbsoluteUri
- uid: System.Uri.UserEscaped
  href: System.Uri.yml
  name: UserEscaped
  fullName: System.Uri.UserEscaped
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1179
  syntax:
    content:
      CSharp: public bool UserEscaped { get; }
    parameters:
    - id: UserEscaped
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.UserEscaped
- uid: System.Uri.UserInfo
  href: System.Uri.yml
  name: UserInfo
  fullName: System.Uri.UserInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1190
  syntax:
    content:
      CSharp: public string UserInfo { get; }
    parameters:
    - id: UserInfo
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.UserInfo
- uid: System.Uri.CheckHostName(System.String)
  href: System.Uri.yml
  name: CheckHostName(string)
  fullName: System.Uri.CheckHostName(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1215
  syntax:
    content:
      CSharp: public static UriHostNameType CheckHostName(string name)
    parameters:
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: UriHostNameType
      type:
        id: System.UriHostNameType
        name: UriHostNameType
        href: System.UriHostNameType.yml
  id: System.Uri.CheckHostName(System.String)
- uid: System.Uri.CheckSchemeName(System.String)
  href: System.Uri.yml
  name: CheckSchemeName(string)
  fullName: System.Uri.CheckSchemeName(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1343
  syntax:
    content:
      CSharp: public static bool CheckSchemeName(string schemeName)
    parameters:
    - id: schemeName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.CheckSchemeName(System.String)
- uid: System.Uri.GetHashCode
  href: System.Uri.yml
  name: GetHashCode()
  fullName: System.Uri.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1416
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Uri.GetHashCode
- uid: System.Uri.ToString
  href: System.Uri.yml
  name: ToString()
  fullName: System.Uri.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1452
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.ToString
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  href: System.Uri.yml
  name: operator ==(Uri, Uri)
  fullName: System.Uri.operator ==(System.Uri, System.Uri)
  type: Operator
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1473
  syntax:
    content:
      CSharp: public static bool operator ==(Uri uri1, Uri uri2)
    parameters:
    - id: uri1
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: uri2
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.op_Equality(System.Uri,System.Uri)
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  href: System.Uri.yml
  name: operator !=(Uri, Uri)
  fullName: System.Uri.operator !=(System.Uri, System.Uri)
  type: Operator
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1489
  syntax:
    content:
      CSharp: public static bool operator !=(Uri uri1, Uri uri2)
    parameters:
    - id: uri1
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: uri2
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.op_Inequality(System.Uri,System.Uri)
- uid: System.Uri.Equals(System.Object)
  href: System.Uri.yml
  name: Equals(object)
  fullName: System.Uri.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1518
  syntax:
    content:
      CSharp: public override bool Equals(object comparand)
    parameters:
    - id: comparand
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.Equals(System.Object)
- uid: System.Uri.MakeRelativeUri(System.Uri)
  href: System.Uri.yml
  name: MakeRelativeUri(Uri)
  fullName: System.Uri.MakeRelativeUri(System.Uri)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1730
  syntax:
    content:
      CSharp: public Uri MakeRelativeUri(Uri uri)
    parameters:
    - id: uri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Uri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
  id: System.Uri.MakeRelativeUri(System.Uri)
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  href: System.Uri.yml
  name: TryCreate(string, UriKind, out Uri)
  fullName: System.Uri.TryCreate(string, System.UriKind, out System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 238
  syntax:
    content:
      CSharp: public static bool TryCreate(string uriString, UriKind uriKind, out Uri result)
    parameters:
    - id: uriString
      type:
        id: System.String
        name: string
        isExternal: true
    - id: uriKind
      type:
        id: System.UriKind
        name: UriKind
        href: System.UriKind.yml
    - id: result
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  href: System.Uri.yml
  name: TryCreate(Uri, string, out Uri)
  fullName: System.Uri.TryCreate(System.Uri, string, out System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 250
  syntax:
    content:
      CSharp: public static bool TryCreate(Uri baseUri, string relativeUri, out Uri result)
    parameters:
    - id: baseUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: relativeUri
      type:
        id: System.String
        name: string
        isExternal: true
    - id: result
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  href: System.Uri.yml
  name: TryCreate(Uri, Uri, out Uri)
  fullName: System.Uri.TryCreate(System.Uri, System.Uri, out System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 265
  syntax:
    content:
      CSharp: public static bool TryCreate(Uri baseUri, Uri relativeUri, out Uri result)
    parameters:
    - id: baseUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: relativeUri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: result
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  href: System.Uri.yml
  name: GetComponents(UriComponents, UriFormat)
  fullName: System.Uri.GetComponents(System.UriComponents, System.UriFormat)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 300
  syntax:
    content:
      CSharp: public string GetComponents(UriComponents components, UriFormat format)
    parameters:
    - id: components
      type:
        id: System.UriComponents
        name: UriComponents
        href: System.UriComponents.yml
    - id: format
      type:
        id: System.UriFormat
        name: UriFormat
        href: System.UriFormat.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  href: System.Uri.yml
  name: Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  fullName: System.Uri.Compare(System.Uri, System.Uri, System.UriComponents, System.UriFormat, System.StringComparison)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 327
  syntax:
    content:
      CSharp: public static int Compare(Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType)
    parameters:
    - id: uri1
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: uri2
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    - id: partsToCompare
      type:
        id: System.UriComponents
        name: UriComponents
        href: System.UriComponents.yml
    - id: compareFormat
      type:
        id: System.UriFormat
        name: UriFormat
        href: System.UriFormat.yml
    - id: comparisonType
      type:
        id: System.StringComparison
        name: StringComparison
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
- uid: System.Uri.IsWellFormedOriginalString
  href: System.Uri.yml
  name: IsWellFormedOriginalString()
  fullName: System.Uri.IsWellFormedOriginalString()
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 351
  syntax:
    content:
      CSharp: public bool IsWellFormedOriginalString()
    parameters: []
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsWellFormedOriginalString
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  href: System.Uri.yml
  name: IsWellFormedUriString(string, UriKind)
  fullName: System.Uri.IsWellFormedUriString(string, System.UriKind)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 360
  syntax:
    content:
      CSharp: public static bool IsWellFormedUriString(string uriString, UriKind uriKind)
    parameters:
    - id: uriString
      type:
        id: System.String
        name: string
        isExternal: true
    - id: uriKind
      type:
        id: System.UriKind
        name: UriKind
        href: System.UriKind.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
- uid: System.Uri.UnescapeDataString(System.String)
  href: System.Uri.yml
  name: UnescapeDataString(string)
  fullName: System.Uri.UnescapeDataString(string)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 495
  syntax:
    content:
      CSharp: public static string UnescapeDataString(string stringToUnescape)
    parameters:
    - id: stringToUnescape
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.UnescapeDataString(System.String)
- uid: System.Uri.EscapeUriString(System.String)
  href: System.Uri.yml
  name: EscapeUriString(string)
  fullName: System.Uri.EscapeUriString(string)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 530
  syntax:
    content:
      CSharp: public static string EscapeUriString(string stringToEscape)
    parameters:
    - id: stringToEscape
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.EscapeUriString(System.String)
- uid: System.Uri.EscapeDataString(System.String)
  href: System.Uri.yml
  name: EscapeDataString(string)
  fullName: System.Uri.EscapeDataString(string)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 550
  syntax:
    content:
      CSharp: public static string EscapeDataString(string stringToEscape)
    parameters:
    - id: stringToEscape
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Uri.EscapeDataString(System.String)
- uid: System.Uri.IsBaseOf(System.Uri)
  href: System.Uri.yml
  name: IsBaseOf(Uri)
  fullName: System.Uri.IsBaseOf(System.Uri)
  type: Method
  source:
    remote: *o1
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 831
  syntax:
    content:
      CSharp: public bool IsBaseOf(Uri uri)
    parameters:
    - id: uri
      type:
        id: System.Uri
        name: Uri
        href: System.Uri.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Uri.IsBaseOf(System.Uri)
