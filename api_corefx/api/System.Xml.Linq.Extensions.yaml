id: System.Xml.Linq.Extensions
href: System.Xml.Linq.Extensions.yaml
name:
  CSharp: Extensions
qualifiedName:
  CSharp: System.Xml.Linq.Extensions
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
  startLine: 13
summary: Defines the LINQ to XML extension methods.
syntax:
  content:
    CSharp: public static class Extensions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Xml.Linq.Extensions.Attributes(IEnumerable{System.Xml.Linq.XElement})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Attributes(IEnumerable{System.Xml.Linq.XElement})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 24
  summary: >-
    Returns all of the [System.Xml.Linq.XAttribute](System.Xml.Linq.XAttribute.yaml)s for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) of

    this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XAttribute> Attributes(this IEnumerable<XElement> source)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XAttribute](System.Xml.Linq.XAttribute.yaml) containing the XML

        Attributes for every [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in the target @!:System.Collections.IEnumerable-

        of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Attributes(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Attributes
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Attributes(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 40
  summary: >-
    Returns the [System.Xml.Linq.XAttribute](System.Xml.Linq.XAttribute.yaml)s that have a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  Each

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml)'s [System.Xml.Linq.XAttribute](System.Xml.Linq.XAttribute.yaml)s in the target @!:System.Collections.IEnumerable-

    of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) are scanned for a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XAttribute> Attributes(this IEnumerable<XElement> source, XName name)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XAttribute](System.Xml.Linq.XAttribute.yaml) containing the XML

        Attributes with a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml) for every [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in

        the target @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Ancestors``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Ancestors
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Ancestors``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 56
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the ancestors (parent

    and it's parent up to the root) of each of the [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml)s in this

    @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Ancestors<T>(this IEnumerable<T> source)where T : XNode'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the ancestors (parent

        and it's parent up to the root) of each of the [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml)s in this

        @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Ancestors``1(IEnumerable{``0},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Ancestors
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Ancestors``1(IEnumerable{``0},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 72
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the ancestors (parent

    and it's parent up to the root) that have a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for each

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Ancestors<T>(this IEnumerable<T> source, XName name)where T : XNode'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the ancestors (parent

        and it's parent up to the root) that have a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for each

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable{System.Xml.Linq.XElement})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: AncestorsAndSelf
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable{System.Xml.Linq.XElement})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 90
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's ancestors (parent and it's parent up to the root).

    This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XElement> AncestorsAndSelf(this IEnumerable<XElement> source)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's ancestors (parent and it's parent up to the root).

        This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: AncestorsAndSelf
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 108
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's ancestors (parent and it's parent up to the root)

    that match the passed in [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for each

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XElement> AncestorsAndSelf(this IEnumerable<XElement> source, XName name)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's ancestors (parent and it's parent up to the root)

        that match the passed in [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for each

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Nodes``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Nodes
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Nodes``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 117
  summary: Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml) over the content of a set of nodes
  syntax:
    content:
      CSharp: 'public static IEnumerable<XNode> Nodes<T>(this IEnumerable<T> source)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
- id: System.Xml.Linq.Extensions.DescendantNodes``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: DescendantNodes
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.DescendantNodes``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 140
  summary: Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml) over the descendants of a set of nodes
  syntax:
    content:
      CSharp: 'public static IEnumerable<XNode> DescendantNodes<T>(this IEnumerable<T> source)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
- id: System.Xml.Linq.Extensions.Descendants``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Descendants
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Descendants``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 156
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the descendants (children

    and their children down to the leaf level).  This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in

    this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Descendants<T>(this IEnumerable<T> source)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the descendants (children

        and their children down to the leaf level).  This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in

        this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Descendants``1(IEnumerable{``0},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Descendants
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Descendants``1(IEnumerable{``0},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 172
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the descendants (children

    and their children down to the leaf level) that have a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done

    for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in the target @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Descendants<T>(this IEnumerable<T> source, XName name)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the descendants (children

        and their children down to the leaf level) that have a matching [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done

        for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.DescendantNodesAndSelf(IEnumerable{System.Xml.Linq.XElement})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: DescendantNodesAndSelf
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.DescendantNodesAndSelf(IEnumerable{System.Xml.Linq.XElement})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 190
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's descendants

    that match the passed in [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for each

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XNode> DescendantNodesAndSelf(this IEnumerable<XElement> source)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and descendants.

        This is done for each

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable{System.Xml.Linq.XElement})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: DescendantsAndSelf
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable{System.Xml.Linq.XElement})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 208
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's descendants (children and children's children down

    to the leaf nodes).  This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable-

    of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XElement> DescendantsAndSelf(this IEnumerable<XElement> source)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's descendants (children and children's children down

        to the leaf nodes).  This is done for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable-

        of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: DescendantsAndSelf
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 226
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

    [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's descendants (children and children's children down

    to the leaf nodes) that match the passed in [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for

    each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: public static IEnumerable<XElement> DescendantsAndSelf(this IEnumerable<XElement> source, XName name)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XElement}
        name: IEnumerable{System.Xml.Linq.XElement}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the

        [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) and it's descendants (children and children's children down

        to the leaf nodes) that match the passed in [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).  This is done for

        each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Elements``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Elements
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Elements``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 240
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

    for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Elements<T>(this IEnumerable<T> source)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

        for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.Elements``1(IEnumerable{``0},System.Xml.Linq.XName)
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Elements
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Elements``1(IEnumerable{``0},System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 254
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

    with a matching for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<XElement> Elements<T>(this IEnumerable<T> source, XName name)where T : XContainer'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

        for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
- id: System.Xml.Linq.Extensions.InDocumentOrder``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: InDocumentOrder
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.InDocumentOrder``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 269
  summary: >-
    Returns an @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

    with a matching for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).
  syntax:
    content:
      CSharp: 'public static IEnumerable<T> InDocumentOrder<T>(this IEnumerable<T> source)where T : XNode'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: IEnumerable
      description: >-
        An @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) containing the child elements

        for each [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml) in this @!:System.Collections.IEnumerable- of [System.Xml.Linq.XElement](System.Xml.Linq.XElement.yaml).

        in document order
- id: System.Xml.Linq.Extensions.Remove(IEnumerable{System.Xml.Linq.XAttribute})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Remove(IEnumerable{System.Xml.Linq.XAttribute})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 279
  summary: >-
    Removes each  represented in this  of

    .  Note that this method uses snapshot semantics (copies the

    attributes to a  before deleting each).
  syntax:
    content:
      CSharp: public static void Remove(this IEnumerable<XAttribute> source)
    parameters:
    - id: source
      type:
        id: IEnumerable{System.Xml.Linq.XAttribute}
        name: IEnumerable{System.Xml.Linq.XAttribute}
        isExternal: true
    return:
      id: Void
- id: System.Xml.Linq.Extensions.Remove``1(IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Xml.Linq.Extensions.Remove``1(IEnumerable{``0})
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 291
  summary: >-
    Removes each [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml) represented in this @!:System.Collections.IEnumerable-

    T which must be a derived from [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml).  Note that this method uses snapshot semantics

    (copies the [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml)s to a List before deleting each).
  syntax:
    content:
      CSharp: 'public static void Remove<T>(this IEnumerable<T> source)where T : XNode'
    parameters:
    - id: source
      type:
        id: IEnumerable{``0}
        name: IEnumerable{``0}
        isExternal: true
    return:
      id: Void
