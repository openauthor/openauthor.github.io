id: System.Xml.Linq.XNamespace
href: System.Xml.Linq.XNamespace.yaml
name:
  CSharp: XNamespace
qualifiedName:
  CSharp: System.Xml.Linq.XNamespace
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
  startLine: 12
summary: Represents an XML namespace. This class cannot be inherited.
syntax:
  content:
    CSharp: public sealed class XNamespace
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Xml.Linq.XNamespace.NamespaceName
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: NamespaceName
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.NamespaceName
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 42
  summary: Gets the namespace name of the namespace.
  syntax:
    content:
      CSharp: public string NamespaceName { get; }
    parameters:
    - id: NamespaceName
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.Xml.Linq.XNamespace.GetName(System.String)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: GetName
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.GetName(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 54
  summary: Returns an [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml) object created from the current instance and the specified local name.
  syntax:
    content:
      CSharp: public XName GetName(string localName)
    parameters:
    - id: localName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: XName
- id: System.Xml.Linq.XNamespace.ToString
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.ToString
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 64
  summary: Returns the namespace name of this [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml).
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      description: A string value containing the namespace name.
- id: System.Xml.Linq.XNamespace.None
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: None
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.None
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 76
  summary: Gets the [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) object that corresponds to no namespace.
  syntax:
    content:
      CSharp: public static XNamespace None { get; }
    parameters:
    - id: None
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
- id: System.Xml.Linq.XNamespace.Xml
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: Xml
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.Xml
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 87
  summary: Gets the [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) object that corresponds to the xml uri (http://www.w3.org/XML/1998/namespace).
  syntax:
    content:
      CSharp: public static XNamespace Xml { get; }
    parameters:
    - id: Xml
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
- id: System.Xml.Linq.XNamespace.Xmlns
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: Xmlns
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.Xmlns
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 98
  summary: Gets the [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) object that corresponds to the xmlns uri (http://www.w3.org/2000/xmlns/).
  syntax:
    content:
      CSharp: public static XNamespace Xmlns { get; }
    parameters:
    - id: Xmlns
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
- id: System.Xml.Linq.XNamespace.Get(System.String)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: Get
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.Get(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 113
  summary: Gets an [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) created from the specified namespace name.
  syntax:
    content:
      CSharp: public static XNamespace Get(string namespaceName)
    parameters:
    - id: namespaceName
      type:
        id: System.String
        name: System.String
        isExternal: true
    return:
      id: XNamespace
- id: System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: op_Implicit
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 124
  summary: Converts a string containing a namespace name to an [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml).
  syntax:
    content:
      CSharp: '[CLSCompliant(false)] public static implicit operator XNamespace(string namespaceName) { return namespaceName != null ? Get(namespaceName) : null; }'
    parameters:
    - id: namespaceName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: A string containing the namespace name.
    return:
      id: XNamespace
      description: An [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) constructed from the namespace name string.
- id: System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: op_Addition
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 136
  summary: Combines an [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) object with a local name to create an [System.Xml.Linq.XName](System.Xml.Linq.XName.yaml).
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Usage", "CA2225:OperatorOverloadsHaveNamedAlternates", Justification = "Functionality available via XNamespace.Get().")] public static XName operator +(XNamespace ns, string localName) { if (ns == null) throw new ArgumentNullException("ns"); return ns.GetName(localName); }'
    parameters:
    - id: ns
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
      description: The namespace for the expanded name.
    - id: localName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: The local name for the expanded name.
    return:
      id: XName
      description: The new XName constructed from the namespace and local name.
- id: System.Xml.Linq.XNamespace.Equals(System.Object)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 154
  summary: Determines whether the specified [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) is equal to the current [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml).
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: The [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) to compare to the current [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml).
    return:
      id: Boolean
      description: true if the specified [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) is equal to the current [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml); otherwise false.
- id: System.Xml.Linq.XNamespace.GetHashCode
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.GetHashCode
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 163
  summary: >-
    Serves as a hash function for [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml). GetHashCode is suitable

    for use in hashing algorithms and data structures like a hash table.
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 185
  summary: Returns a value indicating whether two instances of [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) are equal.
  syntax:
    content:
      CSharp: public static bool operator ==(XNamespace left, XNamespace right) { return (object)left == (object)right; }
    parameters:
    - id: left
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
      description: The first [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) to compare.
    - id: right
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
      description: The second [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) to compare.
    return:
      id: Boolean
      description: true if left and right are equal; otherwise false.
- id: System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  href: System.Xml.Linq.XNamespace.yaml
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNamespace.cs
    startLine: 200
  summary: Returns a value indicating whether two instances of [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) are not equal.
  syntax:
    content:
      CSharp: public static bool operator !=(XNamespace left, XNamespace right) { return (object)left != (object)right; }
    parameters:
    - id: left
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
      description: The first [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) to compare.
    - id: right
      type:
        id: System.Xml.Linq.XNamespace
        name: XNamespace
        href: System.Xml.Linq.XNamespace.yaml
      description: The second [System.Xml.Linq.XNamespace](System.Xml.Linq.XNamespace.yaml) to compare.
    return:
      id: Boolean
      description: true if left and right are not equal; otherwise false.
