id: System.Xml.Linq.XNode
href: System.Xml.Linq.XNode.yaml
name:
  CSharp: XNode
qualifiedName:
  CSharp: System.Xml.Linq.XNode
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
  startLine: 26
summary: >-
  Represents nodes (elements, comments, document type, processing instruction,

  and text nodes) in the XML tree.
syntax:
  content:
    CSharp: public abstract class XNode
inheritance:
- id: IXmlLineInfo
  name: IXmlLineInfo
  isExternal: true
- id: System.Xml.Linq.XObject
  name: XObject
  href: System.Xml.Linq.XObject.yaml
items:
- id: System.Xml.Linq.XNode.NextNode
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: NextNode
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.NextNode
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 42
  summary: Gets the next sibling node of this node.
  syntax:
    content:
      CSharp: public XNode NextNode { get; }
    parameters:
    - id: NextNode
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
- id: System.Xml.Linq.XNode.PreviousNode
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: PreviousNode
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.PreviousNode
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 57
  summary: Gets the previous sibling node of this node.
  syntax:
    content:
      CSharp: public XNode PreviousNode { get; }
    parameters:
    - id: PreviousNode
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
- id: System.Xml.Linq.XNode.DocumentOrderComparer
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: DocumentOrderComparer
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.DocumentOrderComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 76
  summary: Gets a comparer that can compare the relative position of two nodes.
  syntax:
    content:
      CSharp: public static XNodeDocumentOrderComparer DocumentOrderComparer { get; }
    parameters:
    - id: DocumentOrderComparer
      type:
        id: System.Xml.Linq.XNodeDocumentOrderComparer
        name: XNodeDocumentOrderComparer
        href: System.Xml.Linq.XNodeDocumentOrderComparer.yaml
- id: System.Xml.Linq.XNode.EqualityComparer
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: EqualityComparer
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.EqualityComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 88
  summary: Gets a comparer that can compare two nodes for value equality.
  syntax:
    content:
      CSharp: public static XNodeEqualityComparer EqualityComparer { get; }
    parameters:
    - id: EqualityComparer
      type:
        id: System.Xml.Linq.XNodeEqualityComparer
        name: XNodeEqualityComparer
        href: System.Xml.Linq.XNodeEqualityComparer.yaml
- id: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: AddAfterSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 117
  summary: Adds the specified content immediately after this node.
  syntax:
    content:
      CSharp: public void AddAfterSelf(object content)
    parameters:
    - id: content
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: >-
        A content object containing simple content or a collection of content objects

        to be added after this node.
    return:
      id: Void
- id: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: AddAfterSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 136
  summary: Adds the specified content immediately after this node.
  syntax:
    content:
      CSharp: public void AddAfterSelf(params object[] content)
    parameters:
    - id: content
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: A parameter list of content objects.
    return:
      id: Void
- id: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: AddBeforeSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 161
  summary: Adds the specified content immediately before this node.
  syntax:
    content:
      CSharp: public void AddBeforeSelf(object content)
    parameters:
    - id: content
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: >-
        A content object containing simple content or a collection of content objects

        to be added after this node.
    return:
      id: Void
- id: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: AddBeforeSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 183
  summary: Adds the specified content immediately before this node.
  syntax:
    content:
      CSharp: public void AddBeforeSelf(params object[] content)
    parameters:
    - id: content
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: A parameter list of content objects.
    return:
      id: Void
- id: System.Xml.Linq.XNode.Ancestors
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: Ancestors
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.Ancestors
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 201
  summary: Returns a collection of the ancestor elements of this node.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> Ancestors()
    parameters: []
    return:
      id: IEnumerable
      description: The ancestor elements of this node.
- id: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: Ancestors
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 218
  summary: Returns a collection of the ancestor elements of this node with the specified name.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> Ancestors(XName name)
    parameters:
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
      description: The name of the ancestor elements to find.
    return:
      id: IEnumerable
      description: A collection of the ancestor elements of this node with the specified name.
- id: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: CompareDocumentOrder
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 234
  summary: Compares two nodes to determine their relative XML document order.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification = "Reviewed.")] public static int CompareDocumentOrder(XNode n1, XNode n2)'
    parameters:
    - id: n1
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: First node to compare.
    - id: n2
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: Second node to compare.
    return:
      id: Int32
      description: 0 if the nodes are equal; -1 if n1 is before n2; 1 if n1 is after n2.
- id: System.Xml.Linq.XNode.CreateReader
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: CreateReader
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.CreateReader
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 297
  summary: Creates an @!:XmlReader- for the node.
  syntax:
    content:
      CSharp: public XmlReader CreateReader()
    parameters: []
    return:
      id: XmlReader
      description: An @!:XmlReader- that can be used to read the node and its descendants.
- id: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: CreateReader
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 309
  summary: Creates an @!:XmlReader- for the node.
  syntax:
    content:
      CSharp: public XmlReader CreateReader(ReaderOptions readerOptions)
    parameters:
    - id: readerOptions
      type:
        id: System.Xml.Linq.ReaderOptions
        name: ReaderOptions
        href: System.Xml.Linq.ReaderOptions.yaml
      description: Options to be used for the returned reader. These override the default usage of annotations from the tree.
    return:
      id: XmlReader
      description: An @!:XmlReader- that can be used to read the node and its descendants.
- id: System.Xml.Linq.XNode.NodesAfterSelf
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: NodesAfterSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.NodesAfterSelf
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 321
  summary: Returns a collection of the sibling nodes after this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XNode> NodesAfterSelf()
    parameters: []
    return:
      id: IEnumerable
      description: The nodes after this node.
- id: System.Xml.Linq.XNode.NodesBeforeSelf
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: NodesBeforeSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.NodesBeforeSelf
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 338
  summary: Returns a collection of the sibling nodes before this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XNode> NodesBeforeSelf()
    parameters: []
    return:
      id: IEnumerable
      description: The nodes after this node.
- id: System.Xml.Linq.XNode.ElementsAfterSelf
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ElementsAfterSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ElementsAfterSelf
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 359
  summary: Returns a collection of the sibling element nodes after this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> ElementsAfterSelf()
    parameters: []
    return:
      id: IEnumerable
      description: The element nodes after this node.
- id: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ElementsAfterSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 373
  summary: >-
    Returns a collection of the sibling element nodes with the specified name

    after this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> ElementsAfterSelf(XName name)
    parameters:
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
      description: The name of elements to enumerate.
    return:
      id: IEnumerable
      description: The element nodes after this node with the specified name.
- id: System.Xml.Linq.XNode.ElementsBeforeSelf
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ElementsBeforeSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ElementsBeforeSelf
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 385
  summary: Returns a collection of the sibling element nodes before this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> ElementsBeforeSelf()
    parameters: []
    return:
      id: IEnumerable
      description: The element nodes before this node.
- id: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ElementsBeforeSelf
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 399
  summary: >-
    Returns a collection of the sibling element nodes with the specified name

    before this node, in document order.
  syntax:
    content:
      CSharp: public IEnumerable<XElement> ElementsBeforeSelf(XName name)
    parameters:
    - id: name
      type:
        id: System.Xml.Linq.XName
        name: XName
        href: System.Xml.Linq.XName.yaml
      description: The name of elements to enumerate.
    return:
      id: IEnumerable
      description: The element nodes before this node with the specified name.
- id: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: IsAfter
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 410
  summary: >-
    Determines if the current node appears after a specified node

    in terms of document order.
  syntax:
    content:
      CSharp: public bool IsAfter(XNode node)
    parameters:
    - id: node
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The node to compare for document order.
    return:
      id: Boolean
      description: True if this node appears after the specified node; false if not.
- id: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: IsBefore
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 421
  summary: >-
    Determines if the current node appears before a specified node

    in terms of document order.
  syntax:
    content:
      CSharp: public bool IsBefore(XNode node)
    parameters:
    - id: node
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The node to compare for document order.
    return:
      id: Boolean
      description: True if this node appears before the specified node; false if not.
- id: System.Xml.Linq.XNode.ReadFrom(XmlReader)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ReadFrom
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ReadFrom(XmlReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 437
  summary: >-
    Creates an [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml) from an @!:XmlReader-.

    The runtime type of the node is determined by the node type

    ([System.Xml.Linq.XObject.NodeType](System.Xml.Linq.XObject.yaml)) of the first node encountered

    in the reader.
  syntax:
    content:
      CSharp: public static XNode ReadFrom(XmlReader reader)
    parameters:
    - id: reader
      type:
        id: XmlReader
        name: XmlReader
        isExternal: true
      description: An @!:XmlReader- positioned at the node to read into this [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml).
    return:
      id: XNode
      description: An [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml) that contains the nodes read from the reader.
- id: System.Xml.Linq.XNode.Remove
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: Remove
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.Remove
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 468
  summary: Removes this XNode from the underlying XML tree.
  syntax:
    content:
      CSharp: public void Remove()
    parameters: []
    return:
      id: Void
- id: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ReplaceWith
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 484
  summary: Replaces the content of this [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yaml).
  syntax:
    content:
      CSharp: public void ReplaceWith(object content)
    parameters:
    - id: content
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: Content that replaces this node.
    return:
      id: Void
- id: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ReplaceWith
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 500
  summary: Replaces this node with the specified content.
  syntax:
    content:
      CSharp: public void ReplaceWith(params object[] content)
    parameters:
    - id: content
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Content that replaces this node.
    return:
      id: Void
- id: System.Xml.Linq.XNode.ToString
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ToString
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 510
  summary: >-
    Provides the formatted XML text representation.

    You can use the SaveOptions as an annotation on this node or its ancestors, then this method will use those options.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      description: A formatted XML string.
- id: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: ToString
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 523
  summary: Provides the XML text representation.
  syntax:
    content:
      CSharp: public string ToString(SaveOptions options)
    parameters:
    - id: options
      type:
        id: System.Xml.Linq.SaveOptions
        name: SaveOptions
        href: System.Xml.Linq.SaveOptions.yaml
      description: >-
        If SaveOptions.DisableFormatting is enabled the output is not indented.

        If SaveOptions.OmitDuplicateNamespaces is enabled duplicate namespace declarations will be removed.
    return:
      id: String
      description: An XML string.
- id: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: DeepEquals
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 546
  summary: Compares the values of two nodes, including the values of all descendant nodes.
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification = "Reviewed.")] public static bool DeepEquals(XNode n1, XNode n2)'
    parameters:
    - id: n1
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The first node to compare.
    - id: n2
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The second node to compare.
    return:
      id: Boolean
      description: true if the nodes are equal, false otherwise.
- id: System.Xml.Linq.XNode.WriteTo(XmlWriter)
  href: System.Xml.Linq.XNode.yaml
  name:
    CSharp: WriteTo
  qualifiedName:
    CSharp: System.Xml.Linq.XNode.WriteTo(XmlWriter)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNode.cs
    startLine: 558
  summary: Write the current node to an @!:XmlWriter-.
  syntax:
    content:
      CSharp: public abstract void WriteTo(XmlWriter writer);
    parameters:
    - id: writer
      type:
        id: XmlWriter
        name: XmlWriter
        isExternal: true
      description: The @!:XmlWriter- to write the current node into.
    return:
      id: Void
