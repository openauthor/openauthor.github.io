id: System.Xml.Linq.XNodeDocumentOrderComparer
href: System.Xml.Linq.XNodeDocumentOrderComparer.yaml
name:
  CSharp: XNodeDocumentOrderComparer
qualifiedName:
  CSharp: System.Xml.Linq.XNodeDocumentOrderComparer
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/dotnet/corefx.git
  path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
  startLine: 13
summary: >-
  Contains functionality to compare nodes for their document order.

  This class cannot be inherited.
syntax:
  content:
    CSharp: public sealed class XNodeDocumentOrderComparer
inheritance:
- id: System.Collections.IComparer
  name: System.Collections.IComparer
  isExternal: true
items:
- id: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  href: System.Xml.Linq.XNodeDocumentOrderComparer.yaml
  name:
    CSharp: Compare
  qualifiedName:
    CSharp: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XNodeDocumentOrderComparer.cs
    startLine: 30
  summary: Compares two nodes to determine their relative XML document order.
  syntax:
    content:
      CSharp: public int Compare(XNode x, XNode y)
    parameters:
    - id: x
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The first node to compare.
    - id: y
      type:
        id: System.Xml.Linq.XNode
        name: XNode
        href: System.Xml.Linq.XNode.yaml
      description: The second node to compare.
    return:
      id: Int32
      description: >-
        0 if the nodes are equal;

        -1 if x is before y;

        1 if x is after y.
