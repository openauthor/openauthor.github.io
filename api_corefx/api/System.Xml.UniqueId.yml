items:
- uid: System.Xml.UniqueId
  href: System.Xml.UniqueId.yml
  name: UniqueId
  fullName: System.Xml.UniqueId
  type: Class
  source:
    remote: &o0
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
      key: 882a41e3
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 14
  syntax:
    content:
      CSharp: public class UniqueId
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Xml.UniqueId
  children:
  - System.Xml.UniqueId.#ctor
  - System.Xml.UniqueId.#ctor(System.Guid)
  - System.Xml.UniqueId.#ctor(System.Byte[])
  - System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
  - System.Xml.UniqueId.#ctor(System.String)
  - System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
  - System.Xml.UniqueId.CharArrayLength
  - System.Xml.UniqueId.IsGuid
  - System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
  - System.Xml.UniqueId.TryGetGuid(System.Guid@)
  - System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
  - System.Xml.UniqueId.ToString
  - System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.Xml.UniqueId.Equals(System.Object)
  - System.Xml.UniqueId.GetHashCode
- uid: System.Xml.UniqueId.#ctor
  href: System.Xml.UniqueId.yml
  name: UniqueId()
  fullName: System.Xml.UniqueId.UniqueId()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 65
  syntax:
    content:
      CSharp: 'public UniqueId(): this (Guid.NewGuid())'
    parameters: []
  id: System.Xml.UniqueId.#ctor
- uid: System.Xml.UniqueId.#ctor(System.Guid)
  href: System.Xml.UniqueId.yml
  name: UniqueId(Guid)
  fullName: System.Xml.UniqueId.UniqueId(System.Guid)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 69
  syntax:
    content:
      CSharp: 'public UniqueId(Guid guid): this (guid.ToByteArray())'
    parameters:
    - id: guid
      type:
        id: System.Guid
        name: Guid
        isExternal: true
  id: System.Xml.UniqueId.#ctor(System.Guid)
- uid: System.Xml.UniqueId.#ctor(System.Byte[])
  href: System.Xml.UniqueId.yml
  name: UniqueId(byte[])
  fullName: System.Xml.UniqueId.UniqueId(byte[])
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 73
  syntax:
    content:
      CSharp: 'public UniqueId(byte[] guid): this (guid, 0)'
    parameters:
    - id: guid
      type:
        id: System.Array
        name: byte[]
        isExternal: true
  id: System.Xml.UniqueId.#ctor(System.Byte[])
- uid: System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
  href: System.Xml.UniqueId.yml
  name: UniqueId(byte[], int)
  fullName: System.Xml.UniqueId.UniqueId(byte[], int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 81
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] unsafe public UniqueId(byte[] guid, int offset)'
    parameters:
    - id: guid
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
- uid: System.Xml.UniqueId.#ctor(System.String)
  href: System.Xml.UniqueId.yml
  name: UniqueId(string)
  fullName: System.Xml.UniqueId.UniqueId(string)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 103
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] unsafe public UniqueId(string value)'
    parameters:
    - id: value
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Xml.UniqueId.#ctor(System.String)
- uid: System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
  href: System.Xml.UniqueId.yml
  name: UniqueId(char[], int, int)
  fullName: System.Xml.UniqueId.UniqueId(char[], int, int)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 121
  syntax:
    content:
      CSharp: '[SecuritySafeCritical] unsafe public UniqueId(char[] chars, int offset, int count)'
    parameters:
    - id: chars
      type:
        id: System.Array
        name: char[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    - id: count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
- uid: System.Xml.UniqueId.CharArrayLength
  href: System.Xml.UniqueId.yml
  name: CharArrayLength
  fullName: System.Xml.UniqueId.CharArrayLength
  type: Property
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 147
  syntax:
    content:
      CSharp: public int CharArrayLength { /// <SecurityNote> /// Critical - accesses critical field 's'. /// Safe - doesn't leak any control or data /// </SecurityNote> [SecuritySafeCritical] get; }
    parameters:
    - id: CharArrayLength
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Xml.UniqueId.CharArrayLength
- uid: System.Xml.UniqueId.IsGuid
  href: System.Xml.UniqueId.yml
  name: IsGuid
  fullName: System.Xml.UniqueId.IsGuid
  type: Property
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 187
  syntax:
    content:
      CSharp: public bool IsGuid { get; }
    parameters:
    - id: IsGuid
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.IsGuid
- uid: System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
  href: System.Xml.UniqueId.yml
  name: ToCharArray(char[], int)
  fullName: System.Xml.UniqueId.ToCharArray(char[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 262
  syntax:
    content:
      CSharp: public int ToCharArray(char[] chars, int offset)
    parameters:
    - id: chars
      type:
        id: System.Array
        name: char[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
- uid: System.Xml.UniqueId.TryGetGuid(System.Guid@)
  href: System.Xml.UniqueId.yml
  name: TryGetGuid(out Guid)
  fullName: System.Xml.UniqueId.TryGetGuid(out System.Guid)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 331
  syntax:
    content:
      CSharp: public bool TryGetGuid(out Guid guid)
    parameters:
    - id: guid
      type:
        id: System.Guid
        name: Guid
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.TryGetGuid(System.Guid@)
- uid: System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
  href: System.Xml.UniqueId.yml
  name: TryGetGuid(byte[], int)
  fullName: System.Xml.UniqueId.TryGetGuid(byte[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 348
  syntax:
    content:
      CSharp: public bool TryGetGuid(byte[] buffer, int offset)
    parameters:
    - id: buffer
      type:
        id: System.Array
        name: byte[]
        isExternal: true
    - id: offset
      type:
        id: System.Int32
        name: int
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
- uid: System.Xml.UniqueId.ToString
  href: System.Xml.UniqueId.yml
  name: ToString()
  fullName: System.Xml.UniqueId.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 378
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Xml.UniqueId.ToString
- uid: System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  href: System.Xml.UniqueId.yml
  name: operator ==(UniqueId, UniqueId)
  fullName: System.Xml.UniqueId.operator ==(System.Xml.UniqueId, System.Xml.UniqueId)
  type: Operator
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 391
  syntax:
    content:
      CSharp: public static bool operator ==(UniqueId id1, UniqueId id2)
    parameters:
    - id: id1
      type:
        id: System.Xml.UniqueId
        name: UniqueId
        href: System.Xml.UniqueId.yml
    - id: id2
      type:
        id: System.Xml.UniqueId
        name: UniqueId
        href: System.Xml.UniqueId.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
- uid: System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  href: System.Xml.UniqueId.yml
  name: operator !=(UniqueId, UniqueId)
  fullName: System.Xml.UniqueId.operator !=(System.Xml.UniqueId, System.Xml.UniqueId)
  type: Operator
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 408
  syntax:
    content:
      CSharp: public static bool operator !=(UniqueId id1, UniqueId id2)
    parameters:
    - id: id1
      type:
        id: System.Xml.UniqueId
        name: UniqueId
        href: System.Xml.UniqueId.yml
    - id: id2
      type:
        id: System.Xml.UniqueId
        name: UniqueId
        href: System.Xml.UniqueId.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
- uid: System.Xml.UniqueId.Equals(System.Object)
  href: System.Xml.UniqueId.yml
  name: Equals(object)
  fullName: System.Xml.UniqueId.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 413
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Xml.UniqueId.Equals(System.Object)
- uid: System.Xml.UniqueId.GetHashCode
  href: System.Xml.UniqueId.yml
  name: GetHashCode()
  fullName: System.Xml.UniqueId.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 418
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Xml.UniqueId.GetHashCode
