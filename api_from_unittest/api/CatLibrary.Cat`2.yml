items:
- uid: CatLibrary.Cat`2
  href: CatLibrary.Cat`2.yml
  name: Cat<T, K>
  fullName: CatLibrary.Cat<T, K>
  type: Class
  source:
    remote: &o0
      branch: develop
      repo: https://capservice.visualstudio.com/DefaultCollection/CAPS/_git/DocAsCode
      description: f06ffe28
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 112
  summary: 'Here''s main class of this Demo.You can see mostly type of article within this class and you for more detail, please see the remarks.this class is a template class. It has two Generic parameter. they are:  and .The extension method of this class can refer to  class'
  syntax:
    content:
      CSharp: 'public class Cat<T, K> where T : class, new ()where K : struct'
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: CatLibrary.Cat`2
  children:
  - CatLibrary.Cat`2.#ctor
  - CatLibrary.Cat`2.#ctor(`0)
  - CatLibrary.Cat`2.#ctor(System.String,System.Int32@,System.String,System.Boolean)
  - CatLibrary.Cat`2.CalculateFood(System.DateTime)
  - CatLibrary.Cat`2.Jump(`0,`1,System.Boolean@)
  - CatLibrary.Cat`2.Equals(System.Object)
  - CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])
  - CatLibrary.Cat`2.op_Addition(CatLibrary.Cat{`0,`1},System.Int32)
  - CatLibrary.Cat`2.op_Subtraction(CatLibrary.Cat{`0,`1},System.Int32)
  - CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom
  - CatLibrary.Cat`2.Item(System.String)
  - CatLibrary.Cat`2.ownEat
  - CatLibrary.Cat`2.isHealthy
  - CatLibrary.Cat`2.Name
- uid: CatLibrary.Cat`2.#ctor
  href: CatLibrary.Cat`2.yml
  name: Cat()
  fullName: CatLibrary.Cat<T, K>.Cat()
  type: Constructor
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 121
  summary: Default constructor.
  syntax:
    content:
      CSharp: public Cat()
    parameters: []
  id: CatLibrary.Cat`2.#ctor
- uid: CatLibrary.Cat`2.#ctor(`0)
  href: CatLibrary.Cat`2.yml
  name: Cat(T)
  fullName: CatLibrary.Cat<T, K>.Cat(T)
  type: Constructor
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 127
  summary: Constructor with one generic parameter.
  syntax:
    content:
      CSharp: public Cat(T ownType)
    parameters:
    - id: ownType
      type:
        id: T
        name: T
        href: T
      description: This parameter type defined by class.
  id: CatLibrary.Cat`2.#ctor(`0)
- uid: CatLibrary.Cat`2.#ctor(System.String,System.Int32@,System.String,System.Boolean)
  href: CatLibrary.Cat`2.yml
  name: Cat(string, out int, string, bool)
  fullName: CatLibrary.Cat<T, K>.Cat(string, out int, string, bool)
  type: Constructor
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 136
  summary: It's a complex constructor. The parameter will have some attributes.
  syntax:
    content:
      CSharp: public Cat(string nickName, out int age, [Out] string realName, [In] bool isHealthy)
    parameters:
    - id: nickName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: it's string type.
    - id: age
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: It's an out and ref parameter.
    - id: realName
      type:
        id: System.String
        name: System.String
        isExternal: true
      description: It's an out paramter.
    - id: isHealthy
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: It's an in parameter.
  id: CatLibrary.Cat`2.#ctor(System.String,System.Int32@,System.String,System.Boolean)
- uid: CatLibrary.Cat`2.CalculateFood(System.DateTime)
  href: CatLibrary.Cat`2.yml
  name: CalculateFood(DateTime)
  fullName: CatLibrary.Cat<T, K>.CalculateFood(System.DateTime)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 144
  summary: It's a method with complex return type.
  syntax:
    content:
      CSharp: public Dictionary<string, List<int>> CalculateFood(DateTime date)
    parameters:
    - id: date
      type:
        id: System.DateTime
        name: System.DateTime
        isExternal: true
      description: Date time to now.
    return:
      id: Dictionary
      description: It's a relationship map of different kind food.
  id: CatLibrary.Cat`2.CalculateFood(System.DateTime)
- uid: CatLibrary.Cat`2.Jump(`0,`1,System.Boolean@)
  href: CatLibrary.Cat`2.yml
  name: Jump(T, K, ref bool)
  fullName: CatLibrary.Cat<T, K>.Jump(T, K, ref bool)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 152
  summary: This method have attribute above it.
  syntax:
    content:
      CSharp: '[Conditional("Debug")] public void Jump(T ownType, K anotherOwnType, ref bool cheat)'
    parameters:
    - id: ownType
      type:
        id: T
        name: T
        href: T
      description: Type come from class define.
    - id: anotherOwnType
      type:
        id: K
        name: K
        href: K
      description: Type come from class define.
    - id: cheat
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
      description: Hint whether this cat has cheat mode.
  id: CatLibrary.Cat`2.Jump(`0,`1,System.Boolean@)
- uid: CatLibrary.Cat`2.Equals(System.Object)
  href: CatLibrary.Cat`2.yml
  name: Equals(object)
  fullName: CatLibrary.Cat<T, K>.Equals(object)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 163
  summary: Override the method of Object.Equals(object obj).
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
      description: Can pass any class type.
    return:
      id: Boolean
      description: The return value tell you whehter the compare operation is successful.
  id: CatLibrary.Cat`2.Equals(System.Object)
- uid: CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])
  href: CatLibrary.Cat`2.yml
  name: GetTailLength(int*, params object[])
  fullName: CatLibrary.Cat<T, K>.GetTailLength(int*, params object[])
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 171
  summary: It's an unsafe method.
  syntax:
    content:
      CSharp: public unsafe long GetTailLength(int *catName, params object[] parameters)
    parameters:
    - id: catName
      type:
        isExternal: true
      description: Thie represent for cat name length.
    - id: parameters
      type:
        id: System.Array
        name: System.Array
        isExternal: true
      description: Optional parameters.
    return:
      id: Int64
      description: Return cat tail's length.
  id: CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])
- uid: CatLibrary.Cat`2.op_Addition(CatLibrary.Cat{`0,`1},System.Int32)
  href: CatLibrary.Cat`2.yml
  name: operator +(Cat<T, K>, int)
  fullName: CatLibrary.Cat<T, K>.operator +(CatLibrary.Cat<T, K>, int)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 180
  summary: Addition operator of this class.
  syntax:
    content:
      CSharp: public static int operator +(Cat<T, K> lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: CatLibrary.Cat`2
        name: Cat
        href: CatLibrary.Cat`2.yml
      description: '...'
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
      description: ~~~
    return:
      id: Int32
      description: Result with int type.
  id: CatLibrary.Cat`2.op_Addition(CatLibrary.Cat{`0,`1},System.Int32)
- uid: CatLibrary.Cat`2.op_Subtraction(CatLibrary.Cat{`0,`1},System.Int32)
  href: CatLibrary.Cat`2.yml
  name: operator -(Cat<T, K>, int)
  fullName: CatLibrary.Cat<T, K>.operator -(CatLibrary.Cat<T, K>, int)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 185
  summary: Similar with operaotr +, refer to that topic.
  syntax:
    content:
      CSharp: public static int operator -(Cat<T, K> lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: CatLibrary.Cat`2
        name: Cat
        href: CatLibrary.Cat`2.yml
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
  id: CatLibrary.Cat`2.op_Subtraction(CatLibrary.Cat{`0,`1},System.Int32)
- uid: CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom
  href: CatLibrary.Cat`2.yml
  name: explicit operator Tom(Cat<T, K>)
  fullName: CatLibrary.Cat<T, K>.explicit operator CatLibrary.Tom(CatLibrary.Cat<T, K>)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 193
  summary: >-
    Expilicit operator of this class.

    It means this cat can evolve to change to Tom. Tom and Jerry.
  syntax:
    content:
      CSharp: public static explicit operator Tom(Cat<T, K> src) { return null; }
    parameters:
    - id: src
      type:
        id: CatLibrary.Cat`2
        name: Cat
        href: CatLibrary.Cat`2.yml
      description: Instance of this class.
    return:
      id: Tom
      description: Advanced class type of cat.
  id: CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom
- uid: CatLibrary.Cat`2.Item(System.String)
  href: CatLibrary.Cat`2.yml
  name: this[string]
  fullName: CatLibrary.Cat<T, K>.this[string]
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 201
  summary: This is index property of Cat. You can see that the visibility is different between get and set method.
  syntax:
    content:
      CSharp: public int this[string a] { protected get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
  id: CatLibrary.Cat`2.Item(System.String)
- uid: CatLibrary.Cat`2.ownEat
  href: CatLibrary.Cat`2.yml
  name: ownEat
  fullName: CatLibrary.Cat<T, K>.ownEat
  type: Event
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 220
  summary: Eat event of this cat
  syntax:
    content:
      CSharp: ownEat
  id: CatLibrary.Cat`2.ownEat
- uid: CatLibrary.Cat`2.isHealthy
  href: CatLibrary.Cat`2.yml
  name: isHealthy
  fullName: CatLibrary.Cat<T, K>.isHealthy
  type: Field
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 228
  summary: Field with attribute.
  syntax:
    content:
      CSharp: isHealthy
  id: CatLibrary.Cat`2.isHealthy
- uid: CatLibrary.Cat`2.Name
  href: CatLibrary.Cat`2.yml
  name: Name
  fullName: CatLibrary.Cat<T, K>.Name
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-04-23 20_41_49/Out/Assets/TestClass1/CatLibrary/Class1.cs
    startLine: 252
  summary: EII property.
  syntax:
    content:
      CSharp: public string Name { get; }
    parameters:
    - id: Name
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: CatLibrary.Cat`2.Name
