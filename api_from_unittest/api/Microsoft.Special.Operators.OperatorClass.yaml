id: Microsoft.Special.Operators.OperatorClass
href: Microsoft.Special.Operators.OperatorClass.yaml
name:
  CSharp: OperatorClass
qualifiedName:
  CSharp: Microsoft.Special.Operators.OperatorClass
type: Class
source:
  remote: &o0
    branch: develop
    repo: https://capservice.visualstudio.com/DefaultCollection/CAPS/_git/DocAsCode
    description: v0.3-64-ge0510d3
  path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
  startLine: 160
syntax:
  content:
    CSharp: public class OperatorClass
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.Special.Operators.OperatorClass.op_Addition(Microsoft.Special.Operators.OperatorClass,System.Int32)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Addition
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Addition(Microsoft.Special.Operators.OperatorClass,System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 162
  syntax:
    content:
      CSharp: public static int operator +(OperatorClass lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Int32)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 163
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Int64)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Int64)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 164
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass lsr, long rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Double)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Subtraction(Microsoft.Special.Operators.OperatorClass,System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 165
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass lsr, double rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Modulus(Microsoft.Special.Operators.OperatorClass,System.Int32)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Modulus
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Modulus(Microsoft.Special.Operators.OperatorClass,System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 166
  syntax:
    content:
      CSharp: public static int operator %(OperatorClass lsr, int a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: a
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Multiply(Microsoft.Special.Operators.OperatorClass,System.Double)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Multiply
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Multiply(Microsoft.Special.Operators.OperatorClass,System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 167
  syntax:
    content:
      CSharp: public static double operator *(OperatorClass lsr, double a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: a
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Double
- id: Microsoft.Special.Operators.OperatorClass.op_Division(Microsoft.Special.Operators.OperatorClass,System.Double)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Division
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Division(Microsoft.Special.Operators.OperatorClass,System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 168
  syntax:
    content:
      CSharp: public static double operator /(OperatorClass lsr, double a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: a
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Double
- id: Microsoft.Special.Operators.OperatorClass.op_Increment(Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Increment
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Increment(Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 169
  syntax:
    content:
      CSharp: public static OperatorClass operator ++(OperatorClass lsr) { return lsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass.op_Decrement(Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Decrement
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Decrement(Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 170
  syntax:
    content:
      CSharp: public static OperatorClass operator --(OperatorClass lsr) { return lsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass.op_Equality(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Equality(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 171
  syntax:
    content:
      CSharp: public static bool operator ==(OperatorClass lsr, OperatorClass rsr) { return lsr == rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.op_Inequality(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Inequality(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 172
  syntax:
    content:
      CSharp: public static bool operator !=(OperatorClass lsr, OperatorClass rsr) { return lsr != rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.op_GreaterThan(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_GreaterThan
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_GreaterThan(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 173
  syntax:
    content:
      CSharp: public static bool operator>(OperatorClass lsr, OperatorClass rsr) { return lsr > rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.op_GreaterThanOrEqual(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_GreaterThanOrEqual
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_GreaterThanOrEqual(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 174
  syntax:
    content:
      CSharp: public static bool operator >=(OperatorClass lsr, OperatorClass rsr) { return lsr >= rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.op_LessThan(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_LessThan
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_LessThan(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 175
  syntax:
    content:
      CSharp: public static bool operator <(OperatorClass lsr, OperatorClass rsr) { return lsr < rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.op_LessThanOrEqual(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_LessThanOrEqual
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_LessThanOrEqual(Microsoft.Special.Operators.OperatorClass,Microsoft.Special.Operators.OperatorClass)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 176
  syntax:
    content:
      CSharp: public static bool operator <=(OperatorClass lsr, OperatorClass rsr) { return lsr <= rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.Item(System.String)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.Item(System.String)
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 177
  syntax:
    content:
      CSharp: public string this[string index] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.Special.Operators.OperatorClass.Equals(System.Object)
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 182
  syntax:
    content:
      CSharp: public override bool Equals(object operatorClassObj)
    parameters:
    - id: operatorClassObj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass.GetHashCode
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.GetHashCode
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 183
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass.op_Implicit(System.Byte)~Microsoft.Special.Operators.OperatorClass
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Implicit
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Implicit(System.Byte)~Microsoft.Special.Operators.OperatorClass
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 184
  syntax:
    content:
      CSharp: public static implicit operator OperatorClass(byte value) { return new OperatorClass(); }
    parameters:
    - id: value
      type:
        id: System.Byte
        name: System.Byte
        isExternal: true
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass.op_Implicit(System.Int32)~Microsoft.Special.Operators.OperatorClass
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Implicit
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Implicit(System.Int32)~Microsoft.Special.Operators.OperatorClass
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 185
  syntax:
    content:
      CSharp: public static implicit operator OperatorClass(int value) { return new OperatorClass(); }
    parameters:
    - id: value
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass.op_Explicit(Microsoft.Special.Operators.OperatorClass)~System.Int64
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Explicit
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Explicit(Microsoft.Special.Operators.OperatorClass)~System.Int64
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 186
  syntax:
    content:
      CSharp: public static explicit operator long (OperatorClass value) { return 1; }
    parameters:
    - id: value
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Int64
- id: Microsoft.Special.Operators.OperatorClass.op_Explicit(Microsoft.Special.Operators.OperatorClass)~System.Int32
  href: Microsoft.Special.Operators.OperatorClass.yaml
  name:
    CSharp: op_Explicit
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass.op_Explicit(Microsoft.Special.Operators.OperatorClass)~System.Int32
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 187
  syntax:
    content:
      CSharp: public static explicit operator int (OperatorClass value) { return 1; }
    parameters:
    - id: value
      type:
        id: Microsoft.Special.Operators.OperatorClass
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass.yaml
    return:
      id: Int32
