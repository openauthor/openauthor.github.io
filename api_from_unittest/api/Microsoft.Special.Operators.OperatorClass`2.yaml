id: Microsoft.Special.Operators.OperatorClass`2
href: Microsoft.Special.Operators.OperatorClass`2.yaml
name:
  CSharp: OperatorClass`2
qualifiedName:
  CSharp: Microsoft.Special.Operators.OperatorClass`2
type: Class
source:
  remote: &o0
    branch: develop
    repo: https://capservice.visualstudio.com/DefaultCollection/CAPS/_git/DocAsCode
    description: v0.3-64-ge0510d3
  path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
  startLine: 190
syntax:
  content:
    CSharp: public class OperatorClass<T, K>
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.Special.Operators.OperatorClass`2.op_Addition(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Addition
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Addition(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 192
  syntax:
    content:
      CSharp: public static int operator +(OperatorClass<T, K> lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 193
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass<T, K> lsr, int rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int64)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int64)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 194
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass<T, K> lsr, long rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: System.Int64
        name: System.Int64
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Subtraction(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 195
  syntax:
    content:
      CSharp: public static int operator -(OperatorClass<T, K> lsr, double rsr) { return 1; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass`2.op_Modulus(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Modulus
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Modulus(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 196
  syntax:
    content:
      CSharp: public static int operator %(OperatorClass<T, K> lsr, int a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: a
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return:
      id: Int32
- id: Microsoft.Special.Operators.OperatorClass`2.op_Multiply(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Multiply
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Multiply(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 197
  syntax:
    content:
      CSharp: public static double operator *(OperatorClass<T, K> lsr, double a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: a
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Double
- id: Microsoft.Special.Operators.OperatorClass`2.op_Division(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Division
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Division(Microsoft.Special.Operators.OperatorClass{`0,`1},System.Double)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 198
  syntax:
    content:
      CSharp: public static double operator /(OperatorClass<T, K> lsr, double a) { return a; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: a
      type:
        id: System.Double
        name: System.Double
        isExternal: true
    return:
      id: Double
- id: Microsoft.Special.Operators.OperatorClass`2.op_Increment(Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Increment
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Increment(Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 199
  syntax:
    content:
      CSharp: public static OperatorClass<T, K> operator ++(OperatorClass<T, K> lsr) { return lsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass`2.op_Decrement(Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Decrement
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Decrement(Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 200
  syntax:
    content:
      CSharp: public static OperatorClass<T, K> operator --(OperatorClass<T, K> lsr) { return lsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: OperatorClass
- id: Microsoft.Special.Operators.OperatorClass`2.op_Equality(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Equality
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Equality(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 201
  syntax:
    content:
      CSharp: public static bool operator ==(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr == rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.op_Inequality(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_Inequality
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_Inequality(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 202
  syntax:
    content:
      CSharp: public static bool operator !=(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr != rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.op_GreaterThan(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_GreaterThan
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_GreaterThan(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 203
  syntax:
    content:
      CSharp: public static bool operator>(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr > rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.op_GreaterThanOrEqual(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_GreaterThanOrEqual
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_GreaterThanOrEqual(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 204
  syntax:
    content:
      CSharp: public static bool operator >=(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr >= rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.op_LessThan(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_LessThan
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_LessThan(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 205
  syntax:
    content:
      CSharp: public static bool operator <(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr < rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.op_LessThanOrEqual(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: op_LessThanOrEqual
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.op_LessThanOrEqual(Microsoft.Special.Operators.OperatorClass{`0,`1},Microsoft.Special.Operators.OperatorClass{`0,`1})
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 206
  syntax:
    content:
      CSharp: public static bool operator <=(OperatorClass<T, K> lsr, OperatorClass<T, K> rsr) { return lsr <= rsr; }
    parameters:
    - id: lsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    - id: rsr
      type:
        id: Microsoft.Special.Operators.OperatorClass`2
        name: OperatorClass
        href: Microsoft.Special.Operators.OperatorClass`2.yaml
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.Item(System.String)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.Item(System.String)
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 207
  syntax:
    content:
      CSharp: public string this[string index] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: Microsoft.Special.Operators.OperatorClass`2.Equals(System.Object)
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: Equals
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 212
  syntax:
    content:
      CSharp: public override bool Equals(object OperatorClassObj)
    parameters:
    - id: OperatorClassObj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
- id: Microsoft.Special.Operators.OperatorClass`2.GetHashCode
  href: Microsoft.Special.Operators.OperatorClass`2.yaml
  name:
    CSharp: GetHashCode
  qualifiedName:
    CSharp: Microsoft.Special.Operators.OperatorClass`2.GetHashCode
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 213
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
