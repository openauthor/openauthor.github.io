id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer
href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
name:
  CSharp: UnsafePointer
qualifiedName:
  CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer
type: Class
source:
  remote: &o0
    branch: develop
    repo: https://capservice.visualstudio.com/DefaultCollection/CAPS/_git/DocAsCode
    description: v0.3-64-ge0510d3
  path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
  startLine: 328
syntax:
  content:
    CSharp: public class UnsafePointer
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.#ctor(System.Int32*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: UnsafePointer(System.Int32*)
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.UnsafePointer(System.Int32*)
  type: Constructor
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 330
  syntax:
    content:
      CSharp: public unsafe UnsafePointer(int *a)
    parameters:
    - id: a
      type:
        isExternal: true
    return:
      id: Void
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.IntPointerProperty
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: IntPointerProperty
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.IntPointerProperty
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 332
  syntax:
    content:
      CSharp: public unsafe int *IntPointerProperty { get; set; }
    parameters:
    - id: IntPointerProperty
      type:
        isExternal: true
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.Item(System.Int64*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: Item
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.Item(System.Int64*)
  type: Property
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 333
  syntax:
    content:
      CSharp: public unsafe int this[long *a] { get; }
    parameters:
    - id: this[]
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.IntPointerMethod(System.Int32*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: IntPointerMethod
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.IntPointerMethod(System.Int32*)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 335
  syntax:
    content:
      CSharp: public unsafe void IntPointerMethod(int *a)
    parameters:
    - id: a
      type:
        isExternal: true
    return:
      id: Void
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.VoidPointerMethod(System.Int32)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: VoidPointerMethod
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.VoidPointerMethod(System.Int32)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 336
  syntax:
    content:
      CSharp: public unsafe void *VoidPointerMethod(int a)
    parameters:
    - id: a
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    return: {}
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.LongPointerMethod(System.Int64*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: LongPointerMethod
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.LongPointerMethod(System.Int64*)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 337
  syntax:
    content:
      CSharp: public unsafe long *LongPointerMethod(long *a)
    parameters:
    - id: a
      type:
        isExternal: true
    return: {}
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.DoubleFiled
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: DoubleFiled
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.DoubleFiled
  type: Field
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 339
  syntax:
    content:
      CSharp: DoubleFiled
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Addition(TestLibraryC.Sprint66.BasicMethod.UnsafePointer,System.Int32*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: op_Addition
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Addition(TestLibraryC.Sprint66.BasicMethod.UnsafePointer,System.Int32*)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 344
  syntax:
    content:
      CSharp: public static unsafe string operator +(UnsafePointer up, int *r) { return "1"; }
    parameters:
    - id: up
      type:
        id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer
        name: UnsafePointer
        href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
    - id: r
      type:
        isExternal: true
    return:
      id: String
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Subtraction(TestLibraryC.Sprint66.BasicMethod.UnsafePointer,System.Int32*)
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: op_Subtraction
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Subtraction(TestLibraryC.Sprint66.BasicMethod.UnsafePointer,System.Int32*)
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 345
  syntax:
    content:
      CSharp: public static unsafe string operator -(UnsafePointer up, int *r) { return "1"; }
    parameters:
    - id: up
      type:
        id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer
        name: UnsafePointer
        href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
    - id: r
      type:
        isExternal: true
    return:
      id: String
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Implicit(System.Int32*)~TestLibraryC.Sprint66.BasicMethod.UnsafePointer
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: op_Implicit
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Implicit(System.Int32*)~TestLibraryC.Sprint66.BasicMethod.UnsafePointer
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 346
  syntax:
    content:
      CSharp: public static unsafe implicit operator UnsafePointer(int *target) { return null; }
    parameters:
    - id: target
      type:
        isExternal: true
    return:
      id: UnsafePointer
- id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Explicit(TestLibraryC.Sprint66.BasicMethod.UnsafePointer)~System.String
  href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
  name:
    CSharp: op_Explicit
  qualifiedName:
    CSharp: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.op_Explicit(TestLibraryC.Sprint66.BasicMethod.UnsafePointer)~System.String
  type: Method
  source:
    remote: *o0
    path: TestResults/Deploy_lianwei 2015-03-30 13_59_30/Out/Assets/TestClass1/TestClass2/Class1.cs
    startLine: 347
  syntax:
    content:
      CSharp: public static unsafe explicit operator string (UnsafePointer source) { return null; }
    parameters:
    - id: source
      type:
        id: TestLibraryC.Sprint66.BasicMethod.UnsafePointer
        name: UnsafePointer
        href: TestLibraryC.Sprint66.BasicMethod.UnsafePointer.yaml
    return:
      id: String
