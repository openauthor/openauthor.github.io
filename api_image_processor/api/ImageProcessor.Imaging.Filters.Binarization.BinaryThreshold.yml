items:
- uid: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold
  href: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.yml
  name: BinaryThreshold
  fullName: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Imaging/Filters/Binarization/BinaryThreshold.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Imaging/Filters/Binarization/BinaryThreshold.cs
    startLine: 18
  summary: Performs binary threshold filtering against a given greyscale image.
  syntax:
    content:
      CSharp: public class BinaryThreshold
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold
  children:
  - ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.#ctor(System.Byte)
  - ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.Threshold
  - ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.ProcessFilter(System.Drawing.Bitmap)
- uid: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.#ctor(System.Byte)
  href: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.yml
  name: BinaryThreshold(byte)
  fullName: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.BinaryThreshold(byte)
  type: Constructor
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Filters/Binarization/BinaryThreshold.cs
    startLine: 31
  summary: Initializes a new instance of the [ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold](api/ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.yml) class.
  syntax:
    content:
      CSharp: public BinaryThreshold(byte threshold = 10)
    parameters:
    - id: threshold
      type:
        id: System.Byte
        name: byte
        isExternal: true
      description: The threshold.
  id: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.#ctor(System.Byte)
- uid: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.Threshold
  href: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.yml
  name: Threshold
  fullName: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.Threshold
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Filters/Binarization/BinaryThreshold.cs
    startLine: 39
  summary: Gets or sets the threshold.
  syntax:
    content:
      CSharp: public byte Threshold { get; set; }
    parameters:
    - id: Threshold
      type:
        id: System.Byte
        name: byte
        isExternal: true
  id: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.Threshold
- uid: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.ProcessFilter(System.Drawing.Bitmap)
  href: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.yml
  name: ProcessFilter(Bitmap)
  fullName: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.ProcessFilter(System.Drawing.Bitmap)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Filters/Binarization/BinaryThreshold.cs
    startLine: 61
  summary: Processes the given bitmap to apply the threshold.
  syntax:
    content:
      CSharp: public Bitmap ProcessFilter(Bitmap source)
    parameters:
    - id: source
      type:
        id: System.Drawing.Bitmap
        name: Bitmap
        isExternal: true
      description: The image to process.
    return:
      id: Bitmap
      type:
        id: System.Drawing.Bitmap
        name: Bitmap
        isExternal: true
      description: A processed bitmap.
  id: ImageProcessor.Imaging.Filters.Binarization.BinaryThreshold.ProcessFilter(System.Drawing.Bitmap)
