items:
- uid: ImageProcessor.Imaging.Formats.FormatUtilities
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: FormatUtilities
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 27
  summary: Utility methods for working with supported image formats.
  syntax:
    content:
      CSharp: public class FormatUtilities
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Imaging.Formats.FormatUtilities
  children:
  - ImageProcessor.Imaging.Formats.FormatUtilities.GetFormat(System.IO.Stream)
  - ImageProcessor.Imaging.Formats.FormatUtilities.IsIndexed(System.Drawing.Image)
  - ImageProcessor.Imaging.Formats.FormatUtilities.GetColorCount(System.Drawing.Image)
  - ImageProcessor.Imaging.Formats.FormatUtilities.IsAnimated(System.Drawing.Image)
  - ImageProcessor.Imaging.Formats.FormatUtilities.GetEncodingParameters(System.Int32)
  - ImageProcessor.Imaging.Formats.FormatUtilities.CreatePropertyItem
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.GetFormat(System.IO.Stream)
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: GetFormat(Stream)
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.GetFormat(System.IO.Stream)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 39
  summary: Gets the correct [ImageProcessor.Imaging.Formats.ISupportedImageFormat](api/ImageProcessor.Imaging.Formats.ISupportedImageFormat.yml) from the given stream.
  syntax:
    content:
      CSharp: public static ISupportedImageFormat GetFormat(Stream stream)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
      description: The [System.IO.Stream](#) to read from.
    return:
      id: ISupportedImageFormat
      type:
        id: ImageProcessor.Imaging.Formats.ISupportedImageFormat
        name: ISupportedImageFormat
        href: ImageProcessor.Imaging.Formats.ISupportedImageFormat.yml
      description: The [ImageProcessor.Imaging.Formats.ISupportedImageFormat](api/ImageProcessor.Imaging.Formats.ISupportedImageFormat.yml).
  id: ImageProcessor.Imaging.Formats.FormatUtilities.GetFormat(System.IO.Stream)
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.IsIndexed(System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: IsIndexed(Image)
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.IsIndexed(System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 80
  summary: Returns a value indicating whether the given image is indexed.
  syntax:
    content:
      CSharp: public static bool IsIndexed(Image image)
    parameters:
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#) to test.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: The true if the image is indexed; otherwise, false.
  id: ImageProcessor.Imaging.Formats.FormatUtilities.IsIndexed(System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.GetColorCount(System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: GetColorCount(Image)
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.GetColorCount(System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 96
  summary: Returns the color count from the palette of the given image.
  syntax:
    content:
      CSharp: public static int GetColorCount(Image image)
    parameters:
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#) to get the colors from.
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The [System.Int32](#) representing the color count.
  id: ImageProcessor.Imaging.Formats.FormatUtilities.GetColorCount(System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.IsAnimated(System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: IsAnimated(Image)
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.IsAnimated(System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 132
  summary: Returns a value indicating whether the given image is indexed.
  syntax:
    content:
      CSharp: public static bool IsAnimated(Image image)
    parameters:
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#) to test.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: The true if the image is animated; otherwise, false.
  id: ImageProcessor.Imaging.Formats.FormatUtilities.IsAnimated(System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.GetEncodingParameters(System.Int32)
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: GetEncodingParameters(int)
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.GetEncodingParameters(int)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 142
  summary: Returns an instance of EncodingParameters for jpeg compression.
  syntax:
    content:
      CSharp: public static EncoderParameters GetEncodingParameters(int quality)
    parameters:
    - id: quality
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The quality to return the image at.
    return:
      id: EncoderParameters
      type:
        id: System.Drawing.Imaging.EncoderParameters
        name: EncoderParameters
        isExternal: true
      description: The encodingParameters for jpeg compression.
  id: ImageProcessor.Imaging.Formats.FormatUtilities.GetEncodingParameters(System.Int32)
- uid: ImageProcessor.Imaging.Formats.FormatUtilities.CreatePropertyItem
  href: ImageProcessor.Imaging.Formats.FormatUtilities.yml
  name: CreatePropertyItem()
  fullName: ImageProcessor.Imaging.Formats.FormatUtilities.CreatePropertyItem()
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/FormatUtilities.cs
    startLine: 170
  summary: Uses reflection to allow the creation of an instance of [System.Drawing.Imaging.PropertyItem](#).
  syntax:
    content:
      CSharp: public static PropertyItem CreatePropertyItem()
    parameters: []
    return:
      id: PropertyItem
      type:
        id: System.Drawing.Imaging.PropertyItem
        name: PropertyItem
        isExternal: true
      description: The [System.Drawing.Imaging.PropertyItem](#).
  id: ImageProcessor.Imaging.Formats.FormatUtilities.CreatePropertyItem
