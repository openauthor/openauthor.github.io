items:
- uid: ImageProcessor.Imaging.Formats.GifDecoder
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: GifDecoder
  fullName: ImageProcessor.Imaging.Formats.GifDecoder
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 22
  summary: Decodes gifs to provides information.
  syntax:
    content:
      CSharp: public class GifDecoder
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder
  children:
  - ImageProcessor.Imaging.Formats.GifDecoder.#ctor(System.Drawing.Image)
  - ImageProcessor.Imaging.Formats.GifDecoder.Width
  - ImageProcessor.Imaging.Formats.GifDecoder.Height
  - ImageProcessor.Imaging.Formats.GifDecoder.IsAnimated
  - ImageProcessor.Imaging.Formats.GifDecoder.IsLooped
  - ImageProcessor.Imaging.Formats.GifDecoder.LoopCount
  - ImageProcessor.Imaging.Formats.GifDecoder.GifFrames
  - ImageProcessor.Imaging.Formats.GifDecoder.AnimationLength
- uid: ImageProcessor.Imaging.Formats.GifDecoder.#ctor(System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: GifDecoder(Image)
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.GifDecoder(System.Drawing.Image)
  type: Constructor
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 30
  summary: Initializes a new instance of the [ImageProcessor.Imaging.Formats.GifDecoder](api/ImageProcessor.Imaging.Formats.GifDecoder.yml) class.
  syntax:
    content:
      CSharp: public GifDecoder(Image image)
    parameters:
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#) to decode.
  id: ImageProcessor.Imaging.Formats.GifDecoder.#ctor(System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.GifDecoder.Width
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: Width
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.Width
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 84
  summary: Gets or sets the image width.
  syntax:
    content:
      CSharp: public int Width { get; set; }
    parameters:
    - id: Width
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.Width
- uid: ImageProcessor.Imaging.Formats.GifDecoder.Height
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: Height
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.Height
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 89
  summary: Gets or sets the image height.
  syntax:
    content:
      CSharp: public int Height { get; set; }
    parameters:
    - id: Height
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.Height
- uid: ImageProcessor.Imaging.Formats.GifDecoder.IsAnimated
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: IsAnimated
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.IsAnimated
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 94
  summary: Gets or sets a value indicating whether the image is animated.
  syntax:
    content:
      CSharp: public bool IsAnimated { get; set; }
    parameters:
    - id: IsAnimated
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.IsAnimated
- uid: ImageProcessor.Imaging.Formats.GifDecoder.IsLooped
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: IsLooped
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.IsLooped
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 99
  summary: Gets or sets a value indicating whether the image is looped.
  syntax:
    content:
      CSharp: public bool IsLooped { get; set; }
    parameters:
    - id: IsLooped
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.IsLooped
- uid: ImageProcessor.Imaging.Formats.GifDecoder.LoopCount
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: LoopCount
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.LoopCount
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 104
  summary: Gets or sets the loop count.
  syntax:
    content:
      CSharp: public int LoopCount { get; set; }
    parameters:
    - id: LoopCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.LoopCount
- uid: ImageProcessor.Imaging.Formats.GifDecoder.GifFrames
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: GifFrames
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.GifFrames
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 109
  summary: Gets or sets the gif frames.
  syntax:
    content:
      CSharp: public ICollection<GifFrame> GifFrames { get; set; }
    parameters:
    - id: GifFrames
      type:
        id: System.Collections.Generic.ICollection{ImageProcessor.Imaging.Formats.GifFrame}
        name: ICollection<GifFrame>
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.GifFrames
- uid: ImageProcessor.Imaging.Formats.GifDecoder.AnimationLength
  href: ImageProcessor.Imaging.Formats.GifDecoder.yml
  name: AnimationLength
  fullName: ImageProcessor.Imaging.Formats.GifDecoder.AnimationLength
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifDecoder.cs
    startLine: 114
  summary: Gets or sets the animation length in milliseconds.
  syntax:
    content:
      CSharp: public double AnimationLength { get; set; }
    parameters:
    - id: AnimationLength
      type:
        id: System.Double
        name: double
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifDecoder.AnimationLength
