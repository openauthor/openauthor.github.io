items:
- uid: ImageProcessor.Imaging.Formats.GifFormat
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: GifFormat
  fullName: ImageProcessor.Imaging.Formats.GifFormat
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 24
  summary: Provides the necessary information to support gif images.
  syntax:
    content:
      CSharp: 'public class GifFormat : FormatBase, ISupportedImageFormat, IQuantizableImageFormat'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: ImageProcessor.Imaging.Formats.FormatBase
    name: FormatBase
    href: ImageProcessor.Imaging.Formats.FormatBase.yml
  id: ImageProcessor.Imaging.Formats.GifFormat
  children:
  - ImageProcessor.Imaging.Formats.GifFormat.FileHeaders
  - ImageProcessor.Imaging.Formats.GifFormat.FileExtensions
  - ImageProcessor.Imaging.Formats.GifFormat.MimeType
  - ImageProcessor.Imaging.Formats.GifFormat.ImageFormat
  - ImageProcessor.Imaging.Formats.GifFormat.Quantizer
  - ImageProcessor.Imaging.Formats.GifFormat.ColorCount
  - ImageProcessor.Imaging.Formats.GifFormat.ApplyProcessor(System.Func{ImageProcessor.ImageFactory,System.Drawing.Image},ImageProcessor.ImageFactory)
  - ImageProcessor.Imaging.Formats.GifFormat.Save(System.IO.Stream,System.Drawing.Image)
  - ImageProcessor.Imaging.Formats.GifFormat.Save(System.String,System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.GifFormat.FileHeaders
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: FileHeaders
  fullName: ImageProcessor.Imaging.Formats.GifFormat.FileHeaders
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 39
  summary: Gets the file headers.
  syntax:
    content:
      CSharp: public override byte[][] FileHeaders { get; }
    parameters:
    - id: FileHeaders
      type:
        id: System.Array
        name: byte[][]
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifFormat.FileHeaders
- uid: ImageProcessor.Imaging.Formats.GifFormat.FileExtensions
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: FileExtensions
  fullName: ImageProcessor.Imaging.Formats.GifFormat.FileExtensions
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 50
  summary: Gets the list of file extensions.
  syntax:
    content:
      CSharp: public override string[] FileExtensions { get; }
    parameters:
    - id: FileExtensions
      type:
        id: System.Array
        name: string[]
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifFormat.FileExtensions
- uid: ImageProcessor.Imaging.Formats.GifFormat.MimeType
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: MimeType
  fullName: ImageProcessor.Imaging.Formats.GifFormat.MimeType
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 61
  summary: Gets the standard identifier used on the Internet to indicate the type of data that a file contains.
  syntax:
    content:
      CSharp: public override string MimeType { get; }
    parameters:
    - id: MimeType
      type:
        id: System.String
        name: string
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifFormat.MimeType
- uid: ImageProcessor.Imaging.Formats.GifFormat.ImageFormat
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: ImageFormat
  fullName: ImageProcessor.Imaging.Formats.GifFormat.ImageFormat
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 72
  summary: Gets the [ImageProcessor.Imaging.Formats.GifFormat.ImageFormat](api/ImageProcessor.Imaging.Formats.GifFormat.yml).
  syntax:
    content:
      CSharp: public override ImageFormat ImageFormat { get; }
    parameters:
    - id: ImageFormat
      type:
        id: System.Drawing.Imaging.ImageFormat
        name: ImageFormat
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifFormat.ImageFormat
- uid: ImageProcessor.Imaging.Formats.GifFormat.Quantizer
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: Quantizer
  fullName: ImageProcessor.Imaging.Formats.GifFormat.Quantizer
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 83
  summary: Gets or sets the quantizer for reducing the image palette.
  syntax:
    content:
      CSharp: public IQuantizer Quantizer { get; set; }
    parameters:
    - id: Quantizer
      type:
        id: ImageProcessor.Imaging.Quantizers.IQuantizer
        name: IQuantizer
        href: ImageProcessor.Imaging.Quantizers.IQuantizer.yml
  id: ImageProcessor.Imaging.Formats.GifFormat.Quantizer
- uid: ImageProcessor.Imaging.Formats.GifFormat.ColorCount
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: ColorCount
  fullName: ImageProcessor.Imaging.Formats.GifFormat.ColorCount
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 99
  summary: Gets or sets the color count.
  syntax:
    content:
      CSharp: public int ColorCount { get; set; }
    parameters:
    - id: ColorCount
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: ImageProcessor.Imaging.Formats.GifFormat.ColorCount
- uid: ImageProcessor.Imaging.Formats.GifFormat.ApplyProcessor(System.Func{ImageProcessor.ImageFactory,System.Drawing.Image},ImageProcessor.ImageFactory)
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: ApplyProcessor(Func<ImageFactory, Image>, ImageFactory)
  fullName: ImageProcessor.Imaging.Formats.GifFormat.ApplyProcessor(System.Func<ImageProcessor.ImageFactory, System.Drawing.Image>, ImageProcessor.ImageFactory)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 119
  summary: Applies the given processor the current image.
  syntax:
    content:
      CSharp: public override void ApplyProcessor(Func<ImageFactory, Image> processor, ImageFactory factory)
    parameters:
    - id: processor
      type:
        id: System.Func{ImageProcessor.ImageFactory,System.Drawing.Image}
        name: Func<ImageFactory, Image>
        isExternal: true
      description: The processor delegate.
    - id: factory
      type:
        id: ImageProcessor.ImageFactory
        name: ImageFactory
        href: ImageProcessor.ImageFactory.yml
      description: The [ImageProcessor.ImageFactory](api/ImageProcessor.ImageFactory.yml).
  id: ImageProcessor.Imaging.Formats.GifFormat.ApplyProcessor(System.Func{ImageProcessor.ImageFactory,System.Drawing.Image},ImageProcessor.ImageFactory)
- uid: ImageProcessor.Imaging.Formats.GifFormat.Save(System.IO.Stream,System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: Save(Stream, Image)
  fullName: ImageProcessor.Imaging.Formats.GifFormat.Save(System.IO.Stream, System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 151
  summary: Saves the current image to the specified output stream.
  syntax:
    content:
      CSharp: public override Image Save(Stream stream, Image image)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
      description: The [System.IO.Stream](#) to save the image information to.
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#) to save.
    return:
      id: Image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#).
  id: ImageProcessor.Imaging.Formats.GifFormat.Save(System.IO.Stream,System.Drawing.Image)
- uid: ImageProcessor.Imaging.Formats.GifFormat.Save(System.String,System.Drawing.Image)
  href: ImageProcessor.Imaging.Formats.GifFormat.yml
  name: Save(string, Image)
  fullName: ImageProcessor.Imaging.Formats.GifFormat.Save(string, System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Formats/GifFormat.cs
    startLine: 170
  summary: Saves the current image to the specified file path.
  syntax:
    content:
      CSharp: public override Image Save(string path, Image image)
    parameters:
    - id: path
      type:
        id: System.String
        name: string
        isExternal: true
      description: The path to save the image to.
    - id: image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: >-
        The

        [System.Drawing.Image](#) to save.
    return:
      id: Image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The [System.Drawing.Image](#).
  id: ImageProcessor.Imaging.Formats.GifFormat.Save(System.String,System.Drawing.Image)
