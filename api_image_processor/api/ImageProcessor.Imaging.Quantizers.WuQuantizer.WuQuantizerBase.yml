items:
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: WuQuantizerBase
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 28
  summary: >-
    Encapsulates methods to calculate the color palette of an image using

    a Wu color quantizer .

    Adapted from
  syntax:
    content:
      CSharp: 'public abstract class WuQuantizerBase : IWuQuantizer, IQuantizer'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase
  children:
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMax
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMin
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Alpha
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Red
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Green
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Blue
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image)
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32)
  - ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32,ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram,System.Int32)
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMax
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: AlphaMax
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMax
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 33
  summary: The maximum value for an alpha color component.
  syntax:
    content:
      CSharp: protected const byte AlphaMax;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMax
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMin
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: AlphaMin
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMin
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 38
  summary: The minimum value for an alpha color component.
  syntax:
    content:
      CSharp: protected const byte AlphaMin;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.AlphaMin
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Alpha
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Alpha
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Alpha
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 43
  summary: The position of the alpha component within a byte array.
  syntax:
    content:
      CSharp: protected const int Alpha;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Alpha
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Red
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Red
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Red
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 48
  summary: The position of the red component within a byte array.
  syntax:
    content:
      CSharp: protected const int Red;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Red
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Green
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Green
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Green
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 53
  summary: The position of the green component within a byte array.
  syntax:
    content:
      CSharp: protected const int Green;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Green
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Blue
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Blue
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Blue
  type: Field
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 58
  summary: The position of the blue component within a byte array.
  syntax:
    content:
      CSharp: protected const int Blue;
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Blue
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image)
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Quantize(Image)
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 79
  summary: Quantize an image and return the resulting output bitmap
  syntax:
    content:
      CSharp: public Bitmap Quantize(Image source)
    parameters:
    - id: source
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The 32 bit per pixel image to quantize.
    return:
      id: Bitmap
      type:
        id: System.Drawing.Bitmap
        name: Bitmap
        isExternal: true
      description: A quantized version of the image.
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image)
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32)
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Quantize(Image, int, int)
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image, int, int)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 99
  summary: Quantize an image and return the resulting output bitmap
  syntax:
    content:
      CSharp: public Bitmap Quantize(Image source, int alphaThreshold, int alphaFader)
    parameters:
    - id: source
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The 32 bit per pixel image to quantize.
    - id: alphaThreshold
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: All colors with an alpha value less than this will be considered fully transparent.
    - id: alphaFader
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: Alpha values will be normalized to the nearest multiple of this value.
    return:
      id: Bitmap
      type:
        id: System.Drawing.Bitmap
        name: Bitmap
        isExternal: true
      description: A quantized version of the image.
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32)
- uid: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32,ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram,System.Int32)
  href: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.yml
  name: Quantize(Image, int, int, Histogram, int)
  fullName: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image, int, int, ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram, int)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Imaging/Quantizers/WuQuantizer/WuQuantizerBase.cs
    startLine: 125
  summary: Quantize an image and return the resulting output bitmap
  syntax:
    content:
      CSharp: public Bitmap Quantize(Image source, int alphaThreshold, int alphaFader, Histogram histogram, int maxColors)
    parameters:
    - id: source
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The 32 bit per pixel image to quantize.
    - id: alphaThreshold
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: All colors with an alpha value less than this will be considered fully transparent.
    - id: alphaFader
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: Alpha values will be normalized to the nearest multiple of this value.
    - id: histogram
      type:
        id: ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram
        name: Histogram
        href: ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram.yml
      description: The [ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram](api/ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram.yml) representing the distribution of color data.
    - id: maxColors
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The maximum number of colors apply to the image.
    return:
      id: Bitmap
      type:
        id: System.Drawing.Bitmap
        name: Bitmap
        isExternal: true
      description: A quantized version of the image.
  id: ImageProcessor.Imaging.Quantizers.WuQuantizer.WuQuantizerBase.Quantize(System.Drawing.Image,System.Int32,System.Int32,ImageProcessor.Imaging.Quantizers.WuQuantizer.Histogram,System.Int32)
