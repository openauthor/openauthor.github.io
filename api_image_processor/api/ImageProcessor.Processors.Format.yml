items:
- uid: ImageProcessor.Processors.Format
  href: ImageProcessor.Processors.Format.yml
  name: Format
  fullName: ImageProcessor.Processors.Format
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor/Processors/Format.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor/Processors/Format.cs
    startLine: 22
  summary: Sets the output of the image to a specific format.
  syntax:
    content:
      CSharp: 'public class Format : IGraphicsProcessor'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Processors.Format
  children:
  - ImageProcessor.Processors.Format.#ctor
  - ImageProcessor.Processors.Format.DynamicParameter
  - ImageProcessor.Processors.Format.Settings
  - ImageProcessor.Processors.Format.ProcessImage(ImageProcessor.ImageFactory)
- uid: ImageProcessor.Processors.Format.#ctor
  href: ImageProcessor.Processors.Format.yml
  name: Format()
  fullName: ImageProcessor.Processors.Format.Format()
  type: Constructor
  source:
    remote: *o0
    path: src/ImageProcessor/Processors/Format.cs
    startLine: 27
  summary: Initializes a new instance of the [ImageProcessor.Processors.Format](api/ImageProcessor.Processors.Format.yml) class.
  syntax:
    content:
      CSharp: public Format()
    parameters: []
  id: ImageProcessor.Processors.Format.#ctor
- uid: ImageProcessor.Processors.Format.DynamicParameter
  href: ImageProcessor.Processors.Format.yml
  name: DynamicParameter
  fullName: ImageProcessor.Processors.Format.DynamicParameter
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Processors/Format.cs
    startLine: 35
  summary: Gets or sets DynamicParameter.
  syntax:
    content:
      CSharp: public dynamic DynamicParameter { get; set; }
    parameters:
    - id: DynamicParameter
      type:
        name: dynamic
        isExternal: true
  id: ImageProcessor.Processors.Format.DynamicParameter
- uid: ImageProcessor.Processors.Format.Settings
  href: ImageProcessor.Processors.Format.yml
  name: Settings
  fullName: ImageProcessor.Processors.Format.Settings
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor/Processors/Format.cs
    startLine: 44
  summary: Gets or sets any additional settings required by the processor.
  syntax:
    content:
      CSharp: public Dictionary<string, string> Settings { get; set; }
    parameters:
    - id: Settings
      type:
        id: System.Collections.Generic.Dictionary{System.String,System.String}
        name: Dictionary<string, string>
        isExternal: true
  id: ImageProcessor.Processors.Format.Settings
- uid: ImageProcessor.Processors.Format.ProcessImage(ImageProcessor.ImageFactory)
  href: ImageProcessor.Processors.Format.yml
  name: ProcessImage(ImageFactory)
  fullName: ImageProcessor.Processors.Format.ProcessImage(ImageProcessor.ImageFactory)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor/Processors/Format.cs
    startLine: 60
  summary: Processes the image.
  syntax:
    content:
      CSharp: public Image ProcessImage(ImageFactory factory)
    parameters:
    - id: factory
      type:
        id: ImageProcessor.ImageFactory
        name: ImageFactory
        href: ImageProcessor.ImageFactory.yml
      description: >-
        The current instance of the [ImageProcessor.ImageFactory](api/ImageProcessor.ImageFactory.yml) class containing

        the image to process.
    return:
      id: Image
      type:
        id: System.Drawing.Image
        name: Image
        isExternal: true
      description: The processed image from the current instance of the [ImageProcessor.ImageFactory](api/ImageProcessor.ImageFactory.yml) class.
  id: ImageProcessor.Processors.Format.ProcessImage(ImageProcessor.ImageFactory)
