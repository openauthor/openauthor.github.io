items:
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: GenericListTypeConverter<T>
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 24
  summary: Converts the value of an string to and from a List{T}.
  syntax:
    content:
      CSharp: 'public class GenericListTypeConverter<T> : TypeConverter'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ComponentModel.TypeConverter
    name: TypeConverter
    isExternal: true
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1
  children:
  - ImageProcessor.Web.Helpers.GenericListTypeConverter`1.#ctor
  - ImageProcessor.Web.Helpers.GenericListTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - ImageProcessor.Web.Helpers.GenericListTypeConverter`1.GetStringArray(System.String,System.Globalization.CultureInfo)
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.#ctor
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: GenericListTypeConverter()
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>.GenericListTypeConverter()
  type: Constructor
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 37
  summary: Initializes a new instance of the [ImageProcessor.Web.Helpers.GenericListTypeConverter`1](api/ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml) class.
  syntax:
    content:
      CSharp: public GenericListTypeConverter()
    parameters: []
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.#ctor
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 60
  summary: >-
    Returns whether this converter can convert an object of the given type to the type of this converter,

    using the specified context.
  syntax:
    content:
      CSharp: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        isExternal: true
      description: >-
        An [System.ComponentModel.ITypeDescriptorContext](#) that provides a

        format context.
    - id: sourceType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: A [System.Type](#) that represents the type you want to convert from.
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: true if this converter can perform the conversion; otherwise, false.
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, object)
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 85
  summary: >-
    Converts the given object to the type of this converter, using the specified context and culture

    information.
  syntax:
    content:
      CSharp: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        isExternal: true
      description: An [System.ComponentModel.ITypeDescriptorContext](#) that provides a format context.
    - id: culture
      type:
        id: System.Globalization.CultureInfo
        name: CultureInfo
        isExternal: true
      description: The [System.Globalization.CultureInfo](#) to use as the current culture.
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The [System.Object](#) to convert.
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
      description: An [System.Object](#) that represents the converted value.
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type)
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 133
  summary: >-
    Converts the given value object to the specified type, using the specified context and culture

    information.
  syntax:
    content:
      CSharp: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
    parameters:
    - id: context
      type:
        id: System.ComponentModel.ITypeDescriptorContext
        name: ITypeDescriptorContext
        isExternal: true
      description: An [System.ComponentModel.ITypeDescriptorContext](#) that provides a format context.
    - id: culture
      type:
        id: System.Globalization.CultureInfo
        name: CultureInfo
        isExternal: true
      description: A [System.Globalization.CultureInfo](#). If null is passed, the current culture is assumed.
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
      description: The [System.Object](#) to convert.
    - id: destinationType
      type:
        id: System.Type
        name: Type
        isExternal: true
      description: The [System.Type](#) to convert the  parameter to.
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
      description: An [System.Object](#) that represents the converted value.
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
- uid: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.GetStringArray(System.String,System.Globalization.CultureInfo)
  href: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.yml
  name: GetStringArray(string, CultureInfo)
  fullName: ImageProcessor.Web.Helpers.GenericListTypeConverter<T>.GetStringArray(string, System.Globalization.CultureInfo)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Helpers/QuerystringParser/GenericListTypeConverter.cs
    startLine: 161
  summary: Splits a string by comma to return an array of string values.
  syntax:
    content:
      CSharp: protected string[] GetStringArray(string input, CultureInfo culture)
    parameters:
    - id: input
      type:
        id: System.String
        name: string
        isExternal: true
      description: The input string to split.
    - id: culture
      type:
        id: System.Globalization.CultureInfo
        name: CultureInfo
        isExternal: true
      description: A [System.Globalization.CultureInfo](#). The current culture to split string by.
    return:
      type:
        id: System.Array
        name: string[]
        isExternal: true
      description: The [System.String](#) array from the comma separated values.
  id: ImageProcessor.Web.Helpers.GenericListTypeConverter`1.GetStringArray(System.String,System.Globalization.CultureInfo)
