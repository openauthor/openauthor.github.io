items:
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: AzureBlobCache
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache
  type: Class
  source:
    remote: &o0
      path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 35
  summary: >-
    Provides an [ImageProcessor.Web.Caching.IImageCache](api/ImageProcessor.Web.Caching.IImageCache.yml) implementation that uses Azure blob storage.

    The cache is self healing and cleaning.
  syntax:
    content:
      CSharp: 'public class AzureBlobCache : ImageCacheBase, IImageCache'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: ImageProcessor.Web.Caching.ImageCacheBase
    name: ImageCacheBase
    href: ImageProcessor.Web.Caching.ImageCacheBase.yml
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache
  children:
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.#ctor(System.String,System.String,System.String)
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.IsNewOrUpdatedAsync
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.AddImageToCacheAsync(System.IO.Stream,System.String)
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.TrimCacheAsync
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.CreateCachedFileNameAsync
  - ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.RewritePath(System.Web.HttpContext)
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.#ctor(System.String,System.String,System.String)
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: AzureBlobCache(string, string, string)
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.AzureBlobCache(string, string, string)
  type: Constructor
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 79
  summary: Initializes a new instance of the [ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache](api/ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml) class.
  syntax:
    content:
      CSharp: 'public AzureBlobCache(string requestPath, string fullPath, string querystring): base (requestPath, fullPath, querystring)'
    parameters:
    - id: requestPath
      type:
        id: System.String
        name: string
        isExternal: true
      description: The request path for the image.
    - id: fullPath
      type:
        id: System.String
        name: string
        isExternal: true
      description: The full path for the image.
    - id: querystring
      type:
        id: System.String
        name: string
        isExternal: true
      description: The querystring containing instructions.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.#ctor(System.String,System.String,System.String)
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.IsNewOrUpdatedAsync
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: IsNewOrUpdatedAsync()
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.IsNewOrUpdatedAsync()
  type: Method
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 110
  summary: Gets a value indicating whether the image is new or updated in an asynchronous manner.
  syntax:
    content:
      CSharp: public override Task<bool> IsNewOrUpdatedAsync()
    parameters: []
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{System.Boolean}
        name: Task<bool>
        isExternal: true
      description: The asynchronous [System.Threading.Tasks.Task](#) returning the value.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.IsNewOrUpdatedAsync
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.AddImageToCacheAsync(System.IO.Stream,System.String)
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: AddImageToCacheAsync(Stream, string)
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.AddImageToCacheAsync(System.IO.Stream, string)
  type: Method
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 198
  summary: Adds the image to the cache in an asynchronous manner.
  syntax:
    content:
      CSharp: public override Task AddImageToCacheAsync(Stream stream, string contentType)
    parameters:
    - id: stream
      type:
        id: System.IO.Stream
        name: Stream
        isExternal: true
      description: The stream containing the image data.
    - id: contentType
      type:
        id: System.String
        name: string
        isExternal: true
      description: The content type of the image.
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
      description: The [System.Threading.Tasks.Task](#) representing an asynchronous operation.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.AddImageToCacheAsync(System.IO.Stream,System.String)
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.TrimCacheAsync
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: TrimCacheAsync()
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.TrimCacheAsync()
  type: Method
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 219
  summary: Trims the cache of any expired items in an asynchronous manner.
  syntax:
    content:
      CSharp: public override Task TrimCacheAsync()
    parameters: []
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
      description: The asynchronous [System.Threading.Tasks.Task](#) representing an asynchronous operation.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.TrimCacheAsync
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.CreateCachedFileNameAsync
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: CreateCachedFileNameAsync()
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.CreateCachedFileNameAsync()
  type: Method
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 263
  summary: Gets a string identifying the cached file name.
  syntax:
    content:
      CSharp: public override Task<string> CreateCachedFileNameAsync()
    parameters: []
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{System.String}
        name: Task<string>
        isExternal: true
      description: The asynchronous [System.Threading.Tasks.Task](#) returning the value.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.CreateCachedFileNameAsync
- uid: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.RewritePath(System.Web.HttpContext)
  href: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.yml
  name: RewritePath(HttpContext)
  fullName: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.RewritePath(System.Web.HttpContext)
  type: Method
  source:
    remote: *o0
    path: src/Plugins/ImageProcessor.Web/ImageProcessor.Web.Plugins.AzureBlobCache/AzureBlobCache.cs
    startLine: 334
  summary: Rewrites the path to point to the cached image.
  syntax:
    content:
      CSharp: public override void RewritePath(HttpContext context)
    parameters:
    - id: context
      type:
        id: System.Web.HttpContext
        name: HttpContext
        isExternal: true
      description: The [System.Web.HttpContext](#) encapsulating all information about the request.
  id: ImageProcessor.Web.Plugins.AzureBlobCache.AzureBlobCache.RewritePath(System.Web.HttpContext)
