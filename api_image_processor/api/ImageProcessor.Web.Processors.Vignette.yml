items:
- uid: ImageProcessor.Web.Processors.Vignette
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: Vignette
  fullName: ImageProcessor.Web.Processors.Vignette
  type: Class
  source:
    remote: &o0
      path: src/ImageProcessor.Web/Processors/Vignette.cs
      branch: V2
      repo: https://github.com/JimBobSquarePants/ImageProcessor.git
      key: 6d1ac546
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 23
  summary: Encapsulates methods with which to add a vignette image effect to an image.
  syntax:
    content:
      CSharp: 'public class Vignette : IWebGraphicsProcessor'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: ImageProcessor.Web.Processors.Vignette
  children:
  - ImageProcessor.Web.Processors.Vignette.#ctor
  - ImageProcessor.Web.Processors.Vignette.RegexPattern
  - ImageProcessor.Web.Processors.Vignette.SortOrder
  - ImageProcessor.Web.Processors.Vignette.Processor
  - ImageProcessor.Web.Processors.Vignette.MatchRegexIndex(System.String)
- uid: ImageProcessor.Web.Processors.Vignette.#ctor
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: Vignette()
  fullName: ImageProcessor.Web.Processors.Vignette.Vignette()
  type: Constructor
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 33
  summary: Initializes a new instance of the [ImageProcessor.Web.Processors.Vignette](api/ImageProcessor.Web.Processors.Vignette.yml) class.
  syntax:
    content:
      CSharp: public Vignette()
    parameters: []
  id: ImageProcessor.Web.Processors.Vignette.#ctor
- uid: ImageProcessor.Web.Processors.Vignette.RegexPattern
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: RegexPattern
  fullName: ImageProcessor.Web.Processors.Vignette.RegexPattern
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 41
  summary: Gets the regular expression to search strings for.
  syntax:
    content:
      CSharp: public Regex RegexPattern { get; }
    parameters:
    - id: RegexPattern
      type:
        id: System.Text.RegularExpressions.Regex
        name: Regex
        isExternal: true
  id: ImageProcessor.Web.Processors.Vignette.RegexPattern
- uid: ImageProcessor.Web.Processors.Vignette.SortOrder
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: SortOrder
  fullName: ImageProcessor.Web.Processors.Vignette.SortOrder
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 52
  summary: Gets the order in which this processor is to be used in a chain.
  syntax:
    content:
      CSharp: public int SortOrder { get; }
    parameters:
    - id: SortOrder
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: ImageProcessor.Web.Processors.Vignette.SortOrder
- uid: ImageProcessor.Web.Processors.Vignette.Processor
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: Processor
  fullName: ImageProcessor.Web.Processors.Vignette.Processor
  type: Property
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 57
  summary: Gets the associated graphics processor.
  syntax:
    content:
      CSharp: public IGraphicsProcessor Processor { get; }
    parameters:
    - id: Processor
      type:
        id: ImageProcessor.Processors.IGraphicsProcessor
        name: IGraphicsProcessor
        href: ImageProcessor.Processors.IGraphicsProcessor.yml
  id: ImageProcessor.Web.Processors.Vignette.Processor
- uid: ImageProcessor.Web.Processors.Vignette.MatchRegexIndex(System.String)
  href: ImageProcessor.Web.Processors.Vignette.yml
  name: MatchRegexIndex(string)
  fullName: ImageProcessor.Web.Processors.Vignette.MatchRegexIndex(string)
  type: Method
  source:
    remote: *o0
    path: src/ImageProcessor.Web/Processors/Vignette.cs
    startLine: 68
  summary: The position in the original string where the first character of the captured substring was found.
  syntax:
    content:
      CSharp: public int MatchRegexIndex(string queryString)
    parameters:
    - id: queryString
      type:
        id: System.String
        name: string
        isExternal: true
      description: The query string to search.
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
      description: The zero-based starting position in the original string where the captured substring was found.
  id: ImageProcessor.Web.Processors.Vignette.MatchRegexIndex(System.String)
