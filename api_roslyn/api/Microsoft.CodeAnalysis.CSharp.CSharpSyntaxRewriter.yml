items:
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: CSharpSyntaxRewriter
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter
  type: Class
  source:
    remote: &o0
      path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 14
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml) which descends an entire [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) graph and

    may replace or remove visited SyntaxNodes in depth-first order.
  syntax:
    content:
      CSharp: 'public abstract class CSharpSyntaxRewriter : CSharpSyntaxVisitor<SyntaxNode>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{Microsoft.CodeAnalysis.SyntaxNode}
    name: CSharpSyntaxVisitor<SyntaxNode>
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{Microsoft.CodeAnalysis.SyntaxNode}
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter
  children:
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.#ctor(System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIntoStructuredTrivia
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SyntaxList{``0})
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement``1(``0)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0})
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.#ctor(System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: CSharpSyntaxRewriter(bool)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.CSharpSyntaxRewriter(bool)
  type: Constructor
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 18
  syntax:
    content:
      CSharp: public CSharpSyntaxRewriter(bool visitIntoStructuredTrivia = false)
    parameters:
    - id: visitIntoStructuredTrivia
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.#ctor(System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIntoStructuredTrivia
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitIntoStructuredTrivia
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIntoStructuredTrivia
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 23
  syntax:
    content:
      CSharp: public virtual bool VisitIntoStructuredTrivia { get; }
    parameters:
    - id: VisitIntoStructuredTrivia
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIntoStructuredTrivia
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 28
  syntax:
    content:
      CSharp: public virtual SyntaxToken VisitToken(SyntaxToken token)
    parameters:
    - id: token
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: SyntaxToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitTrivia(SyntaxTrivia)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 92
  syntax:
    content:
      CSharp: public virtual SyntaxTrivia VisitTrivia(SyntaxTrivia trivia)
    parameters:
    - id: trivia
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: Microsoft.CodeAnalysis.SyntaxTrivia
    return:
      id: SyntaxTrivia
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: Microsoft.CodeAnalysis.SyntaxTrivia
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SyntaxList{``0})
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitList<TNode>(SyntaxList<TNode>)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList<TNode>(Microsoft.CodeAnalysis.SyntaxList<TNode>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 114
  syntax:
    content:
      CSharp: 'public virtual SyntaxList<TNode> VisitList<TNode>(SyntaxList<TNode> list)where TNode : SyntaxNode'
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{``0}
        name: SyntaxList<TNode>
        href: Microsoft.CodeAnalysis.SyntaxList{``0}
    return:
      id: SyntaxList
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{``0}
        name: SyntaxList<TNode>
        href: Microsoft.CodeAnalysis.SyntaxList{``0}
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SyntaxList{``0})
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement``1(``0)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitListElement<TNode>(TNode)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement<TNode>(TNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 141
  syntax:
    content:
      CSharp: 'public virtual TNode VisitListElement<TNode>(TNode node)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
    return:
      id: TNode
      type:
        id: TNode
        name: TNode
        href: TNode
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement``1(``0)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0})
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitList<TNode>(SeparatedSyntaxList<TNode>)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList<TNode>(Microsoft.CodeAnalysis.SeparatedSyntaxList<TNode>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 146
  syntax:
    content:
      CSharp: 'public virtual SeparatedSyntaxList<TNode> VisitList<TNode>(SeparatedSyntaxList<TNode> list)where TNode : SyntaxNode'
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}
        name: SeparatedSyntaxList<TNode>
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}
    return:
      id: SeparatedSyntaxList
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}
        name: SeparatedSyntaxList<TNode>
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0})
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitListSeparator(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 221
  syntax:
    content:
      CSharp: public virtual SyntaxToken VisitListSeparator(SyntaxToken separator)
    parameters:
    - id: separator
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: SyntaxToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitList(SyntaxTokenList)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 226
  syntax:
    content:
      CSharp: public virtual SyntaxTokenList VisitList(SyntaxTokenList list)
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SyntaxTokenList
        name: SyntaxTokenList
        href: Microsoft.CodeAnalysis.SyntaxTokenList
    return:
      id: SyntaxTokenList
      type:
        id: Microsoft.CodeAnalysis.SyntaxTokenList
        name: SyntaxTokenList
        href: Microsoft.CodeAnalysis.SyntaxTokenList
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitList(SyntaxTriviaList)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 256
  syntax:
    content:
      CSharp: public virtual SyntaxTriviaList VisitList(SyntaxTriviaList list)
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: Microsoft.CodeAnalysis.SyntaxTriviaList
    return:
      id: SyntaxTriviaList
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: Microsoft.CodeAnalysis.SyntaxTriviaList
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: VisitListElement(SyntaxTrivia)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxRewriter.cs
    startLine: 291
  syntax:
    content:
      CSharp: public virtual SyntaxTrivia VisitListElement(SyntaxTrivia element)
    parameters:
    - id: element
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: Microsoft.CodeAnalysis.SyntaxTrivia
    return:
      id: SyntaxTrivia
      type:
        id: Microsoft.CodeAnalysis.SyntaxTrivia
        name: SyntaxTrivia
        href: Microsoft.CodeAnalysis.SyntaxTrivia
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)
