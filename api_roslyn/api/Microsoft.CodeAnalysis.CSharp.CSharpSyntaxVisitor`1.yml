items:
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: CSharpSyntaxVisitor<TResult>
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66382
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) visitor that visits only the single CSharpSyntaxNode

    passed into its Visit method and produces

    a value of the type specified by the  parameter.
  syntax:
    content:
      CSharp: public abstract partial class CSharpSyntaxVisitor<TResult>
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1
  children:
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.Visit(Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.Visit(Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: Visit(SyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.Visit(Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxVisitor.cs
    startLine: 18
  syntax:
    content:
      CSharp: public virtual TResult Visit(SyntaxNode node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.Visit(Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: DefaultVisit(SyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CSharpSyntaxVisitor.cs
    startLine: 29
  syntax:
    content:
      CSharp: public virtual TResult DefaultVisit(SyntaxNode node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIdentifierName(IdentifierNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66385
  summary: Called when the visitor visits a IdentifierNameSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIdentifierName(IdentifierNameSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
        name: IdentifierNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitQualifiedName(QualifiedNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66391
  summary: Called when the visitor visits a QualifiedNameSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitQualifiedName(QualifiedNameSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
        name: QualifiedNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitGenericName(GenericNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66397
  summary: Called when the visitor visits a GenericNameSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitGenericName(GenericNameSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
        name: GenericNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeArgumentList(TypeArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66403
  summary: Called when the visitor visits a TypeArgumentListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeArgumentList(TypeArgumentListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
        name: TypeArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAliasQualifiedName(AliasQualifiedNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66409
  summary: Called when the visitor visits a AliasQualifiedNameSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAliasQualifiedName(AliasQualifiedNameSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax
        name: AliasQualifiedNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPredefinedType(PredefinedTypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66415
  summary: Called when the visitor visits a PredefinedTypeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPredefinedType(PredefinedTypeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax
        name: PredefinedTypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArrayType(ArrayTypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66421
  summary: Called when the visitor visits a ArrayTypeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArrayType(ArrayTypeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax
        name: ArrayTypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArrayRankSpecifier(ArrayRankSpecifierSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66427
  summary: Called when the visitor visits a ArrayRankSpecifierSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArrayRankSpecifier(ArrayRankSpecifierSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax
        name: ArrayRankSpecifierSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPointerType(PointerTypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66433
  summary: Called when the visitor visits a PointerTypeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPointerType(PointerTypeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax
        name: PointerTypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitNullableType(NullableTypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66439
  summary: Called when the visitor visits a NullableTypeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitNullableType(NullableTypeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax
        name: NullableTypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOmittedTypeArgument(OmittedTypeArgumentSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66445
  summary: Called when the visitor visits a OmittedTypeArgumentSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOmittedTypeArgument(OmittedTypeArgumentSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax
        name: OmittedTypeArgumentSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitParenthesizedExpression(ParenthesizedExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66451
  summary: Called when the visitor visits a ParenthesizedExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitParenthesizedExpression(ParenthesizedExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax
        name: ParenthesizedExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPrefixUnaryExpression(PrefixUnaryExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66457
  summary: Called when the visitor visits a PrefixUnaryExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPrefixUnaryExpression(PrefixUnaryExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
        name: PrefixUnaryExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAwaitExpression(AwaitExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66463
  summary: Called when the visitor visits a AwaitExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAwaitExpression(AwaitExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax
        name: AwaitExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPostfixUnaryExpression(PostfixUnaryExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66469
  summary: Called when the visitor visits a PostfixUnaryExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPostfixUnaryExpression(PostfixUnaryExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax
        name: PostfixUnaryExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitMemberAccessExpression(MemberAccessExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66475
  summary: Called when the visitor visits a MemberAccessExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitMemberAccessExpression(MemberAccessExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax
        name: MemberAccessExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConditionalAccessExpression(ConditionalAccessExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66481
  summary: Called when the visitor visits a ConditionalAccessExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConditionalAccessExpression(ConditionalAccessExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax
        name: ConditionalAccessExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitMemberBindingExpression(MemberBindingExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66487
  summary: Called when the visitor visits a MemberBindingExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitMemberBindingExpression(MemberBindingExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax
        name: MemberBindingExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitElementBindingExpression(ElementBindingExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66493
  summary: Called when the visitor visits a ElementBindingExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitElementBindingExpression(ElementBindingExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax
        name: ElementBindingExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitImplicitElementAccess(ImplicitElementAccessSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66499
  summary: Called when the visitor visits a ImplicitElementAccessSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitImplicitElementAccess(ImplicitElementAccessSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax
        name: ImplicitElementAccessSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBinaryExpression(BinaryExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66505
  summary: Called when the visitor visits a BinaryExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBinaryExpression(BinaryExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax
        name: BinaryExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAssignmentExpression(AssignmentExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66511
  summary: Called when the visitor visits a AssignmentExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAssignmentExpression(AssignmentExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax
        name: AssignmentExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConditionalExpression(ConditionalExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66517
  summary: Called when the visitor visits a ConditionalExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConditionalExpression(ConditionalExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax
        name: ConditionalExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitThisExpression(ThisExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66523
  summary: Called when the visitor visits a ThisExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitThisExpression(ThisExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax
        name: ThisExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBaseExpression(BaseExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66529
  summary: Called when the visitor visits a BaseExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBaseExpression(BaseExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax
        name: BaseExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLiteralExpression(LiteralExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66535
  summary: Called when the visitor visits a LiteralExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLiteralExpression(LiteralExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax
        name: LiteralExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitMakeRefExpression(MakeRefExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66541
  summary: Called when the visitor visits a MakeRefExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitMakeRefExpression(MakeRefExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax
        name: MakeRefExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitRefTypeExpression(RefTypeExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66547
  summary: Called when the visitor visits a RefTypeExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitRefTypeExpression(RefTypeExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax
        name: RefTypeExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitRefValueExpression(RefValueExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66553
  summary: Called when the visitor visits a RefValueExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitRefValueExpression(RefValueExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax
        name: RefValueExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCheckedExpression(CheckedExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66559
  summary: Called when the visitor visits a CheckedExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCheckedExpression(CheckedExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax
        name: CheckedExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDefaultExpression(DefaultExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66565
  summary: Called when the visitor visits a DefaultExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDefaultExpression(DefaultExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax
        name: DefaultExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeOfExpression(TypeOfExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66571
  summary: Called when the visitor visits a TypeOfExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeOfExpression(TypeOfExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
        name: TypeOfExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSizeOfExpression(SizeOfExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66577
  summary: Called when the visitor visits a SizeOfExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSizeOfExpression(SizeOfExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax
        name: SizeOfExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInvocationExpression(InvocationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66583
  summary: Called when the visitor visits a InvocationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInvocationExpression(InvocationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax
        name: InvocationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitElementAccessExpression(ElementAccessExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66589
  summary: Called when the visitor visits a ElementAccessExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitElementAccessExpression(ElementAccessExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax
        name: ElementAccessExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArgumentList(ArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66595
  summary: Called when the visitor visits a ArgumentListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArgumentList(ArgumentListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax
        name: ArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBracketedArgumentList(BracketedArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66601
  summary: Called when the visitor visits a BracketedArgumentListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBracketedArgumentList(BracketedArgumentListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax
        name: BracketedArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArgument(ArgumentSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66607
  summary: Called when the visitor visits a ArgumentSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArgument(ArgumentSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
        name: ArgumentSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitNameColon(NameColonSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66613
  summary: Called when the visitor visits a NameColonSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitNameColon(NameColonSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax
        name: NameColonSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCastExpression(CastExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66619
  summary: Called when the visitor visits a CastExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCastExpression(CastExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax
        name: CastExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAnonymousMethodExpression(AnonymousMethodExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66625
  summary: Called when the visitor visits a AnonymousMethodExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAnonymousMethodExpression(AnonymousMethodExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax
        name: AnonymousMethodExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSimpleLambdaExpression(SimpleLambdaExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66631
  summary: Called when the visitor visits a SimpleLambdaExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSimpleLambdaExpression(SimpleLambdaExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax
        name: SimpleLambdaExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitParenthesizedLambdaExpression(ParenthesizedLambdaExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66637
  summary: Called when the visitor visits a ParenthesizedLambdaExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitParenthesizedLambdaExpression(ParenthesizedLambdaExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax
        name: ParenthesizedLambdaExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInitializerExpression(InitializerExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66643
  summary: Called when the visitor visits a InitializerExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInitializerExpression(InitializerExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
        name: InitializerExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitObjectCreationExpression(ObjectCreationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66649
  summary: Called when the visitor visits a ObjectCreationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitObjectCreationExpression(ObjectCreationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax
        name: ObjectCreationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAnonymousObjectMemberDeclarator(AnonymousObjectMemberDeclaratorSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66655
  summary: Called when the visitor visits a AnonymousObjectMemberDeclaratorSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAnonymousObjectMemberDeclarator(AnonymousObjectMemberDeclaratorSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax
        name: AnonymousObjectMemberDeclaratorSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAnonymousObjectCreationExpression(AnonymousObjectCreationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66661
  summary: Called when the visitor visits a AnonymousObjectCreationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAnonymousObjectCreationExpression(AnonymousObjectCreationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax
        name: AnonymousObjectCreationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArrayCreationExpression(ArrayCreationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66667
  summary: Called when the visitor visits a ArrayCreationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArrayCreationExpression(ArrayCreationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax
        name: ArrayCreationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitImplicitArrayCreationExpression(ImplicitArrayCreationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66673
  summary: Called when the visitor visits a ImplicitArrayCreationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitImplicitArrayCreationExpression(ImplicitArrayCreationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax
        name: ImplicitArrayCreationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitStackAllocArrayCreationExpression(StackAllocArrayCreationExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66679
  summary: Called when the visitor visits a StackAllocArrayCreationExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitStackAllocArrayCreationExpression(StackAllocArrayCreationExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax
        name: StackAllocArrayCreationExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitQueryExpression(QueryExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66685
  summary: Called when the visitor visits a QueryExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitQueryExpression(QueryExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax
        name: QueryExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitQueryBody(QueryBodySyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66691
  summary: Called when the visitor visits a QueryBodySyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitQueryBody(QueryBodySyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax
        name: QueryBodySyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitFromClause(FromClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66697
  summary: Called when the visitor visits a FromClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitFromClause(FromClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax
        name: FromClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLetClause(LetClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66703
  summary: Called when the visitor visits a LetClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLetClause(LetClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax
        name: LetClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitJoinClause(JoinClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66709
  summary: Called when the visitor visits a JoinClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitJoinClause(JoinClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax
        name: JoinClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitJoinIntoClause(JoinIntoClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66715
  summary: Called when the visitor visits a JoinIntoClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitJoinIntoClause(JoinIntoClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax
        name: JoinIntoClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitWhereClause(WhereClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66721
  summary: Called when the visitor visits a WhereClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitWhereClause(WhereClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax
        name: WhereClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOrderByClause(OrderByClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66727
  summary: Called when the visitor visits a OrderByClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOrderByClause(OrderByClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax
        name: OrderByClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOrdering(OrderingSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66733
  summary: Called when the visitor visits a OrderingSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOrdering(OrderingSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax
        name: OrderingSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSelectClause(SelectClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66739
  summary: Called when the visitor visits a SelectClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSelectClause(SelectClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax
        name: SelectClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitGroupClause(GroupClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66745
  summary: Called when the visitor visits a GroupClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitGroupClause(GroupClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax
        name: GroupClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitQueryContinuation(QueryContinuationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66751
  summary: Called when the visitor visits a QueryContinuationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitQueryContinuation(QueryContinuationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax
        name: QueryContinuationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOmittedArraySizeExpression(OmittedArraySizeExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66757
  summary: Called when the visitor visits a OmittedArraySizeExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOmittedArraySizeExpression(OmittedArraySizeExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax
        name: OmittedArraySizeExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterpolatedStringExpression(InterpolatedStringExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66763
  summary: Called when the visitor visits a InterpolatedStringExpressionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterpolatedStringExpression(InterpolatedStringExpressionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax
        name: InterpolatedStringExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterpolatedStringText(InterpolatedStringTextSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66769
  summary: Called when the visitor visits a InterpolatedStringTextSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterpolatedStringText(InterpolatedStringTextSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax
        name: InterpolatedStringTextSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterpolation(InterpolationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66775
  summary: Called when the visitor visits a InterpolationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterpolation(InterpolationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax
        name: InterpolationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterpolationAlignmentClause(InterpolationAlignmentClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66781
  summary: Called when the visitor visits a InterpolationAlignmentClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterpolationAlignmentClause(InterpolationAlignmentClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax
        name: InterpolationAlignmentClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterpolationFormatClause(InterpolationFormatClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66787
  summary: Called when the visitor visits a InterpolationFormatClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterpolationFormatClause(InterpolationFormatClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax
        name: InterpolationFormatClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitGlobalStatement(GlobalStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66793
  summary: Called when the visitor visits a GlobalStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitGlobalStatement(GlobalStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax
        name: GlobalStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBlock(BlockSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66799
  summary: Called when the visitor visits a BlockSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBlock(BlockSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
        name: BlockSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLocalDeclarationStatement(LocalDeclarationStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66805
  summary: Called when the visitor visits a LocalDeclarationStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLocalDeclarationStatement(LocalDeclarationStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax
        name: LocalDeclarationStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitVariableDeclaration(VariableDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66811
  summary: Called when the visitor visits a VariableDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitVariableDeclaration(VariableDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
        name: VariableDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitVariableDeclarator(VariableDeclaratorSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66817
  summary: Called when the visitor visits a VariableDeclaratorSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitVariableDeclarator(VariableDeclaratorSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax
        name: VariableDeclaratorSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEqualsValueClause(EqualsValueClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66823
  summary: Called when the visitor visits a EqualsValueClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEqualsValueClause(EqualsValueClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax
        name: EqualsValueClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitExpressionStatement(ExpressionStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66829
  summary: Called when the visitor visits a ExpressionStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitExpressionStatement(ExpressionStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax
        name: ExpressionStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEmptyStatement(EmptyStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66835
  summary: Called when the visitor visits a EmptyStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEmptyStatement(EmptyStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax
        name: EmptyStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLabeledStatement(LabeledStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66841
  summary: Called when the visitor visits a LabeledStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLabeledStatement(LabeledStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax
        name: LabeledStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitGotoStatement(GotoStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66847
  summary: Called when the visitor visits a GotoStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitGotoStatement(GotoStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax
        name: GotoStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBreakStatement(BreakStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66853
  summary: Called when the visitor visits a BreakStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBreakStatement(BreakStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax
        name: BreakStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitContinueStatement(ContinueStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66859
  summary: Called when the visitor visits a ContinueStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitContinueStatement(ContinueStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax
        name: ContinueStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitReturnStatement(ReturnStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66865
  summary: Called when the visitor visits a ReturnStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitReturnStatement(ReturnStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax
        name: ReturnStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitThrowStatement(ThrowStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66871
  summary: Called when the visitor visits a ThrowStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitThrowStatement(ThrowStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax
        name: ThrowStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitYieldStatement(YieldStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66877
  summary: Called when the visitor visits a YieldStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitYieldStatement(YieldStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax
        name: YieldStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitWhileStatement(WhileStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66883
  summary: Called when the visitor visits a WhileStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitWhileStatement(WhileStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax
        name: WhileStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDoStatement(DoStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66889
  summary: Called when the visitor visits a DoStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDoStatement(DoStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax
        name: DoStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitForStatement(ForStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66895
  summary: Called when the visitor visits a ForStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitForStatement(ForStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax
        name: ForStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitForEachStatement(ForEachStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66901
  summary: Called when the visitor visits a ForEachStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitForEachStatement(ForEachStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax
        name: ForEachStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitUsingStatement(UsingStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66907
  summary: Called when the visitor visits a UsingStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitUsingStatement(UsingStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax
        name: UsingStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitFixedStatement(FixedStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66913
  summary: Called when the visitor visits a FixedStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitFixedStatement(FixedStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax
        name: FixedStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCheckedStatement(CheckedStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66919
  summary: Called when the visitor visits a CheckedStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCheckedStatement(CheckedStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax
        name: CheckedStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitUnsafeStatement(UnsafeStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66925
  summary: Called when the visitor visits a UnsafeStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitUnsafeStatement(UnsafeStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax
        name: UnsafeStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLockStatement(LockStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66931
  summary: Called when the visitor visits a LockStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLockStatement(LockStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax
        name: LockStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIfStatement(IfStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66937
  summary: Called when the visitor visits a IfStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIfStatement(IfStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax
        name: IfStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitElseClause(ElseClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66943
  summary: Called when the visitor visits a ElseClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitElseClause(ElseClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax
        name: ElseClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSwitchStatement(SwitchStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66949
  summary: Called when the visitor visits a SwitchStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSwitchStatement(SwitchStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax
        name: SwitchStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSwitchSection(SwitchSectionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66955
  summary: Called when the visitor visits a SwitchSectionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSwitchSection(SwitchSectionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax
        name: SwitchSectionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCaseSwitchLabel(CaseSwitchLabelSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66961
  summary: Called when the visitor visits a CaseSwitchLabelSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCaseSwitchLabel(CaseSwitchLabelSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax
        name: CaseSwitchLabelSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDefaultSwitchLabel(DefaultSwitchLabelSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66967
  summary: Called when the visitor visits a DefaultSwitchLabelSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDefaultSwitchLabel(DefaultSwitchLabelSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax
        name: DefaultSwitchLabelSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTryStatement(TryStatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66973
  summary: Called when the visitor visits a TryStatementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTryStatement(TryStatementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax
        name: TryStatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCatchClause(CatchClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66979
  summary: Called when the visitor visits a CatchClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCatchClause(CatchClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax
        name: CatchClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCatchDeclaration(CatchDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66985
  summary: Called when the visitor visits a CatchDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCatchDeclaration(CatchDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax
        name: CatchDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCatchFilterClause(CatchFilterClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66991
  summary: Called when the visitor visits a CatchFilterClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCatchFilterClause(CatchFilterClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax
        name: CatchFilterClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitFinallyClause(FinallyClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 66997
  summary: Called when the visitor visits a FinallyClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitFinallyClause(FinallyClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax
        name: FinallyClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCompilationUnit(CompilationUnitSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67003
  summary: Called when the visitor visits a CompilationUnitSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCompilationUnit(CompilationUnitSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
        name: CompilationUnitSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitExternAliasDirective(ExternAliasDirectiveSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67009
  summary: Called when the visitor visits a ExternAliasDirectiveSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitExternAliasDirective(ExternAliasDirectiveSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax
        name: ExternAliasDirectiveSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitUsingDirective(UsingDirectiveSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67015
  summary: Called when the visitor visits a UsingDirectiveSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitUsingDirective(UsingDirectiveSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax
        name: UsingDirectiveSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitNamespaceDeclaration(NamespaceDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67021
  summary: Called when the visitor visits a NamespaceDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitNamespaceDeclaration(NamespaceDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax
        name: NamespaceDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAttributeList(AttributeListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67027
  summary: Called when the visitor visits a AttributeListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAttributeList(AttributeListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax
        name: AttributeListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAttributeTargetSpecifier(AttributeTargetSpecifierSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67033
  summary: Called when the visitor visits a AttributeTargetSpecifierSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAttributeTargetSpecifier(AttributeTargetSpecifierSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax
        name: AttributeTargetSpecifierSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAttribute(AttributeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67039
  summary: Called when the visitor visits a AttributeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAttribute(AttributeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax
        name: AttributeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAttributeArgumentList(AttributeArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67045
  summary: Called when the visitor visits a AttributeArgumentListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAttributeArgumentList(AttributeArgumentListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax
        name: AttributeArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAttributeArgument(AttributeArgumentSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67051
  summary: Called when the visitor visits a AttributeArgumentSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAttributeArgument(AttributeArgumentSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax
        name: AttributeArgumentSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitNameEquals(NameEqualsSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67057
  summary: Called when the visitor visits a NameEqualsSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitNameEquals(NameEqualsSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax
        name: NameEqualsSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeParameterList(TypeParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67063
  summary: Called when the visitor visits a TypeParameterListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeParameterList(TypeParameterListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax
        name: TypeParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeParameter(TypeParameterSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67069
  summary: Called when the visitor visits a TypeParameterSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeParameter(TypeParameterSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax
        name: TypeParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitClassDeclaration(ClassDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67075
  summary: Called when the visitor visits a ClassDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitClassDeclaration(ClassDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax
        name: ClassDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitStructDeclaration(StructDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67081
  summary: Called when the visitor visits a StructDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitStructDeclaration(StructDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax
        name: StructDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitInterfaceDeclaration(InterfaceDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67087
  summary: Called when the visitor visits a InterfaceDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitInterfaceDeclaration(InterfaceDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax
        name: InterfaceDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEnumDeclaration(EnumDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67093
  summary: Called when the visitor visits a EnumDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEnumDeclaration(EnumDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax
        name: EnumDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDelegateDeclaration(DelegateDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67099
  summary: Called when the visitor visits a DelegateDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDelegateDeclaration(DelegateDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax
        name: DelegateDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEnumMemberDeclaration(EnumMemberDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67105
  summary: Called when the visitor visits a EnumMemberDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEnumMemberDeclaration(EnumMemberDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax
        name: EnumMemberDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBaseList(BaseListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67111
  summary: Called when the visitor visits a BaseListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBaseList(BaseListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax
        name: BaseListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSimpleBaseType(SimpleBaseTypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67117
  summary: Called when the visitor visits a SimpleBaseTypeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSimpleBaseType(SimpleBaseTypeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax
        name: SimpleBaseTypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeParameterConstraintClause(TypeParameterConstraintClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67123
  summary: Called when the visitor visits a TypeParameterConstraintClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeParameterConstraintClause(TypeParameterConstraintClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax
        name: TypeParameterConstraintClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConstructorConstraint(ConstructorConstraintSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67129
  summary: Called when the visitor visits a ConstructorConstraintSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConstructorConstraint(ConstructorConstraintSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax
        name: ConstructorConstraintSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitClassOrStructConstraint(ClassOrStructConstraintSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67135
  summary: Called when the visitor visits a ClassOrStructConstraintSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitClassOrStructConstraint(ClassOrStructConstraintSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax
        name: ClassOrStructConstraintSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeConstraint(TypeConstraintSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67141
  summary: Called when the visitor visits a TypeConstraintSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeConstraint(TypeConstraintSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax
        name: TypeConstraintSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitFieldDeclaration(FieldDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67147
  summary: Called when the visitor visits a FieldDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitFieldDeclaration(FieldDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax
        name: FieldDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEventFieldDeclaration(EventFieldDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67153
  summary: Called when the visitor visits a EventFieldDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEventFieldDeclaration(EventFieldDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax
        name: EventFieldDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitExplicitInterfaceSpecifier(ExplicitInterfaceSpecifierSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67159
  summary: Called when the visitor visits a ExplicitInterfaceSpecifierSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitExplicitInterfaceSpecifier(ExplicitInterfaceSpecifierSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax
        name: ExplicitInterfaceSpecifierSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitMethodDeclaration(MethodDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67165
  summary: Called when the visitor visits a MethodDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitMethodDeclaration(MethodDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
        name: MethodDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOperatorDeclaration(OperatorDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67171
  summary: Called when the visitor visits a OperatorDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOperatorDeclaration(OperatorDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax
        name: OperatorDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConversionOperatorDeclaration(ConversionOperatorDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67177
  summary: Called when the visitor visits a ConversionOperatorDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConversionOperatorDeclaration(ConversionOperatorDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax
        name: ConversionOperatorDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConstructorDeclaration(ConstructorDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67183
  summary: Called when the visitor visits a ConstructorDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConstructorDeclaration(ConstructorDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax
        name: ConstructorDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConstructorInitializer(ConstructorInitializerSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67189
  summary: Called when the visitor visits a ConstructorInitializerSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConstructorInitializer(ConstructorInitializerSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax
        name: ConstructorInitializerSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDestructorDeclaration(DestructorDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67195
  summary: Called when the visitor visits a DestructorDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDestructorDeclaration(DestructorDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax
        name: DestructorDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPropertyDeclaration(PropertyDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67201
  summary: Called when the visitor visits a PropertyDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPropertyDeclaration(PropertyDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax
        name: PropertyDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitArrowExpressionClause(ArrowExpressionClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67207
  summary: Called when the visitor visits a ArrowExpressionClauseSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitArrowExpressionClause(ArrowExpressionClauseSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax
        name: ArrowExpressionClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEventDeclaration(EventDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67213
  summary: Called when the visitor visits a EventDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEventDeclaration(EventDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax
        name: EventDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIndexerDeclaration(IndexerDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67219
  summary: Called when the visitor visits a IndexerDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIndexerDeclaration(IndexerDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
        name: IndexerDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAccessorList(AccessorListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67225
  summary: Called when the visitor visits a AccessorListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAccessorList(AccessorListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax
        name: AccessorListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitAccessorDeclaration(AccessorDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67231
  summary: Called when the visitor visits a AccessorDeclarationSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitAccessorDeclaration(AccessorDeclarationSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax
        name: AccessorDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitParameterList(ParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67237
  summary: Called when the visitor visits a ParameterListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitParameterList(ParameterListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBracketedParameterList(BracketedParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67243
  summary: Called when the visitor visits a BracketedParameterListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBracketedParameterList(BracketedParameterListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax
        name: BracketedParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitParameter(ParameterSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67249
  summary: Called when the visitor visits a ParameterSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitParameter(ParameterSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
        name: ParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIncompleteMember(IncompleteMemberSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67255
  summary: Called when the visitor visits a IncompleteMemberSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIncompleteMember(IncompleteMemberSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax
        name: IncompleteMemberSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitSkippedTokensTrivia(SkippedTokensTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67261
  summary: Called when the visitor visits a SkippedTokensTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitSkippedTokensTrivia(SkippedTokensTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax
        name: SkippedTokensTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDocumentationCommentTrivia(DocumentationCommentTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67267
  summary: Called when the visitor visits a DocumentationCommentTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDocumentationCommentTrivia(DocumentationCommentTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax
        name: DocumentationCommentTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitTypeCref(TypeCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67273
  summary: Called when the visitor visits a TypeCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitTypeCref(TypeCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax
        name: TypeCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitQualifiedCref(QualifiedCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67279
  summary: Called when the visitor visits a QualifiedCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitQualifiedCref(QualifiedCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax
        name: QualifiedCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitNameMemberCref(NameMemberCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67285
  summary: Called when the visitor visits a NameMemberCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitNameMemberCref(NameMemberCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax
        name: NameMemberCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIndexerMemberCref(IndexerMemberCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67291
  summary: Called when the visitor visits a IndexerMemberCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIndexerMemberCref(IndexerMemberCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax
        name: IndexerMemberCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitOperatorMemberCref(OperatorMemberCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67297
  summary: Called when the visitor visits a OperatorMemberCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitOperatorMemberCref(OperatorMemberCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax
        name: OperatorMemberCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitConversionOperatorMemberCref(ConversionOperatorMemberCrefSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67303
  summary: Called when the visitor visits a ConversionOperatorMemberCrefSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitConversionOperatorMemberCref(ConversionOperatorMemberCrefSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax
        name: ConversionOperatorMemberCrefSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCrefParameterList(CrefParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67309
  summary: Called when the visitor visits a CrefParameterListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCrefParameterList(CrefParameterListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax
        name: CrefParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCrefBracketedParameterList(CrefBracketedParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67315
  summary: Called when the visitor visits a CrefBracketedParameterListSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCrefBracketedParameterList(CrefBracketedParameterListSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax
        name: CrefBracketedParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitCrefParameter(CrefParameterSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67321
  summary: Called when the visitor visits a CrefParameterSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitCrefParameter(CrefParameterSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax
        name: CrefParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlElement(XmlElementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67327
  summary: Called when the visitor visits a XmlElementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlElement(XmlElementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax
        name: XmlElementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlElementStartTag(XmlElementStartTagSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67333
  summary: Called when the visitor visits a XmlElementStartTagSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlElementStartTag(XmlElementStartTagSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax
        name: XmlElementStartTagSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlElementEndTag(XmlElementEndTagSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67339
  summary: Called when the visitor visits a XmlElementEndTagSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlElementEndTag(XmlElementEndTagSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax
        name: XmlElementEndTagSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlEmptyElement(XmlEmptyElementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67345
  summary: Called when the visitor visits a XmlEmptyElementSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlEmptyElement(XmlEmptyElementSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax
        name: XmlEmptyElementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlName(XmlNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67351
  summary: Called when the visitor visits a XmlNameSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlName(XmlNameSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax
        name: XmlNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlPrefix(XmlPrefixSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67357
  summary: Called when the visitor visits a XmlPrefixSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlPrefix(XmlPrefixSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax
        name: XmlPrefixSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlTextAttribute(XmlTextAttributeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67363
  summary: Called when the visitor visits a XmlTextAttributeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlTextAttribute(XmlTextAttributeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax
        name: XmlTextAttributeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlCrefAttribute(XmlCrefAttributeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67369
  summary: Called when the visitor visits a XmlCrefAttributeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlCrefAttribute(XmlCrefAttributeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax
        name: XmlCrefAttributeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlNameAttribute(XmlNameAttributeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67375
  summary: Called when the visitor visits a XmlNameAttributeSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlNameAttribute(XmlNameAttributeSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax
        name: XmlNameAttributeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlText(XmlTextSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67381
  summary: Called when the visitor visits a XmlTextSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlText(XmlTextSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax
        name: XmlTextSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlCDataSection(XmlCDataSectionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67387
  summary: Called when the visitor visits a XmlCDataSectionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlCDataSection(XmlCDataSectionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax
        name: XmlCDataSectionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlProcessingInstruction(XmlProcessingInstructionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67393
  summary: Called when the visitor visits a XmlProcessingInstructionSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlProcessingInstruction(XmlProcessingInstructionSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax
        name: XmlProcessingInstructionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitXmlComment(XmlCommentSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67399
  summary: Called when the visitor visits a XmlCommentSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitXmlComment(XmlCommentSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax
        name: XmlCommentSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitIfDirectiveTrivia(IfDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67405
  summary: Called when the visitor visits a IfDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitIfDirectiveTrivia(IfDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax
        name: IfDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitElifDirectiveTrivia(ElifDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67411
  summary: Called when the visitor visits a ElifDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitElifDirectiveTrivia(ElifDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax
        name: ElifDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitElseDirectiveTrivia(ElseDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67417
  summary: Called when the visitor visits a ElseDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitElseDirectiveTrivia(ElseDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax
        name: ElseDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEndIfDirectiveTrivia(EndIfDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67423
  summary: Called when the visitor visits a EndIfDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEndIfDirectiveTrivia(EndIfDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax
        name: EndIfDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitRegionDirectiveTrivia(RegionDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67429
  summary: Called when the visitor visits a RegionDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitRegionDirectiveTrivia(RegionDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax
        name: RegionDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitEndRegionDirectiveTrivia(EndRegionDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67435
  summary: Called when the visitor visits a EndRegionDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitEndRegionDirectiveTrivia(EndRegionDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax
        name: EndRegionDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitErrorDirectiveTrivia(ErrorDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67441
  summary: Called when the visitor visits a ErrorDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitErrorDirectiveTrivia(ErrorDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax
        name: ErrorDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitWarningDirectiveTrivia(WarningDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67447
  summary: Called when the visitor visits a WarningDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitWarningDirectiveTrivia(WarningDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax
        name: WarningDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitBadDirectiveTrivia(BadDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67453
  summary: Called when the visitor visits a BadDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitBadDirectiveTrivia(BadDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax
        name: BadDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitDefineDirectiveTrivia(DefineDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67459
  summary: Called when the visitor visits a DefineDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitDefineDirectiveTrivia(DefineDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax
        name: DefineDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitUndefDirectiveTrivia(UndefDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67465
  summary: Called when the visitor visits a UndefDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitUndefDirectiveTrivia(UndefDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax
        name: UndefDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitLineDirectiveTrivia(LineDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67471
  summary: Called when the visitor visits a LineDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitLineDirectiveTrivia(LineDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax
        name: LineDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPragmaWarningDirectiveTrivia(PragmaWarningDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67477
  summary: Called when the visitor visits a PragmaWarningDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPragmaWarningDirectiveTrivia(PragmaWarningDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax
        name: PragmaWarningDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitPragmaChecksumDirectiveTrivia(PragmaChecksumDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67483
  summary: Called when the visitor visits a PragmaChecksumDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitPragmaChecksumDirectiveTrivia(PragmaChecksumDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax
        name: PragmaChecksumDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: VisitReferenceDirectiveTrivia(ReferenceDirectiveTriviaSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 67489
  summary: Called when the visitor visits a ReferenceDirectiveTriviaSyntax node.
  syntax:
    content:
      CSharp: public virtual TResult VisitReferenceDirectiveTrivia(ReferenceDirectiveTriviaSyntax node)
    parameters:
    - id: node
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax
        name: ReferenceDirectiveTriviaSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.yml
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)
