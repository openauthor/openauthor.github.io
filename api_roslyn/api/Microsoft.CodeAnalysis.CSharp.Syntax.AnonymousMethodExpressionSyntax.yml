items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: AnonymousMethodExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50499
  summary: Class which represents the syntax node for anonymous method expression.
  syntax:
    content:
      CSharp: public partial class AnonymousMethodExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax
    name: AnonymousFunctionExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Body
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: Block
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/AnonymousMethodExpressionSyntax.cs
    startLine: 8
  syntax:
    content:
      CSharp: public BlockSyntax Block { get; }
    parameters:
    - id: Block
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
        name: BlockSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: WithBlock(BlockSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/AnonymousMethodExpressionSyntax.cs
    startLine: 10
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax WithBlock(BlockSyntax block)
    parameters:
    - id: block
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
        name: BlockSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: AddBlockStatements(params StatementSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddBlockStatements(params Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/AnonymousMethodExpressionSyntax.cs
    startLine: 15
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax AddBlockStatements(params StatementSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: AsyncKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50510
  summary: Gets the "async" token.
  syntax:
    content:
      CSharp: public override SyntaxToken AsyncKeyword { get; }
    parameters:
    - id: AsyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: DelegateKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50523
  summary: SyntaxToken representing the delegate keyword.
  syntax:
    content:
      CSharp: public SyntaxToken DelegateKeyword { get; }
    parameters:
    - id: DelegateKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: ParameterList
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50529
  summary: List of parameters of the anonymous method expression, or null if there no parameters are specified.
  syntax:
    content:
      CSharp: public ParameterListSyntax ParameterList { get; }
    parameters:
    - id: ParameterList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Body
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: Body
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Body
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50538
  summary: BlockSyntax node representing the body of the anonymous method.
  syntax:
    content:
      CSharp: public override CSharpSyntaxNode Body { get; }
    parameters:
    - id: Body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Body
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50565
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50570
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, ParameterListSyntax, CSharpSyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50575
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax Update(SyntaxToken asyncKeyword, SyntaxToken delegateKeyword, ParameterListSyntax parameterList, CSharpSyntaxNode body)
    parameters:
    - id: asyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: delegateKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: parameterList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: WithAsyncKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50589
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax WithAsyncKeyword(SyntaxToken asyncKeyword)
    parameters:
    - id: asyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: WithDelegateKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50594
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax WithDelegateKeyword(SyntaxToken delegateKeyword)
    parameters:
    - id: delegateKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: WithParameterList(ParameterListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50599
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax WithParameterList(ParameterListSyntax parameterList)
    parameters:
    - id: parameterList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: WithBody(CSharpSyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50604
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax WithBody(CSharpSyntaxNode body)
    parameters:
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.yml
  name: AddParameterListParameters(params ParameterSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddParameterListParameters(params Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50609
  syntax:
    content:
      CSharp: public AnonymousMethodExpressionSyntax AddParameterListParameters(params ParameterSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: AnonymousMethodExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])
