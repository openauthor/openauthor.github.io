items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: ArgumentSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50201
  summary: Class which represents the syntax node for argument.
  syntax:
    content:
      CSharp: public sealed partial class ArgumentSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: NameColon
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50212
  summary: NameColonSyntax node representing the optional name arguments.
  syntax:
    content:
      CSharp: public NameColonSyntax NameColon { get; }
    parameters:
    - id: NameColon
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax
        name: NameColonSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: RefOrOutKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50221
  summary: SyntaxToken representing the optional ref or out keyword.
  syntax:
    content:
      CSharp: public SyntaxToken RefOrOutKeyword { get; }
    parameters:
    - id: RefOrOutKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: Expression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50234
  summary: ExpressionSyntax node representing the argument.
  syntax:
    content:
      CSharp: public ExpressionSyntax Expression { get; }
    parameters:
    - id: Expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50261
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50266
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: Update(NameColonSyntax, SyntaxToken, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50271
  syntax:
    content:
      CSharp: public ArgumentSyntax Update(NameColonSyntax nameColon, SyntaxToken refOrOutKeyword, ExpressionSyntax expression)
    parameters:
    - id: nameColon
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax
        name: NameColonSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.yml
    - id: refOrOutKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: ArgumentSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: WithNameColon(NameColonSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50285
  syntax:
    content:
      CSharp: public ArgumentSyntax WithNameColon(NameColonSyntax nameColon)
    parameters:
    - id: nameColon
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax
        name: NameColonSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.yml
    return:
      id: ArgumentSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: WithRefOrOutKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50290
  syntax:
    content:
      CSharp: public ArgumentSyntax WithRefOrOutKeyword(SyntaxToken refOrOutKeyword)
    parameters:
    - id: refOrOutKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ArgumentSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.yml
  name: WithExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50295
  syntax:
    content:
      CSharp: public ArgumentSyntax WithExpression(ExpressionSyntax expression)
    parameters:
    - id: expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: ArgumentSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
