items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: BlockSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53279
  syntax:
    content:
      CSharp: public sealed partial class BlockSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
    name: StatementSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.OpenBraceToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Statements
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.CloseBraceToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.AddStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.OpenBraceToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: OpenBraceToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.OpenBraceToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53288
  syntax:
    content:
      CSharp: public SyntaxToken OpenBraceToken { get; }
    parameters:
    - id: OpenBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.OpenBraceToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Statements
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: Statements
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Statements
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53293
  syntax:
    content:
      CSharp: public SyntaxList<StatementSyntax> Statements { get; }
    parameters:
    - id: Statements
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
        name: SyntaxList
        href: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Statements
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.CloseBraceToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: CloseBraceToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.CloseBraceToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53301
  syntax:
    content:
      CSharp: public SyntaxToken CloseBraceToken { get; }
    parameters:
    - id: CloseBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.CloseBraceToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53323
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53328
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: Update(SyntaxToken, SyntaxList<StatementSyntax>, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax>, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53333
  syntax:
    content:
      CSharp: public BlockSyntax Update(SyntaxToken openBraceToken, SyntaxList<StatementSyntax> statements, SyntaxToken closeBraceToken)
    parameters:
    - id: openBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: statements
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
        name: SyntaxList
        href: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
    - id: closeBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: BlockSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: WithOpenBraceToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53347
  syntax:
    content:
      CSharp: public BlockSyntax WithOpenBraceToken(SyntaxToken openBraceToken)
    parameters:
    - id: openBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: BlockSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: WithStatements(SyntaxList<StatementSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53352
  syntax:
    content:
      CSharp: public BlockSyntax WithStatements(SyntaxList<StatementSyntax> statements)
    parameters:
    - id: statements
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
        name: SyntaxList
        href: Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax}
    return:
      id: BlockSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: WithCloseBraceToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53357
  syntax:
    content:
      CSharp: public BlockSyntax WithCloseBraceToken(SyntaxToken closeBraceToken)
    parameters:
    - id: closeBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: BlockSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.AddStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.yml
  name: AddStatements(params StatementSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.AddStatements(params Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53362
  syntax:
    content:
      CSharp: public BlockSyntax AddStatements(params StatementSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: BlockSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.AddStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])
