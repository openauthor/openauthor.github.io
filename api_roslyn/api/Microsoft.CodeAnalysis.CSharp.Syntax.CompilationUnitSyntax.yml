items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.yml
  name: CompilationUnitSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
  type: Class
  source:
    remote: &o0
      path: src/Compilers/CSharp/Portable/Syntax/CompilationUnitSyntax.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Compilers/CSharp/Portable/Syntax/CompilationUnitSyntax.cs
    startLine: 10
  syntax:
    content:
      CSharp: 'public sealed class CompilationUnitSyntax : CSharpSyntaxNode, IMessageSerializable'
  inheritance:
  - id: System.Object
    name: Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetReferenceDirectives
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetReferenceDirectives
  href: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.yml
  name: GetReferenceDirectives()
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetReferenceDirectives()
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/CompilationUnitSyntax.cs
    startLine: 15
  summary: 'Returns #r directives specified in the compilation.'
  syntax:
    content:
      CSharp: public IList<ReferenceDirectiveTriviaSyntax> GetReferenceDirectives()
    parameters: []
    return:
      id: IList
      type:
        id: IList{ReferenceDirectiveTriviaSyntax}
        name: IList<ReferenceDirectiveTriviaSyntax>
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetReferenceDirectives
