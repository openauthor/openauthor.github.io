items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: ElseDirectiveTriviaSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65134
  syntax:
    content:
      CSharp: public sealed partial class ElseDirectiveTriviaSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax
    name: StructuredTriviaSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax
    name: DirectiveTriviaSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax
    name: BranchingDirectiveTriviaSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.HashToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.EndOfDirectiveToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.IsActive
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.BranchTaken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithIsActive(System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.HashToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: HashToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.HashToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65141
  syntax:
    content:
      CSharp: public override SyntaxToken HashToken { get; }
    parameters:
    - id: HashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.HashToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: ElseKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65146
  syntax:
    content:
      CSharp: public SyntaxToken ElseKeyword { get; }
    parameters:
    - id: ElseKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.EndOfDirectiveToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: EndOfDirectiveToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.EndOfDirectiveToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65151
  syntax:
    content:
      CSharp: public override SyntaxToken EndOfDirectiveToken { get; }
    parameters:
    - id: EndOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.EndOfDirectiveToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.IsActive
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: IsActive
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.IsActive
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65156
  syntax:
    content:
      CSharp: public override bool IsActive { get; }
    parameters:
    - id: IsActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.IsActive
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.BranchTaken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: BranchTaken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.BranchTaken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65158
  syntax:
    content:
      CSharp: public override bool BranchTaken { get; }
    parameters:
    - id: BranchTaken
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.BranchTaken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65175
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65180
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, SyntaxToken, bool, bool)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, bool, bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65185
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax Update(SyntaxToken hashToken, SyntaxToken elseKeyword, SyntaxToken endOfDirectiveToken, bool isActive, bool branchTaken)
    parameters:
    - id: hashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: elseKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: endOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: isActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    - id: branchTaken
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: WithHashToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65199
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax WithHashToken(SyntaxToken hashToken)
    parameters:
    - id: hashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: WithElseKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65204
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax WithElseKeyword(SyntaxToken elseKeyword)
    parameters:
    - id: elseKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: WithEndOfDirectiveToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65209
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax WithEndOfDirectiveToken(SyntaxToken endOfDirectiveToken)
    parameters:
    - id: endOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithIsActive(System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: WithIsActive(bool)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithIsActive(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65214
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax WithIsActive(bool isActive)
    parameters:
    - id: isActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithIsActive(System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.yml
  name: WithBranchTaken(bool)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithBranchTaken(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65219
  syntax:
    content:
      CSharp: public ElseDirectiveTriviaSyntax WithBranchTaken(bool branchTaken)
    parameters:
    - id: branchTaken
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: ElseDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)
