items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: ForStatementSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54700
  syntax:
    content:
      CSharp: public sealed partial class ForStatementSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
    name: StatementSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.ForKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.OpenParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Declaration
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Initializers
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.FirstSemicolonToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Condition
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.SecondSemicolonToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Incrementors
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.CloseParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Statement
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithFirstSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithSecondSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithIncrementors(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddInitializers(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  - Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddIncrementors(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.ForKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: ForKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.ForKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54713
  syntax:
    content:
      CSharp: public SyntaxToken ForKeyword { get; }
    parameters:
    - id: ForKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.ForKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.OpenParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: OpenParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.OpenParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54718
  syntax:
    content:
      CSharp: public SyntaxToken OpenParenToken { get; }
    parameters:
    - id: OpenParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.OpenParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Declaration
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Declaration
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Declaration
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54723
  syntax:
    content:
      CSharp: public VariableDeclarationSyntax Declaration { get; }
    parameters:
    - id: Declaration
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
        name: VariableDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Declaration
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Initializers
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Initializers
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Initializers
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54731
  syntax:
    content:
      CSharp: public SeparatedSyntaxList<ExpressionSyntax> Initializers { get; }
    parameters:
    - id: Initializers
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Initializers
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.FirstSemicolonToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: FirstSemicolonToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.FirstSemicolonToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54743
  syntax:
    content:
      CSharp: public SyntaxToken FirstSemicolonToken { get; }
    parameters:
    - id: FirstSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.FirstSemicolonToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Condition
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Condition
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Condition
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54748
  syntax:
    content:
      CSharp: public ExpressionSyntax Condition { get; }
    parameters:
    - id: Condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Condition
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.SecondSemicolonToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: SecondSemicolonToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.SecondSemicolonToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54756
  syntax:
    content:
      CSharp: public SyntaxToken SecondSemicolonToken { get; }
    parameters:
    - id: SecondSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.SecondSemicolonToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Incrementors
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Incrementors
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Incrementors
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54761
  syntax:
    content:
      CSharp: public SeparatedSyntaxList<ExpressionSyntax> Incrementors { get; }
    parameters:
    - id: Incrementors
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Incrementors
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.CloseParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: CloseParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.CloseParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54773
  syntax:
    content:
      CSharp: public SyntaxToken CloseParenToken { get; }
    parameters:
    - id: CloseParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.CloseParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Statement
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Statement
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Statement
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54778
  syntax:
    content:
      CSharp: public StatementSyntax Statement { get; }
    parameters:
    - id: Statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Statement
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54811
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54816
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, VariableDeclarationSyntax, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, ExpressionSyntax, SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken, StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54821
  syntax:
    content:
      CSharp: public ForStatementSyntax Update(SyntaxToken forKeyword, SyntaxToken openParenToken, VariableDeclarationSyntax declaration, SeparatedSyntaxList<ExpressionSyntax> initializers, SyntaxToken firstSemicolonToken, ExpressionSyntax condition, SyntaxToken secondSemicolonToken, SeparatedSyntaxList<ExpressionSyntax> incrementors, SyntaxToken closeParenToken, StatementSyntax statement)
    parameters:
    - id: forKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
        name: VariableDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.yml
    - id: initializers
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    - id: firstSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: secondSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: incrementors
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithForKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54835
  syntax:
    content:
      CSharp: public ForStatementSyntax WithForKeyword(SyntaxToken forKeyword)
    parameters:
    - id: forKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithOpenParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54840
  syntax:
    content:
      CSharp: public ForStatementSyntax WithOpenParenToken(SyntaxToken openParenToken)
    parameters:
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithDeclaration(VariableDeclarationSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54845
  syntax:
    content:
      CSharp: public ForStatementSyntax WithDeclaration(VariableDeclarationSyntax declaration)
    parameters:
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax
        name: VariableDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.yml
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithInitializers(SeparatedSyntaxList<ExpressionSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54850
  syntax:
    content:
      CSharp: public ForStatementSyntax WithInitializers(SeparatedSyntaxList<ExpressionSyntax> initializers)
    parameters:
    - id: initializers
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithFirstSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithFirstSemicolonToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithFirstSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54855
  syntax:
    content:
      CSharp: public ForStatementSyntax WithFirstSemicolonToken(SyntaxToken firstSemicolonToken)
    parameters:
    - id: firstSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithFirstSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithCondition(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54860
  syntax:
    content:
      CSharp: public ForStatementSyntax WithCondition(ExpressionSyntax condition)
    parameters:
    - id: condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithSecondSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithSecondSemicolonToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithSecondSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54865
  syntax:
    content:
      CSharp: public ForStatementSyntax WithSecondSemicolonToken(SyntaxToken secondSemicolonToken)
    parameters:
    - id: secondSemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithSecondSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithIncrementors(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithIncrementors(SeparatedSyntaxList<ExpressionSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithIncrementors(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54870
  syntax:
    content:
      CSharp: public ForStatementSyntax WithIncrementors(SeparatedSyntaxList<ExpressionSyntax> incrementors)
    parameters:
    - id: incrementors
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithIncrementors(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithCloseParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54875
  syntax:
    content:
      CSharp: public ForStatementSyntax WithCloseParenToken(SyntaxToken closeParenToken)
    parameters:
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: WithStatement(StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54880
  syntax:
    content:
      CSharp: public ForStatementSyntax WithStatement(StatementSyntax statement)
    parameters:
    - id: statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddInitializers(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: AddInitializers(params ExpressionSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddInitializers(params Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54885
  syntax:
    content:
      CSharp: public ForStatementSyntax AddInitializers(params ExpressionSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddInitializers(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddIncrementors(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.yml
  name: AddIncrementors(params ExpressionSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddIncrementors(params Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 54890
  syntax:
    content:
      CSharp: public ForStatementSyntax AddIncrementors(params ExpressionSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: ForStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddIncrementors(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
