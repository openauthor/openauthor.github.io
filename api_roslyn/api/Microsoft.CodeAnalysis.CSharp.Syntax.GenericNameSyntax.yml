items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: GenericNameSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47133
  summary: Class which represents the syntax node for generic name.
  syntax:
    content:
      CSharp: public partial class GenericNameSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
    name: TypeSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
    name: NameSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
    name: SimpleNameSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.IsUnboundGenericName
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.IsUnboundGenericName
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: IsUnboundGenericName
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.IsUnboundGenericName
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/GenericNameSyntax.cs
    startLine: 10
  syntax:
    content:
      CSharp: public bool IsUnboundGenericName { get; }
    parameters:
    - id: IsUnboundGenericName
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.IsUnboundGenericName
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: Identifier
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47143
  summary: SyntaxToken representing the name of the identifier of the generic name.
  syntax:
    content:
      CSharp: public override SyntaxToken Identifier { get; }
    parameters:
    - id: Identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: TypeArgumentList
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47149
  summary: TypeArgumentListSyntax node representing the list of type arguments of the generic name.
  syntax:
    content:
      CSharp: public TypeArgumentListSyntax TypeArgumentList { get; }
    parameters:
    - id: TypeArgumentList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
        name: TypeArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47174
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47179
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: Update(SyntaxToken, TypeArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47184
  syntax:
    content:
      CSharp: public GenericNameSyntax Update(SyntaxToken identifier, TypeArgumentListSyntax typeArgumentList)
    parameters:
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: typeArgumentList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
        name: TypeArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.yml
    return:
      id: GenericNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: WithIdentifier(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47198
  syntax:
    content:
      CSharp: public GenericNameSyntax WithIdentifier(SyntaxToken identifier)
    parameters:
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: GenericNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: WithTypeArgumentList(TypeArgumentListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47203
  syntax:
    content:
      CSharp: public GenericNameSyntax WithTypeArgumentList(TypeArgumentListSyntax typeArgumentList)
    parameters:
    - id: typeArgumentList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax
        name: TypeArgumentListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.yml
    return:
      id: GenericNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.yml
  name: AddTypeArgumentListArguments(params TypeSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(params Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47208
  syntax:
    content:
      CSharp: public GenericNameSyntax AddTypeArgumentListArguments(params TypeSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: GenericNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])
