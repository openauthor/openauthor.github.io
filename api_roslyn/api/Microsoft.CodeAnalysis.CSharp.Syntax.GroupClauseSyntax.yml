items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: GroupClauseSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52541
  syntax:
    content:
      CSharp: public sealed partial class GroupClauseSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax
    name: SelectOrGroupClauseSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupExpression
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByExpression
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: GroupKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52551
  syntax:
    content:
      CSharp: public SyntaxToken GroupKeyword { get; }
    parameters:
    - id: GroupKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupExpression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: GroupExpression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupExpression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52556
  syntax:
    content:
      CSharp: public ExpressionSyntax GroupExpression { get; }
    parameters:
    - id: GroupExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupExpression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: ByKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52564
  syntax:
    content:
      CSharp: public SyntaxToken ByKeyword { get; }
    parameters:
    - id: ByKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByExpression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: ByExpression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByExpression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52569
  syntax:
    content:
      CSharp: public ExpressionSyntax ByExpression { get; }
    parameters:
    - id: ByExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByExpression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52596
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52601
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: Update(SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52606
  syntax:
    content:
      CSharp: public GroupClauseSyntax Update(SyntaxToken groupKeyword, ExpressionSyntax groupExpression, SyntaxToken byKeyword, ExpressionSyntax byExpression)
    parameters:
    - id: groupKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: groupExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: byKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: byExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: GroupClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: WithGroupKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52620
  syntax:
    content:
      CSharp: public GroupClauseSyntax WithGroupKeyword(SyntaxToken groupKeyword)
    parameters:
    - id: groupKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: GroupClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: WithGroupExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52625
  syntax:
    content:
      CSharp: public GroupClauseSyntax WithGroupExpression(ExpressionSyntax groupExpression)
    parameters:
    - id: groupExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: GroupClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: WithByKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52630
  syntax:
    content:
      CSharp: public GroupClauseSyntax WithByKeyword(SyntaxToken byKeyword)
    parameters:
    - id: byKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: GroupClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.yml
  name: WithByExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52635
  syntax:
    content:
      CSharp: public GroupClauseSyntax WithByExpression(ExpressionSyntax byExpression)
    parameters:
    - id: byExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: GroupClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
