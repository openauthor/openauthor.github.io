items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: IfStatementSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55555
  summary: Represents an if statement syntax.
  syntax:
    content:
      CSharp: public sealed partial class IfStatementSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
    name: StatementSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithElse(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: IfKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55569
  summary: Gets a SyntaxToken that represents the if keyword.
  syntax:
    content:
      CSharp: public SyntaxToken IfKeyword { get; }
    parameters:
    - id: IfKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: OpenParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55577
  summary: Gets a SyntaxToken that represents the open parenthesis before the if statement's condition expression.
  syntax:
    content:
      CSharp: public SyntaxToken OpenParenToken { get; }
    parameters:
    - id: OpenParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Condition
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55585
  summary: Gets an ExpressionSyntax that represents the condition of the if statement.
  syntax:
    content:
      CSharp: public ExpressionSyntax Condition { get; }
    parameters:
    - id: Condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: CloseParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55596
  summary: Gets a SyntaxToken that represents the close parenthesis after the if statement's condition expression.
  syntax:
    content:
      CSharp: public SyntaxToken CloseParenToken { get; }
    parameters:
    - id: CloseParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Statement
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55604
  summary: Gets a StatementSyntax the represents the statement to be executed when the condition is true.
  syntax:
    content:
      CSharp: public StatementSyntax Statement { get; }
    parameters:
    - id: Statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Else
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55615
  summary: Gets an ElseClauseSyntax that represents the statement to be executed when the condition is false if such statement exists.
  syntax:
    content:
      CSharp: public ElseClauseSyntax Else { get; }
    parameters:
    - id: Else
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax
        name: ElseClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55644
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55649
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, StatementSyntax, ElseClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55654
  syntax:
    content:
      CSharp: public IfStatementSyntax Update(SyntaxToken ifKeyword, SyntaxToken openParenToken, ExpressionSyntax condition, SyntaxToken closeParenToken, StatementSyntax statement, ElseClauseSyntax @else)
    parameters:
    - id: ifKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
    - id: else
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax
        name: ElseClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.yml
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithIfKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55668
  syntax:
    content:
      CSharp: public IfStatementSyntax WithIfKeyword(SyntaxToken ifKeyword)
    parameters:
    - id: ifKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithOpenParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55673
  syntax:
    content:
      CSharp: public IfStatementSyntax WithOpenParenToken(SyntaxToken openParenToken)
    parameters:
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithCondition(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55678
  syntax:
    content:
      CSharp: public IfStatementSyntax WithCondition(ExpressionSyntax condition)
    parameters:
    - id: condition
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithCloseParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55683
  syntax:
    content:
      CSharp: public IfStatementSyntax WithCloseParenToken(SyntaxToken closeParenToken)
    parameters:
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithStatement(StatementSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55688
  syntax:
    content:
      CSharp: public IfStatementSyntax WithStatement(StatementSyntax statement)
    parameters:
    - id: statement
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax
        name: StatementSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax.yml
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithElse(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.yml
  name: WithElse(ElseClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithElse(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 55693
  syntax:
    content:
      CSharp: public IfStatementSyntax WithElse(ElseClauseSyntax @else)
    parameters:
    - id: else
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax
        name: ElseClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.yml
    return:
      id: IfStatementSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithElse(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)
