items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: InitializerExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50868
  summary: Class which represents the syntax node for initializer expression.
  syntax:
    content:
      CSharp: public sealed partial class InitializerExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.AddExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: OpenBraceToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50878
  summary: SyntaxToken representing the open brace.
  syntax:
    content:
      CSharp: public SyntaxToken OpenBraceToken { get; }
    parameters:
    - id: OpenBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: Expressions
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50884
  summary: SeparatedSyntaxList of ExpressionSyntax representing the list of expressions in the initializer expression.
  syntax:
    content:
      CSharp: public SeparatedSyntaxList<ExpressionSyntax> Expressions { get; }
    parameters:
    - id: Expressions
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: CloseBraceToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50897
  summary: SyntaxToken representing the close brace.
  syntax:
    content:
      CSharp: public SyntaxToken CloseBraceToken { get; }
    parameters:
    - id: CloseBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50919
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50924
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: Update(SyntaxToken, SeparatedSyntaxList<ExpressionSyntax>, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50929
  syntax:
    content:
      CSharp: public InitializerExpressionSyntax Update(SyntaxToken openBraceToken, SeparatedSyntaxList<ExpressionSyntax> expressions, SyntaxToken closeBraceToken)
    parameters:
    - id: openBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: expressions
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    - id: closeBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: InitializerExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: WithOpenBraceToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50943
  syntax:
    content:
      CSharp: public InitializerExpressionSyntax WithOpenBraceToken(SyntaxToken openBraceToken)
    parameters:
    - id: openBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: InitializerExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: WithExpressions(SeparatedSyntaxList<ExpressionSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50948
  syntax:
    content:
      CSharp: public InitializerExpressionSyntax WithExpressions(SeparatedSyntaxList<ExpressionSyntax> expressions)
    parameters:
    - id: expressions
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax}
    return:
      id: InitializerExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: WithCloseBraceToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50953
  syntax:
    content:
      CSharp: public InitializerExpressionSyntax WithCloseBraceToken(SyntaxToken closeBraceToken)
    parameters:
    - id: closeBraceToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: InitializerExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.AddExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.yml
  name: AddExpressions(params ExpressionSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.AddExpressions(params Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50958
  syntax:
    content:
      CSharp: public InitializerExpressionSyntax AddExpressions(params ExpressionSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: InitializerExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.AddExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])
