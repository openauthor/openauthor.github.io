items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: InterpolationAlignmentClauseSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53064
  syntax:
    content:
      CSharp: public sealed partial class InterpolationAlignmentClauseSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.CommaToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Value
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.CommaToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: CommaToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.CommaToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53073
  syntax:
    content:
      CSharp: public SyntaxToken CommaToken { get; }
    parameters:
    - id: CommaToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.CommaToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Value
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: Value
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Value
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53078
  syntax:
    content:
      CSharp: public ExpressionSyntax Value { get; }
    parameters:
    - id: Value
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Value
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53103
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53108
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: Update(SyntaxToken, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53113
  syntax:
    content:
      CSharp: public InterpolationAlignmentClauseSyntax Update(SyntaxToken commaToken, ExpressionSyntax value)
    parameters:
    - id: commaToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: value
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: InterpolationAlignmentClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: WithCommaToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53127
  syntax:
    content:
      CSharp: public InterpolationAlignmentClauseSyntax WithCommaToken(SyntaxToken commaToken)
    parameters:
    - id: commaToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: InterpolationAlignmentClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.yml
  name: WithValue(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 53132
  syntax:
    content:
      CSharp: public InterpolationAlignmentClauseSyntax WithValue(ExpressionSyntax value)
    parameters:
    - id: value
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: InterpolationAlignmentClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
