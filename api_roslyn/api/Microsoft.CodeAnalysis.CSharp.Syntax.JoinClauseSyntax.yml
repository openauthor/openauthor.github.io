items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: JoinClauseSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51982
  syntax:
    content:
      CSharp: public sealed partial class JoinClauseSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax
    name: QueryClauseSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.JoinKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Type
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InExpression
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.OnKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.LeftExpression
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.EqualsKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.RightExpression
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Into
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithLeftExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithRightExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInto(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.JoinKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: JoinKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.JoinKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51995
  syntax:
    content:
      CSharp: public SyntaxToken JoinKeyword { get; }
    parameters:
    - id: JoinKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.JoinKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Type
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Type
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Type
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52000
  syntax:
    content:
      CSharp: public TypeSyntax Type { get; }
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Type
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Identifier
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52009
  summary: Gets the identifier.
  syntax:
    content:
      CSharp: public SyntaxToken Identifier { get; }
    parameters:
    - id: Identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: InKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52014
  syntax:
    content:
      CSharp: public SyntaxToken InKeyword { get; }
    parameters:
    - id: InKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InExpression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: InExpression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InExpression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52019
  syntax:
    content:
      CSharp: public ExpressionSyntax InExpression { get; }
    parameters:
    - id: InExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InExpression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.OnKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: OnKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.OnKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52027
  syntax:
    content:
      CSharp: public SyntaxToken OnKeyword { get; }
    parameters:
    - id: OnKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.OnKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.LeftExpression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: LeftExpression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.LeftExpression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52032
  syntax:
    content:
      CSharp: public ExpressionSyntax LeftExpression { get; }
    parameters:
    - id: LeftExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.LeftExpression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.EqualsKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: EqualsKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.EqualsKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52040
  syntax:
    content:
      CSharp: public SyntaxToken EqualsKeyword { get; }
    parameters:
    - id: EqualsKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.EqualsKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.RightExpression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: RightExpression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.RightExpression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52045
  syntax:
    content:
      CSharp: public ExpressionSyntax RightExpression { get; }
    parameters:
    - id: RightExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.RightExpression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Into
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Into
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Into
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52053
  syntax:
    content:
      CSharp: public JoinIntoClauseSyntax Into { get; }
    parameters:
    - id: Into
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax
        name: JoinIntoClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Into
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52086
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52091
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: Update(SyntaxToken, TypeSyntax, SyntaxToken, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, SyntaxToken, ExpressionSyntax, JoinIntoClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52096
  syntax:
    content:
      CSharp: public JoinClauseSyntax Update(SyntaxToken joinKeyword, TypeSyntax type, SyntaxToken identifier, SyntaxToken inKeyword, ExpressionSyntax inExpression, SyntaxToken onKeyword, ExpressionSyntax leftExpression, SyntaxToken equalsKeyword, ExpressionSyntax rightExpression, JoinIntoClauseSyntax into)
    parameters:
    - id: joinKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: inKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: inExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: onKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: leftExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: equalsKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: rightExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    - id: into
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax
        name: JoinIntoClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithJoinKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52110
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithJoinKeyword(SyntaxToken joinKeyword)
    parameters:
    - id: joinKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithType(TypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52115
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithType(TypeSyntax type)
    parameters:
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithIdentifier(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52120
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithIdentifier(SyntaxToken identifier)
    parameters:
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithInKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52125
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithInKeyword(SyntaxToken inKeyword)
    parameters:
    - id: inKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithInExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52130
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithInExpression(ExpressionSyntax inExpression)
    parameters:
    - id: inExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithOnKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52135
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithOnKeyword(SyntaxToken onKeyword)
    parameters:
    - id: onKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithLeftExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithLeftExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithLeftExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52140
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithLeftExpression(ExpressionSyntax leftExpression)
    parameters:
    - id: leftExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithLeftExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithEqualsKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52145
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithEqualsKeyword(SyntaxToken equalsKeyword)
    parameters:
    - id: equalsKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithRightExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithRightExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithRightExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52150
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithRightExpression(ExpressionSyntax rightExpression)
    parameters:
    - id: rightExpression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithRightExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInto(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.yml
  name: WithInto(JoinIntoClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInto(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 52155
  syntax:
    content:
      CSharp: public JoinClauseSyntax WithInto(JoinIntoClauseSyntax into)
    parameters:
    - id: into
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax
        name: JoinIntoClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.yml
    return:
      id: JoinClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInto(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)
