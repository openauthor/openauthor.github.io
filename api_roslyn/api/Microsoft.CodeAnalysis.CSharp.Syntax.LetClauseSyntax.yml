items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: LetClauseSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51887
  syntax:
    content:
      CSharp: public sealed partial class LetClauseSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax
    name: QueryClauseSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.LetKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.EqualsToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Expression
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.LetKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: LetKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.LetKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51896
  syntax:
    content:
      CSharp: public SyntaxToken LetKeyword { get; }
    parameters:
    - id: LetKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.LetKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: Identifier
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51902
  summary: Gets the identifier.
  syntax:
    content:
      CSharp: public SyntaxToken Identifier { get; }
    parameters:
    - id: Identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.EqualsToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: EqualsToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.EqualsToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51907
  syntax:
    content:
      CSharp: public SyntaxToken EqualsToken { get; }
    parameters:
    - id: EqualsToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.EqualsToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Expression
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: Expression
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Expression
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51912
  syntax:
    content:
      CSharp: public ExpressionSyntax Expression { get; }
    parameters:
    - id: Expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Expression
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51937
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51942
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, SyntaxToken, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51947
  syntax:
    content:
      CSharp: public LetClauseSyntax Update(SyntaxToken letKeyword, SyntaxToken identifier, SyntaxToken equalsToken, ExpressionSyntax expression)
    parameters:
    - id: letKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: equalsToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: LetClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: WithLetKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51961
  syntax:
    content:
      CSharp: public LetClauseSyntax WithLetKeyword(SyntaxToken letKeyword)
    parameters:
    - id: letKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: LetClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: WithIdentifier(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51966
  syntax:
    content:
      CSharp: public LetClauseSyntax WithIdentifier(SyntaxToken identifier)
    parameters:
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: LetClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: WithEqualsToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51971
  syntax:
    content:
      CSharp: public LetClauseSyntax WithEqualsToken(SyntaxToken equalsToken)
    parameters:
    - id: equalsToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: LetClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.yml
  name: WithExpression(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51976
  syntax:
    content:
      CSharp: public LetClauseSyntax WithExpression(ExpressionSyntax expression)
    parameters:
    - id: expression
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: LetClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
