items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: PrefixUnaryExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47965
  summary: Class which represents the syntax node for prefix unary expression.
  syntax:
    content:
      CSharp: public sealed partial class PrefixUnaryExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: OperatorToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47975
  summary: SyntaxToken representing the kind of the operator of the prefix unary expression.
  syntax:
    content:
      CSharp: public SyntaxToken OperatorToken { get; }
    parameters:
    - id: OperatorToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: Operand
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47981
  summary: ExpressionSyntax representing the operand of the prefix unary expression.
  syntax:
    content:
      CSharp: public ExpressionSyntax Operand { get; }
    parameters:
    - id: Operand
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 48006
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 48011
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: Update(SyntaxToken, ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 48016
  syntax:
    content:
      CSharp: public PrefixUnaryExpressionSyntax Update(SyntaxToken operatorToken, ExpressionSyntax operand)
    parameters:
    - id: operatorToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: operand
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: PrefixUnaryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: WithOperatorToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 48030
  syntax:
    content:
      CSharp: public PrefixUnaryExpressionSyntax WithOperatorToken(SyntaxToken operatorToken)
    parameters:
    - id: operatorToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: PrefixUnaryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.yml
  name: WithOperand(ExpressionSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 48035
  syntax:
    content:
      CSharp: public PrefixUnaryExpressionSyntax WithOperand(ExpressionSyntax operand)
    parameters:
    - id: operand
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
        name: ExpressionSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
    return:
      id: PrefixUnaryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)
