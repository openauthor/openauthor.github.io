items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: QualifiedNameSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47039
  summary: Class which represents the syntax node for qualified name.
  syntax:
    content:
      CSharp: public sealed partial class QualifiedNameSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
    name: TypeSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
    name: NameSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: Left
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47050
  summary: NameSyntax node representing the name on the left side of the dot token of the qualified name.
  syntax:
    content:
      CSharp: public NameSyntax Left { get; }
    parameters:
    - id: Left
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: DotToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47059
  summary: SyntaxToken representing the dot.
  syntax:
    content:
      CSharp: public SyntaxToken DotToken { get; }
    parameters:
    - id: DotToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: Right
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47065
  summary: SimpleNameSyntax node representing the name on the right side of the dot token of the qualified name.
  syntax:
    content:
      CSharp: public SimpleNameSyntax Right { get; }
    parameters:
    - id: Right
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
        name: SimpleNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47092
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47097
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: Update(NameSyntax, SyntaxToken, SimpleNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47102
  syntax:
    content:
      CSharp: public QualifiedNameSyntax Update(NameSyntax left, SyntaxToken dotToken, SimpleNameSyntax right)
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
    - id: dotToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: right
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
        name: SimpleNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
    return:
      id: QualifiedNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: WithLeft(NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47116
  syntax:
    content:
      CSharp: public QualifiedNameSyntax WithLeft(NameSyntax left)
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
    return:
      id: QualifiedNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: WithDotToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47121
  syntax:
    content:
      CSharp: public QualifiedNameSyntax WithDotToken(SyntaxToken dotToken)
    parameters:
    - id: dotToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: QualifiedNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.yml
  name: WithRight(SimpleNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 47126
  syntax:
    content:
      CSharp: public QualifiedNameSyntax WithRight(SimpleNameSyntax right)
    parameters:
    - id: right
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
        name: SimpleNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
    return:
      id: QualifiedNameSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)
