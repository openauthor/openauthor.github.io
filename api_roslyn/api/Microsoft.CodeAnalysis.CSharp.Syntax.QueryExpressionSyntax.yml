items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: QueryExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51590
  syntax:
    content:
      CSharp: public sealed partial class QueryExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.FromClause
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Body
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.AddBodyClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.FromClause
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: FromClause
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.FromClause
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51600
  syntax:
    content:
      CSharp: public FromClauseSyntax FromClause { get; }
    parameters:
    - id: FromClause
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax
        name: FromClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.FromClause
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Body
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: Body
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Body
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51608
  syntax:
    content:
      CSharp: public QueryBodySyntax Body { get; }
    parameters:
    - id: Body
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax
        name: QueryBodySyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Body
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51635
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51640
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: Update(FromClauseSyntax, QueryBodySyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51645
  syntax:
    content:
      CSharp: public QueryExpressionSyntax Update(FromClauseSyntax fromClause, QueryBodySyntax body)
    parameters:
    - id: fromClause
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax
        name: FromClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.yml
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax
        name: QueryBodySyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.yml
    return:
      id: QueryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: WithFromClause(FromClauseSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51659
  syntax:
    content:
      CSharp: public QueryExpressionSyntax WithFromClause(FromClauseSyntax fromClause)
    parameters:
    - id: fromClause
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax
        name: FromClauseSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.yml
    return:
      id: QueryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: WithBody(QueryBodySyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51664
  syntax:
    content:
      CSharp: public QueryExpressionSyntax WithBody(QueryBodySyntax body)
    parameters:
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax
        name: QueryBodySyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.yml
    return:
      id: QueryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.AddBodyClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.yml
  name: AddBodyClauses(params QueryClauseSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.AddBodyClauses(params Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 51669
  syntax:
    content:
      CSharp: public QueryExpressionSyntax AddBodyClauses(params QueryClauseSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: QueryExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.AddBodyClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])
