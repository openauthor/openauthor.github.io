items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: RegionDirectiveTriviaSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65309
  syntax:
    content:
      CSharp: public sealed partial class RegionDirectiveTriviaSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax
    name: StructuredTriviaSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax
    name: DirectiveTriviaSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.HashToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.EndOfDirectiveToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.IsActive
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithIsActive(System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.HashToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: HashToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.HashToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65316
  syntax:
    content:
      CSharp: public override SyntaxToken HashToken { get; }
    parameters:
    - id: HashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.HashToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: RegionKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65321
  syntax:
    content:
      CSharp: public SyntaxToken RegionKeyword { get; }
    parameters:
    - id: RegionKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.EndOfDirectiveToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: EndOfDirectiveToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.EndOfDirectiveToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65326
  syntax:
    content:
      CSharp: public override SyntaxToken EndOfDirectiveToken { get; }
    parameters:
    - id: EndOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.EndOfDirectiveToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.IsActive
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: IsActive
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.IsActive
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65331
  syntax:
    content:
      CSharp: public override bool IsActive { get; }
    parameters:
    - id: IsActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.IsActive
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65348
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65353
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, SyntaxToken, bool)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65358
  syntax:
    content:
      CSharp: public RegionDirectiveTriviaSyntax Update(SyntaxToken hashToken, SyntaxToken regionKeyword, SyntaxToken endOfDirectiveToken, bool isActive)
    parameters:
    - id: hashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: regionKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: endOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: isActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: RegionDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: WithHashToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65372
  syntax:
    content:
      CSharp: public RegionDirectiveTriviaSyntax WithHashToken(SyntaxToken hashToken)
    parameters:
    - id: hashToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: RegionDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: WithRegionKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65377
  syntax:
    content:
      CSharp: public RegionDirectiveTriviaSyntax WithRegionKeyword(SyntaxToken regionKeyword)
    parameters:
    - id: regionKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: RegionDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: WithEndOfDirectiveToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65382
  syntax:
    content:
      CSharp: public RegionDirectiveTriviaSyntax WithEndOfDirectiveToken(SyntaxToken endOfDirectiveToken)
    parameters:
    - id: endOfDirectiveToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: RegionDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithIsActive(System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.yml
  name: WithIsActive(bool)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithIsActive(bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 65387
  syntax:
    content:
      CSharp: public RegionDirectiveTriviaSyntax WithIsActive(bool isActive)
    parameters:
    - id: isActive
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: RegionDirectiveTriviaSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithIsActive(System.Boolean)
