items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: SimpleLambdaExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50629
  summary: Class which represents the syntax node for a simple lambda expression.
  syntax:
    content:
      CSharp: public sealed partial class SimpleLambdaExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax
    name: AnonymousFunctionExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax
    name: LambdaExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Body
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])
  - Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterModifiers(Microsoft.CodeAnalysis.SyntaxToken[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: AsyncKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50640
  summary: Gets the "async" token.
  syntax:
    content:
      CSharp: public override SyntaxToken AsyncKeyword { get; }
    parameters:
    - id: AsyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: Parameter
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50653
  summary: ParameterSyntax node representing the parameter of the lambda expression.
  syntax:
    content:
      CSharp: public ParameterSyntax Parameter { get; }
    parameters:
    - id: Parameter
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
        name: ParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: ArrowToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50662
  summary: SyntaxToken representing equals greater than.
  syntax:
    content:
      CSharp: public override SyntaxToken ArrowToken { get; }
    parameters:
    - id: ArrowToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Body
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: Body
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Body
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50668
  summary: SyntaxNode representing the body of the lambda expression.
  syntax:
    content:
      CSharp: public override CSharpSyntaxNode Body { get; }
    parameters:
    - id: Body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Body
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50695
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50700
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: Update(SyntaxToken, ParameterSyntax, SyntaxToken, CSharpSyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50705
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax Update(SyntaxToken asyncKeyword, ParameterSyntax parameter, SyntaxToken arrowToken, CSharpSyntaxNode body)
    parameters:
    - id: asyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: parameter
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
        name: ParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.yml
    - id: arrowToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: WithAsyncKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50719
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax WithAsyncKeyword(SyntaxToken asyncKeyword)
    parameters:
    - id: asyncKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: WithParameter(ParameterSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50724
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax WithParameter(ParameterSyntax parameter)
    parameters:
    - id: parameter
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax
        name: ParameterSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.yml
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: WithArrowToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50729
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax WithArrowToken(SyntaxToken arrowToken)
    parameters:
    - id: arrowToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: WithBody(CSharpSyntaxNode)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50734
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax WithBody(CSharpSyntaxNode body)
    parameters:
    - id: body
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
        name: CSharpSyntaxNode
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: AddParameterAttributeLists(params AttributeListSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterAttributeLists(params Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50739
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax AddParameterAttributeLists(params AttributeListSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterModifiers(Microsoft.CodeAnalysis.SyntaxToken[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.yml
  name: AddParameterModifiers(params SyntaxToken[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterModifiers(params Microsoft.CodeAnalysis.SyntaxToken[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 50744
  syntax:
    content:
      CSharp: public SimpleLambdaExpressionSyntax AddParameterModifiers(params SyntaxToken[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: SimpleLambdaExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterModifiers(Microsoft.CodeAnalysis.SyntaxToken[])
