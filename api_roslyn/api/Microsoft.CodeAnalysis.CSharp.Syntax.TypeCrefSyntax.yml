items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: TypeCrefSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62759
  summary: >-
    A symbol reference that definitely refers to a type.

    For example, "int", "A::B", "A.B", "A<T>", but not "M()" (has parameter list) or "this" (indexer).

    NOTE: TypeCrefSyntax, QualifiedCrefSyntax, and MemberCrefSyntax overlap.  The syntax in a TypeCrefSyntax

    will always be bound as type, so it's safer to use QualifiedCrefSyntax or MemberCrefSyntax if the symbol

    might be a non-type member.
  syntax:
    content:
      CSharp: public sealed partial class TypeCrefSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax
    name: CrefSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Type
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Type
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: Type
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Type
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62768
  syntax:
    content:
      CSharp: public TypeSyntax Type { get; }
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Type
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62793
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62798
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: Update(TypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62803
  syntax:
    content:
      CSharp: public TypeCrefSyntax Update(TypeSyntax type)
    parameters:
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    return:
      id: TypeCrefSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.yml
  name: WithType(TypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 62817
  syntax:
    content:
      CSharp: public TypeCrefSyntax WithType(TypeSyntax type)
    parameters:
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    return:
      id: TypeCrefSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
