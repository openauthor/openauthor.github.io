items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: TypeOfExpressionSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49621
  summary: Class which represents the syntax node for TypeOf expression.
  syntax:
    content:
      CSharp: public sealed partial class TypeOfExpressionSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  - id: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax
    name: ExpressionSyntax
    href: Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: Keyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49631
  summary: SyntaxToken representing the TypeOfKeyword.
  syntax:
    content:
      CSharp: public SyntaxToken Keyword { get; }
    parameters:
    - id: Keyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: OpenParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49637
  summary: SyntaxToken representing open parenthesis.
  syntax:
    content:
      CSharp: public SyntaxToken OpenParenToken { get; }
    parameters:
    - id: OpenParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: Type
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49643
  summary: The expression to return type of.
  syntax:
    content:
      CSharp: public TypeSyntax Type { get; }
    parameters:
    - id: Type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: CloseParenToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49652
  summary: SyntaxToken representing close parenthesis.
  syntax:
    content:
      CSharp: public SyntaxToken CloseParenToken { get; }
    parameters:
    - id: CloseParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49674
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49679
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, TypeSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49684
  syntax:
    content:
      CSharp: public TypeOfExpressionSyntax Update(SyntaxToken keyword, SyntaxToken openParenToken, TypeSyntax type, SyntaxToken closeParenToken)
    parameters:
    - id: keyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeOfExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: WithKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49698
  syntax:
    content:
      CSharp: public TypeOfExpressionSyntax WithKeyword(SyntaxToken keyword)
    parameters:
    - id: keyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeOfExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: WithOpenParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49703
  syntax:
    content:
      CSharp: public TypeOfExpressionSyntax WithOpenParenToken(SyntaxToken openParenToken)
    parameters:
    - id: openParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeOfExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: WithType(TypeSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49708
  syntax:
    content:
      CSharp: public TypeOfExpressionSyntax WithType(TypeSyntax type)
    parameters:
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    return:
      id: TypeOfExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.yml
  name: WithCloseParenToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 49713
  syntax:
    content:
      CSharp: public TypeOfExpressionSyntax WithCloseParenToken(SyntaxToken closeParenToken)
    parameters:
    - id: closeParenToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeOfExpressionSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)
