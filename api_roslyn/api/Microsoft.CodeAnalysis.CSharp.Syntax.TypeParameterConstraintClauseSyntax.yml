items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: TypeParameterConstraintClauseSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59411
  summary: Type parameter constraint clause.
  syntax:
    content:
      CSharp: public sealed partial class TypeParameterConstraintClauseSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WhereKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
  - Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.AddConstraints(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax[])
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WhereKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: WhereKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WhereKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59421
  syntax:
    content:
      CSharp: public SyntaxToken WhereKeyword { get; }
    parameters:
    - id: WhereKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WhereKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: Name
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59427
  summary: Gets the identifier.
  syntax:
    content:
      CSharp: public IdentifierNameSyntax Name { get; }
    parameters:
    - id: Name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
        name: IdentifierNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: ColonToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59436
  summary: Gets the colon token.
  syntax:
    content:
      CSharp: public SyntaxToken ColonToken { get; }
    parameters:
    - id: ColonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: Constraints
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59442
  summary: Gets the constraints list.
  syntax:
    content:
      CSharp: public SeparatedSyntaxList<TypeParameterConstraintSyntax> Constraints { get; }
    parameters:
    - id: Constraints
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59473
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59478
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: Update(SyntaxToken, IdentifierNameSyntax, SyntaxToken, SeparatedSyntaxList<TypeParameterConstraintSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59483
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax Update(SyntaxToken whereKeyword, IdentifierNameSyntax name, SyntaxToken colonToken, SeparatedSyntaxList<TypeParameterConstraintSyntax> constraints)
    parameters:
    - id: whereKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
        name: IdentifierNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.yml
    - id: colonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: constraints
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: WithWhereKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59497
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax WithWhereKeyword(SyntaxToken whereKeyword)
    parameters:
    - id: whereKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: WithName(IdentifierNameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59502
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax WithName(IdentifierNameSyntax name)
    parameters:
    - id: name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax
        name: IdentifierNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.yml
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: WithColonToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59507
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax WithColonToken(SyntaxToken colonToken)
    parameters:
    - id: colonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: WithConstraints(SeparatedSyntaxList<TypeParameterConstraintSyntax>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList<Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59512
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax WithConstraints(SeparatedSyntaxList<TypeParameterConstraintSyntax> constraints)
    parameters:
    - id: constraints
      type:
        id: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
        name: SeparatedSyntaxList
        href: Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax}
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.AddConstraints(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax[])
  href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.yml
  name: AddConstraints(params TypeParameterConstraintSyntax[])
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.AddConstraints(params Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax[])
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 59517
  syntax:
    content:
      CSharp: public TypeParameterConstraintClauseSyntax AddConstraints(params TypeParameterConstraintSyntax[] items)
    parameters:
    - id: items
      type:
        id: System.Array
        name: System.Array
        isExternal: true
    return:
      id: TypeParameterConstraintClauseSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.AddConstraints(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax[])
