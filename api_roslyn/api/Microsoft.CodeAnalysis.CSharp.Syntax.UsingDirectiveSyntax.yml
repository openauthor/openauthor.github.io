items:
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: UsingDirectiveSyntax
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56946
  syntax:
    content:
      CSharp: public sealed partial class UsingDirectiveSyntax
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: Microsoft.CodeAnalysis.SyntaxNode
    name: SyntaxNode
    href: Microsoft.CodeAnalysis.SyntaxNode
  - id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
    name: CSharpSyntaxNode
    href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax
  children:
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.UsingKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.StaticKeyword
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Alias
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Name
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.SemicolonToken
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithStaticKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  - Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.UsingKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: UsingKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.UsingKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56956
  syntax:
    content:
      CSharp: public SyntaxToken UsingKeyword { get; }
    parameters:
    - id: UsingKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.UsingKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.StaticKeyword
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: StaticKeyword
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.StaticKeyword
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56961
  syntax:
    content:
      CSharp: public SyntaxToken StaticKeyword { get; }
    parameters:
    - id: StaticKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.StaticKeyword
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Alias
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: Alias
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Alias
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56973
  syntax:
    content:
      CSharp: public NameEqualsSyntax Alias { get; }
    parameters:
    - id: Alias
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax
        name: NameEqualsSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Alias
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Name
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: Name
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Name
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56981
  syntax:
    content:
      CSharp: public NameSyntax Name { get; }
    parameters:
    - id: Name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Name
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.SemicolonToken
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: SemicolonToken
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.SemicolonToken
  type: Property
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 56989
  syntax:
    content:
      CSharp: public SyntaxToken SemicolonToken { get; }
    parameters:
    - id: SemicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.SemicolonToken
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: Accept<TResult>(CSharpSyntaxVisitor<TResult>)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept<TResult>(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor<TResult>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57013
  syntax:
    content:
      CSharp: public override TResult Accept<TResult>(CSharpSyntaxVisitor<TResult> visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0}
    return:
      id: TResult
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: Accept(CSharpSyntaxVisitor)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57018
  syntax:
    content:
      CSharp: public override void Accept(CSharpSyntaxVisitor visitor)
    parameters:
    - id: visitor
      type:
        id: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
        name: CSharpSyntaxVisitor
        href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: Update(SyntaxToken, SyntaxToken, NameEqualsSyntax, NameSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57023
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax Update(SyntaxToken usingKeyword, SyntaxToken staticKeyword, NameEqualsSyntax alias, NameSyntax name, SyntaxToken semicolonToken)
    parameters:
    - id: usingKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: staticKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: alias
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax
        name: NameEqualsSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.yml
    - id: name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
    - id: semicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: WithUsingKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57037
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax WithUsingKeyword(SyntaxToken usingKeyword)
    parameters:
    - id: usingKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithStaticKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: WithStaticKeyword(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithStaticKeyword(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57042
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax WithStaticKeyword(SyntaxToken staticKeyword)
    parameters:
    - id: staticKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithStaticKeyword(Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: WithAlias(NameEqualsSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57047
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax WithAlias(NameEqualsSyntax alias)
    parameters:
    - id: alias
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax
        name: NameEqualsSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.yml
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: WithName(NameSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57052
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax WithName(NameSyntax name)
    parameters:
    - id: name
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax
        name: NameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.yml
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.yml
  name: WithSemicolonToken(SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/obj/Debug/Syntax.xml.Generated.cs
    startLine: 57057
  syntax:
    content:
      CSharp: public UsingDirectiveSyntax WithSemicolonToken(SyntaxToken semicolonToken)
    parameters:
    - id: semicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: UsingDirectiveSyntax
  id: Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)
