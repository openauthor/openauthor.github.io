items:
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: SyntaxExtensions
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions
  type: Class
  source:
    remote: &o0
      path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 13
  syntax:
    content:
      CSharp: 'public class SyntaxExtensions : object'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions
  children:
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Boolean)
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.ToSyntaxTriviaList(IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,BracketedParameterListSyntax,AccessorListSyntax)
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{TypeParameterConstraintClauseSyntax},BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: NormalizeWhitespace(SyntaxToken, string, bool)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken, string, bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 65
  summary: >-
    Creates a new syntax token with all whitespace and end of line trivia replaced with

    regularly formatted trivia.
  syntax:
    content:
      CSharp: public static SyntaxToken NormalizeWhitespace(SyntaxToken token, string indentation = null, bool elasticTrivia = false)
    parameters:
    - id: token
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
      description: The token to normalize.
    - id: indentation
      type:
        id: System.String
        name: string
        isExternal: true
      description: >-
        An optional sequence of whitespace characters that defines a

        single level of indentation.
    - id: elasticTrivia
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: If true the replaced trivia is elastic trivia.
    return:
      id: SyntaxToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Boolean)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: NormalizeWhitespace(SyntaxTriviaList, string, bool)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList, string, bool)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 78
  summary: >-
    Creates a new syntax trivia list with all whitespace and end of line trivia replaced with

    regularly formatted trivia.
  syntax:
    content:
      CSharp: public static SyntaxTriviaList NormalizeWhitespace(SyntaxTriviaList list, string indentation = null, bool elasticTrivia = false)
    parameters:
    - id: list
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: Microsoft.CodeAnalysis.SyntaxTriviaList
      description: The trivia list to normalize.
    - id: indentation
      type:
        id: System.String
        name: string
        isExternal: true
      description: >-
        An optional sequence of whitespace characters that defines a

        single level of indentation.
    - id: elasticTrivia
      type:
        id: System.Boolean
        name: bool
        isExternal: true
      description: If true the replaced trivia is elastic trivia.
    return:
      id: SyntaxTriviaList
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: Microsoft.CodeAnalysis.SyntaxTriviaList
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Boolean)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.ToSyntaxTriviaList(IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: ToSyntaxTriviaList(IEnumerable<SyntaxTrivia>)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.ToSyntaxTriviaList(IEnumerable<Microsoft.CodeAnalysis.SyntaxTrivia>)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 83
  syntax:
    content:
      CSharp: public static SyntaxTriviaList ToSyntaxTriviaList(IEnumerable<SyntaxTrivia> sequence)
    parameters:
    - id: sequence
      type:
        id: IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia}
        name: IEnumerable<SyntaxTrivia>
        isExternal: true
    return:
      id: SyntaxTriviaList
      type:
        id: Microsoft.CodeAnalysis.SyntaxTriviaList
        name: SyntaxTriviaList
        href: Microsoft.CodeAnalysis.SyntaxTriviaList
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.ToSyntaxTriviaList(IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: WithIdentifier(SimpleNameSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 145
  summary: >-
    Updates the given SimpleNameSyntax node with the given identifier token.

    This function is a wrapper that calls WithIdentifier on derived syntax nodes.
  syntax:
    content:
      CSharp: public static SimpleNameSyntax WithIdentifier(SimpleNameSyntax simpleName, SyntaxToken identifier)
    parameters:
    - id: simpleName
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
        name: SimpleNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: SimpleNameSyntax
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax
        name: SimpleNameSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.yml
      description: The given simple name updated with the given identifier.
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,BracketedParameterListSyntax,AccessorListSyntax)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: Update(IndexerDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax, Microsoft.CodeAnalysis.SyntaxList<AttributeListSyntax>, Microsoft.CodeAnalysis.SyntaxTokenList, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax, ExplicitInterfaceSpecifierSyntax, Microsoft.CodeAnalysis.SyntaxToken, BracketedParameterListSyntax, AccessorListSyntax)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 199
  syntax:
    content:
      CSharp: public static IndexerDeclarationSyntax Update(IndexerDeclarationSyntax syntax, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, TypeSyntax type, ExplicitInterfaceSpecifierSyntax explicitInterfaceSpecifier, SyntaxToken thisKeyword, BracketedParameterListSyntax parameterList, AccessorListSyntax accessorList)
    parameters:
    - id: syntax
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
        name: IndexerDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.yml
    - id: attributeLists
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
        name: SyntaxList<AttributeListSyntax>
        href: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
    - id: modifiers
      type:
        id: Microsoft.CodeAnalysis.SyntaxTokenList
        name: SyntaxTokenList
        href: Microsoft.CodeAnalysis.SyntaxTokenList
    - id: type
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    - id: explicitInterfaceSpecifier
      type:
        id: ExplicitInterfaceSpecifierSyntax
        name: ExplicitInterfaceSpecifierSyntax
        isExternal: true
    - id: thisKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: parameterList
      type:
        id: BracketedParameterListSyntax
        name: BracketedParameterListSyntax
        isExternal: true
    - id: accessorList
      type:
        id: AccessorListSyntax
        name: AccessorListSyntax
        isExternal: true
    return:
      id: IndexerDeclarationSyntax
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax
        name: IndexerDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,BracketedParameterListSyntax,AccessorListSyntax)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: Update(OperatorDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, SyntaxToken, SyntaxToken, ParameterListSyntax, BlockSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(OperatorDeclarationSyntax, Microsoft.CodeAnalysis.SyntaxList<AttributeListSyntax>, Microsoft.CodeAnalysis.SyntaxTokenList, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax, BlockSyntax, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 221
  syntax:
    content:
      CSharp: public static OperatorDeclarationSyntax Update(OperatorDeclarationSyntax syntax, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, TypeSyntax returnType, SyntaxToken operatorKeyword, SyntaxToken operatorToken, ParameterListSyntax parameterList, BlockSyntax block, SyntaxToken semicolonToken)
    parameters:
    - id: syntax
      type:
        id: OperatorDeclarationSyntax
        name: OperatorDeclarationSyntax
        isExternal: true
    - id: attributeLists
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
        name: SyntaxList<AttributeListSyntax>
        href: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
    - id: modifiers
      type:
        id: Microsoft.CodeAnalysis.SyntaxTokenList
        name: SyntaxTokenList
        href: Microsoft.CodeAnalysis.SyntaxTokenList
    - id: returnType
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    - id: operatorKeyword
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: operatorToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: parameterList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
    - id: block
      type:
        id: BlockSyntax
        name: BlockSyntax
        isExternal: true
    - id: semicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: OperatorDeclarationSyntax
      type:
        id: OperatorDeclarationSyntax
        name: OperatorDeclarationSyntax
        isExternal: true
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{TypeParameterConstraintClauseSyntax},BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: Update(MethodDeclarationSyntax, SyntaxList<AttributeListSyntax>, SyntaxTokenList, TypeSyntax, ExplicitInterfaceSpecifierSyntax, SyntaxToken, TypeParameterListSyntax, ParameterListSyntax, SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, SyntaxToken)
  fullName: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax, Microsoft.CodeAnalysis.SyntaxList<AttributeListSyntax>, Microsoft.CodeAnalysis.SyntaxTokenList, Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax, ExplicitInterfaceSpecifierSyntax, Microsoft.CodeAnalysis.SyntaxToken, TypeParameterListSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax, Microsoft.CodeAnalysis.SyntaxList<TypeParameterConstraintClauseSyntax>, BlockSyntax, Microsoft.CodeAnalysis.SyntaxToken)
  type: Method
  source:
    remote: *o0
    path: src/Compilers/CSharp/Portable/Syntax/SyntaxExtensions.cs
    startLine: 244
  syntax:
    content:
      CSharp: public static MethodDeclarationSyntax Update(MethodDeclarationSyntax syntax, SyntaxList<AttributeListSyntax> attributeLists, SyntaxTokenList modifiers, TypeSyntax returnType, ExplicitInterfaceSpecifierSyntax explicitInterfaceSpecifier, SyntaxToken identifier, TypeParameterListSyntax typeParameterList, ParameterListSyntax parameterList, SyntaxList<TypeParameterConstraintClauseSyntax> constraintClauses, BlockSyntax block, SyntaxToken semicolonToken)
    parameters:
    - id: syntax
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
        name: MethodDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.yml
    - id: attributeLists
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
        name: SyntaxList<AttributeListSyntax>
        href: Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax}
    - id: modifiers
      type:
        id: Microsoft.CodeAnalysis.SyntaxTokenList
        name: SyntaxTokenList
        href: Microsoft.CodeAnalysis.SyntaxTokenList
    - id: returnType
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax
        name: TypeSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.yml
    - id: explicitInterfaceSpecifier
      type:
        id: ExplicitInterfaceSpecifierSyntax
        name: ExplicitInterfaceSpecifierSyntax
        isExternal: true
    - id: identifier
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: typeParameterList
      type:
        id: TypeParameterListSyntax
        name: TypeParameterListSyntax
        isExternal: true
    - id: parameterList
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax
        name: ParameterListSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.yml
    - id: constraintClauses
      type:
        id: Microsoft.CodeAnalysis.SyntaxList{TypeParameterConstraintClauseSyntax}
        name: SyntaxList<TypeParameterConstraintClauseSyntax>
        href: Microsoft.CodeAnalysis.SyntaxList{TypeParameterConstraintClauseSyntax}
    - id: block
      type:
        id: BlockSyntax
        name: BlockSyntax
        isExternal: true
    - id: semicolonToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    return:
      id: MethodDeclarationSyntax
      type:
        id: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax
        name: MethodDeclarationSyntax
        href: Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.yml
  id: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{TypeParameterConstraintClauseSyntax},BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)
