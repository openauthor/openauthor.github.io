items:
- uid: Microsoft.CodeAnalysis.CSharp
  href: Microsoft.CodeAnalysis.CSharp.yml
  name: CSharp
  fullName: Microsoft.CodeAnalysis.CSharp
  type: Namespace
  source:
    remote:
      path: src/Compilers/CSharp/Desktop/CommandLine/CSharpCompiler.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Compilers/CSharp/Desktop/CommandLine/CSharpCompiler.cs
    startLine: 15
  id: Microsoft.CodeAnalysis.CSharp
  children:
  - Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions
  - Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments
  - Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser
  - Microsoft.CodeAnalysis.CSharp.Conversion
  - Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo
  - Microsoft.CodeAnalysis.CSharp.CSharpCompilation
  - Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo
  - Microsoft.CodeAnalysis.CSharp.QueryClauseInfo
  - Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
  - Microsoft.CodeAnalysis.CSharp.CSharpExtensions
  - Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
  - Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter
  - Microsoft.CodeAnalysis.CSharp.LanguageVersion
  - Microsoft.CodeAnalysis.CSharp.SyntaxFacts
  - Microsoft.CodeAnalysis.CSharp.SymbolDisplay
  - Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
  - Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker
  - Microsoft.CodeAnalysis.CSharp.SyntaxFactory
  - Microsoft.CodeAnalysis.CSharp.SyntaxExtensions
  - Microsoft.CodeAnalysis.CSharp.SyntaxKind
references:
- uid: Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions
  href: Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions.yml
  name: CSharpFileSystemExtensions
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments
  href: Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments.yml
  name: CSharpCommandLineArguments
  type: Class
  summary: The command line arguments to a C# [Microsoft.CodeAnalysis.CSharp.CSharpCompiler]().
- uid: Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser
  href: Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.yml
  name: CSharpCommandLineParser
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.Conversion
  href: Microsoft.CodeAnalysis.CSharp.Conversion.yml
  name: Conversion
  type: Struct
  summary: >-
    Summarizes whether a conversion is allowed, and if so, which kind of conversion (and in some cases, the

    associated symbol).
- uid: Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo
  href: Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.yml
  name: AwaitExpressionInfo
  type: Struct
  summary: Structure containing all semantic information about an await expression.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpCompilation
  href: Microsoft.CodeAnalysis.CSharp.CSharpCompilation.yml
  name: CSharpCompilation
  type: Class
  summary: >-
    The compilation object is an immutable representation of a single invocation of the

    compiler. Although immutable, a compilation is also on-demand, and will realize and cache

    data as necessary. A compilation can produce a new compilation from existing compilation

    with the application of small deltas. In many cases, it is more efficient than creating a

    new compilation from scratch, as the new compilation can reuse information from the old

    compilation.
- uid: Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo
  href: Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.yml
  name: ForEachStatementInfo
  type: Struct
  summary: Structure containing all semantic information about a for each statement.
- uid: Microsoft.CodeAnalysis.CSharp.QueryClauseInfo
  href: Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.yml
  name: QueryClauseInfo
  type: Struct
  summary: Semantic information associated with a query clause in a C# query expression.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions
  href: Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.yml
  name: CSharpCompilationOptions
  type: Class
  summary: >-
    Represents various options that affect compilation, such as

    whether to emit an executable or a library, whether to optimize

    generated code, and so on.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpExtensions
  href: Microsoft.CodeAnalysis.CSharp.CSharpExtensions.yml
  name: CSharpExtensions
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.CSharpParseOptions
  href: Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.yml
  name: CSharpParseOptions
  type: Class
  summary: This class stores several source parsing related options and offers access to their values.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter
  href: Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter.yml
  name: CSharpDiagnosticFormatter
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.LanguageVersion
  href: Microsoft.CodeAnalysis.CSharp.LanguageVersion.yml
  name: LanguageVersion
  type: Enum
  summary: Specifies the language version.
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxFacts
  href: Microsoft.CodeAnalysis.CSharp.SyntaxFacts.yml
  name: SyntaxFacts
  type: Class
  summary: Defines a set of methods to determine how Unicode characters are treated by the C# compiler.
- uid: Microsoft.CodeAnalysis.CSharp.SymbolDisplay
  href: Microsoft.CodeAnalysis.CSharp.SymbolDisplay.yml
  name: SymbolDisplay
  type: Class
  summary: Displays a symbol in the C# style.
- uid: Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions
  href: Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions.yml
  name: TypedConstantExtensions
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml
  name: CSharpSyntaxNode
  type: Class
  summary: Represents a non-terminal node in the syntax tree.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.yml
  name: CSharpSyntaxRewriter
  type: Class
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml) which descends an entire [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) graph and

    may replace or remove visited SyntaxNodes in depth-first order.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.yml
  name: CSharpSyntaxTree
  type: Class
  summary: The parsed representation of a C# source document.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.yml
  name: CSharpSyntaxVisitor<TResult>
  type: Class
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) visitor that visits only the single CSharpSyntaxNode

    passed into its Visit method and produces

    a value of the type specified by the  parameter.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml
  name: CSharpSyntaxVisitor
  type: Class
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) visitor that visits only the single CSharpSyntaxNode

    passed into its Visit method.
- uid: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker
  href: Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.yml
  name: CSharpSyntaxWalker
  type: Class
  summary: >-
    Represents a [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.yml) that descends an entire [Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode](Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.yml) graph

    visiting each CSharpSyntaxNode and its child SyntaxNodes and [Microsoft.CodeAnalysis.SyntaxToken]()s in depth-first order.
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxFactory
  href: Microsoft.CodeAnalysis.CSharp.SyntaxFactory.yml
  name: SyntaxFactory
  type: Class
  summary: A class containing factory methods for constructing syntax nodes, tokens and trivia.
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions
  href: Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.yml
  name: SyntaxExtensions
  type: Class
- uid: Microsoft.CodeAnalysis.CSharp.SyntaxKind
  href: Microsoft.CodeAnalysis.CSharp.SyntaxKind.yml
  name: SyntaxKind
  type: Enum
