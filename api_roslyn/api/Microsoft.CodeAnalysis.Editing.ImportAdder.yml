items:
- uid: Microsoft.CodeAnalysis.Editing.ImportAdder
  href: Microsoft.CodeAnalysis.Editing.ImportAdder.yml
  name: ImportAdder
  fullName: Microsoft.CodeAnalysis.Editing.ImportAdder
  type: Class
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
    startLine: 12
  syntax:
    content:
      CSharp: public class ImportAdder
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.Editing.ImportAdder
  children:
  - Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.ImportAdder.yml
  name: AddImportsAsync(Document, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
    startLine: 17
  summary: Adds namespace imports / using directives for namespace references found in the document.
  syntax:
    content:
      CSharp: public static Task<Document> AddImportsAsync(Document document, OptionSet options = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.ImportAdder.yml
  name: AddImportsAsync(Document, TextSpan, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.Text.TextSpan, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
    startLine: 26
  summary: Adds namespace imports / using directives for namespace references found in the document within the span specified.
  syntax:
    content:
      CSharp: public static Task<Document> AddImportsAsync(Document document, TextSpan span, OptionSet options = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: Microsoft.CodeAnalysis.Text.TextSpan
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.ImportAdder.yml
  name: AddImportsAsync(Document, SyntaxAnnotation, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.SyntaxAnnotation, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
    startLine: 34
  summary: Adds namespace imports / using directives for namespace references found in the document within the sub-trees annotated with the [Microsoft.CodeAnalysis.SyntaxAnnotation]().
  syntax:
    content:
      CSharp: public static Task<Document> AddImportsAsync(Document document, SyntaxAnnotation annotation, OptionSet options = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: annotation
      type:
        id: Microsoft.CodeAnalysis.SyntaxAnnotation
        name: SyntaxAnnotation
        href: Microsoft.CodeAnalysis.SyntaxAnnotation
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.ImportAdder.yml
  name: AddImportsAsync(Document, IEnumerable<TextSpan>, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/ImportAdder.cs
    startLine: 43
  summary: Adds namespace imports / using directives for namespace references found in the document within the spans specified.
  syntax:
    content:
      CSharp: public static Task<Document> AddImportsAsync(Document document, IEnumerable<TextSpan> spans, OptionSet options = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: spans
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan}
        name: IEnumerable<TextSpan>
        isExternal: true
    - id: options
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
