items:
- uid: Microsoft.CodeAnalysis.Editing.SolutionEditor
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yml
  name: SolutionEditor
  fullName: Microsoft.CodeAnalysis.Editing.SolutionEditor
  type: Class
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 14
  summary: An editor for making changes to multiple documents in a solution.
  syntax:
    content:
      CSharp: public class SolutionEditor
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SolutionEditor
  children:
  - Microsoft.CodeAnalysis.Editing.SolutionEditor.#ctor(Microsoft.CodeAnalysis.Solution)
  - Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
  - Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution
- uid: Microsoft.CodeAnalysis.Editing.SolutionEditor.#ctor(Microsoft.CodeAnalysis.Solution)
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yml
  name: SolutionEditor(Solution)
  fullName: Microsoft.CodeAnalysis.Editing.SolutionEditor.SolutionEditor(Microsoft.CodeAnalysis.Solution)
  type: Constructor
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 19
  syntax:
    content:
      CSharp: public SolutionEditor(Solution solution)
    parameters:
    - id: solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Editing.SolutionEditor.#ctor(Microsoft.CodeAnalysis.Solution)
- uid: Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yml
  name: OriginalSolution
  fullName: Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 28
  summary: The [Microsoft.CodeAnalysis.Solution](Microsoft.CodeAnalysis.Solution.yml) that was specified when the [Microsoft.CodeAnalysis.Editing.SolutionEditor](Microsoft.CodeAnalysis.Editing.SolutionEditor.yml) was constructed.
  syntax:
    content:
      CSharp: public Solution OriginalSolution { get; }
    parameters:
    - id: OriginalSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution
- uid: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yml
  name: GetDocumentEditorAsync(DocumentId, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 36
  summary: Gets the [Microsoft.CodeAnalysis.Editing.DocumentEditor](Microsoft.CodeAnalysis.Editing.DocumentEditor.yml) for the corresponding [Microsoft.CodeAnalysis.DocumentId](Microsoft.CodeAnalysis.DocumentId.yml).
  syntax:
    content:
      CSharp: public Task<DocumentEditor> GetDocumentEditorAsync(DocumentId id, CancellationToken cancellationToken = null)
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Editing.DocumentEditor}
        name: Task<DocumentEditor>
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution
  href: Microsoft.CodeAnalysis.Editing.SolutionEditor.yml
  name: GetChangedSolution()
  fullName: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SolutionEditor.cs
    startLine: 51
  summary: Returns the changed [Microsoft.CodeAnalysis.Solution](Microsoft.CodeAnalysis.Solution.yml).
  syntax:
    content:
      CSharp: public Solution GetChangedSolution()
    parameters: []
    return:
      id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution
