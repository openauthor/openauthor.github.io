items:
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: ReferenceLocation
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  type: Struct
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 12
  summary: Information about a reference to a symbol.
  syntax:
    content:
      CSharp: 'public struct ReferenceLocation : IComparable<ReferenceLocation>, IEquatable<ReferenceLocation>'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.ValueType
    name: ValueType
    isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
  children:
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode
  - Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: Document
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 18
  summary: The document that the reference was found in.
  syntax:
    content:
      CSharp: public Document Document { get; }
    parameters:
    - id: Document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: Alias
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 23
  summary: If the symbol was bound through an alias, then this is the alias that was used.
  syntax:
    content:
      CSharp: public IAliasSymbol Alias { get; }
    parameters:
    - id: Alias
      type:
        id: Microsoft.CodeAnalysis.IAliasSymbol
        name: IAliasSymbol
        href: Microsoft.CodeAnalysis.IAliasSymbol
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: Location
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 28
  summary: The actual source location for a given symbol.
  syntax:
    content:
      CSharp: public Location Location { get; }
    parameters:
    - id: Location
      type:
        id: Microsoft.CodeAnalysis.Location
        name: Location
        href: Microsoft.CodeAnalysis.Location
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: IsImplicit
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 36
  summary: >-
    Indicates if this is an implicit reference to the definition.  i.e. the definition wasn't

    explicitly stated in the source code at this position, but it was still referenced. For

    example, this can happen with special methods like GetEnumerator that are used

    implicitly by a 'for each' statement.
  syntax:
    content:
      CSharp: public bool IsImplicit { get; }
    parameters:
    - id: IsImplicit
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: CandidateReason
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 43
  syntax:
    content:
      CSharp: public CandidateReason CandidateReason { get; }
    parameters:
    - id: CandidateReason
      type:
        id: Microsoft.CodeAnalysis.CandidateReason
        name: CandidateReason
        href: Microsoft.CodeAnalysis.CandidateReason
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: IsCandidateLocation
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 62
  summary: >-
    Indicates if this was not an exact reference to a location, but was instead a possible

    location that was found through error tolerance.  For example, a call to a method like

    "Foo()" could show up as an error tolerance location to a method "Foo(int i)" if no

    actual "Foo()" method existed.
  syntax:
    content:
      CSharp: public bool IsCandidateLocation { get; }
    parameters:
    - id: IsCandidateLocation
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: operator ==(ReferenceLocation, ReferenceLocation)
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.operator ==(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation, Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Operator
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 70
  syntax:
    content:
      CSharp: public static bool operator ==(ReferenceLocation left, ReferenceLocation right)
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: operator !=(ReferenceLocation, ReferenceLocation)
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.operator !=(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation, Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Operator
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 75
  syntax:
    content:
      CSharp: public static bool operator !=(ReferenceLocation left, ReferenceLocation right)
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: Equals(object)
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 80
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: Equals(ReferenceLocation)
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 86
  syntax:
    content:
      CSharp: public bool Equals(ReferenceLocation other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: GetHashCode()
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 96
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode
- uid: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
  name: CompareTo(ReferenceLocation)
  fullName: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/FindSymbols/ReferenceLocation.cs
    startLine: 105
  syntax:
    content:
      CSharp: public int CompareTo(ReferenceLocation other)
    parameters:
    - id: other
      type:
        id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation
        name: ReferenceLocation
        href: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.yml
    return:
      id: Int32
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)
