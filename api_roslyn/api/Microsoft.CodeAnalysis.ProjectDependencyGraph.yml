items:
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: ProjectDependencyGraph
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph
  type: Class
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 16
  summary: A [Microsoft.CodeAnalysis.ProjectDependencyGraph](Microsoft.CodeAnalysis.ProjectDependencyGraph.yml) models the dependencies between projects in a solution.
  syntax:
    content:
      CSharp: public class ProjectDependencyGraph
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph
  children:
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetProjectsThatThisProjectDirectlyDependsOn(ProjectId)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 48
  summary: Gets the list of projects (topologically sorted) that this project directly depends on.
  syntax:
    content:
      CSharp: public IImmutableSet<ProjectId> GetProjectsThatThisProjectDirectlyDependsOn(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: IImmutableSet
      type:
        id: System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.ProjectId}
        name: IImmutableSet<ProjectId>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetProjectsThatDirectlyDependOnThisProject(ProjectId)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 69
  summary: Gets the list of projects (topologically sorted) that directly depend on this project.
  syntax:
    content:
      CSharp: public IImmutableSet<ProjectId> GetProjectsThatDirectlyDependOnThisProject(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: IImmutableSet
      type:
        id: System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.ProjectId}
        name: IImmutableSet<ProjectId>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetProjectsThatThisProjectTransitivelyDependsOn(ProjectId)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 136
  summary: Gets the list of projects that directly or transitively this project depends on
  syntax:
    content:
      CSharp: public IImmutableSet<ProjectId> GetProjectsThatThisProjectTransitivelyDependsOn(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: IImmutableSet
      type:
        id: System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.ProjectId}
        name: IImmutableSet<ProjectId>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetProjectsThatTransitivelyDependOnThisProject(ProjectId)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 192
  summary: Gets the list of projects that directly or transitively depend on this project.
  syntax:
    content:
      CSharp: public IEnumerable<ProjectId> GetProjectsThatTransitivelyDependOnThisProject(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectId}
        name: IEnumerable<ProjectId>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetTopologicallySortedProjects(CancellationToken)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 251
  summary: >-
    Returns all the projects for the solution in a topologically sorted order with respect

    to their dependencies. Projects that depend on other projects will always show up later in this sequence

    than the projects they depend on.
  syntax:
    content:
      CSharp: public IEnumerable<ProjectId> GetTopologicallySortedProjects(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectId}
        name: IEnumerable<ProjectId>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.ProjectDependencyGraph.yml
  name: GetDependencySets(CancellationToken)
  fullName: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/ProjectDependencyGraph.cs
    startLine: 308
  summary: >-
    Returns a sequence of sets, where each set contains items with shared interdependency,

    and there is no dependency between sets.
  syntax:
    content:
      CSharp: public IEnumerable<IEnumerable<ProjectId>> GetDependencySets(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectId}}
        name: IEnumerable<IEnumerable<ProjectId>>
        isExternal: true
  id: Microsoft.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken)
