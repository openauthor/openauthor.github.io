items:
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: Simplifier
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier
  type: Class
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 30
  summary: >-
    Expands and Reduces subtrees.



    Expansion:

    1) Replaces names with fully qualified dotted names.

    2) Adds parentheses around expressions

    3) Adds explicit casts/conversions where implicit conversions exist

    4) Adds escaping to identifiers

    5) Rewrites extension method invocations with explicit calls on the class containing the extension method.



    Reduction:

    1) Shortens dotted names to their minimally qualified form

    2) Removes unnecessary parentheses

    3) Removes unnecessary casts/conversions

    4) Removes unnecessary escaping

    5) Rewrites explicit calls to extension methods to use dot notation
  syntax:
    content:
      CSharp: public class Simplifier
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier
  children:
  - Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation
  - Microsoft.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync``1(``0,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.Expand``1(``0,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.Expand(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  - Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: Annotation
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 36
  summary: >-
    The annotation the reducer uses to identify sub trees to be reduced.

    The Expand operations add this annotation to nodes so that the Reduce operations later find them.
  syntax:
    content:
      CSharp: public static readonly SyntaxAnnotation Annotation;
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: SpecialTypeAnnotation
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 42
  summary: >-
    This is the annotation used by the simplifier and expander to identify Predefined type and preserving

    them from over simplification
  syntax:
    content:
      CSharp: public static readonly SyntaxAnnotation SpecialTypeAnnotation;
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync``1(``0,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ExpandAsync<TNode>(TNode, Document, Func<SyntaxNode, bool>, bool, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync<TNode>(TNode, Microsoft.CodeAnalysis.Document, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 47
  summary: Expand qualifying parts of the specified subtree, annotating the parts using the [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) annotation.
  syntax:
    content:
      CSharp: 'public static Task<TNode> ExpandAsync<TNode>(TNode node, Document document, Func<SyntaxNode, bool> expandInsideNode = null, bool expandParameter = false, CancellationToken cancellationToken = null)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: expandInsideNode
      type:
        id: System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean}
        name: Func<SyntaxNode, bool>
        isExternal: true
    - id: expandParameter
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{``0}
        name: Task<TNode>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync``1(``0,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand``1(``0,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: Expand<TNode>(TNode, SemanticModel, Workspace, Func<SyntaxNode, bool>, bool, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand<TNode>(TNode, Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis.Workspace, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 56
  summary: Expand qualifying parts of the specified subtree, annotating the parts using the [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) annotation.
  syntax:
    content:
      CSharp: 'public static TNode Expand<TNode>(TNode node, SemanticModel semanticModel, Workspace workspace, Func<SyntaxNode, bool> expandInsideNode = null, bool expandParameter = false, CancellationToken cancellationToken = null)where TNode : SyntaxNode'
    parameters:
    - id: node
      type:
        id: TNode
        name: TNode
        href: TNode
    - id: semanticModel
      type:
        id: Microsoft.CodeAnalysis.SemanticModel
        name: SemanticModel
        href: Microsoft.CodeAnalysis.SemanticModel
    - id: workspace
      type:
        id: Microsoft.CodeAnalysis.Workspace
        name: Workspace
        href: Microsoft.CodeAnalysis.Workspace.yml
    - id: expandInsideNode
      type:
        id: System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean}
        name: Func<SyntaxNode, bool>
        isExternal: true
    - id: expandParameter
      type:
        id: System.Boolean
        name: bool
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: TNode
      type:
        id: TNode
        name: TNode
        href: TNode
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand``1(``0,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ExpandAsync(SyntaxToken, Document, Func<SyntaxNode, bool>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.Document, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 67
  summary: Expand qualifying parts of the specified subtree, annotating the parts using the [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) annotation.
  syntax:
    content:
      CSharp: public static Task<SyntaxToken> ExpandAsync(SyntaxToken token, Document document, Func<SyntaxNode, bool> expandInsideNode = null, CancellationToken cancellationToken = null)
    parameters:
    - id: token
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: expandInsideNode
      type:
        id: System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean}
        name: Func<SyntaxNode, bool>
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.SyntaxToken}
        name: Task<SyntaxToken>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: Expand(SyntaxToken, SemanticModel, Workspace, Func<SyntaxNode, bool>, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand(Microsoft.CodeAnalysis.SyntaxToken, Microsoft.CodeAnalysis.SemanticModel, Microsoft.CodeAnalysis.Workspace, System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 76
  summary: Expand qualifying parts of the specified subtree, annotating the parts using the [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) annotation.
  syntax:
    content:
      CSharp: public static SyntaxToken Expand(SyntaxToken token, SemanticModel semanticModel, Workspace workspace, Func<SyntaxNode, bool> expandInsideNode = null, CancellationToken cancellationToken = null)
    parameters:
    - id: token
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
    - id: semanticModel
      type:
        id: Microsoft.CodeAnalysis.SemanticModel
        name: SemanticModel
        href: Microsoft.CodeAnalysis.SemanticModel
    - id: workspace
      type:
        id: Microsoft.CodeAnalysis.Workspace
        name: Workspace
        href: Microsoft.CodeAnalysis.Workspace.yml
    - id: expandInsideNode
      type:
        id: System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean}
        name: Func<SyntaxNode, bool>
        isExternal: true
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: SyntaxToken
      type:
        id: Microsoft.CodeAnalysis.SyntaxToken
        name: SyntaxToken
        href: Microsoft.CodeAnalysis.SyntaxToken
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.Expand(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ReduceAsync(Document, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 85
  summary: Reduce all sub-trees annotated with [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) found within the document. The annotated node and all child nodes will be reduced.
  syntax:
    content:
      CSharp: public static Task<Document> ReduceAsync(Document document, OptionSet optionSet = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: optionSet
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ReduceAsync(Document, SyntaxAnnotation, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.SyntaxAnnotation, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 95
  summary: >-
    Reduce the sub-trees annotated with [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) found within the subtrees identified with the specified .

    The annotated node and all child nodes will be reduced.
  syntax:
    content:
      CSharp: public static Task<Document> ReduceAsync(Document document, SyntaxAnnotation annotation, OptionSet optionSet = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: annotation
      type:
        id: Microsoft.CodeAnalysis.SyntaxAnnotation
        name: SyntaxAnnotation
        href: Microsoft.CodeAnalysis.SyntaxAnnotation
    - id: optionSet
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ReduceAsync(Document, TextSpan, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document, Microsoft.CodeAnalysis.Text.TextSpan, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 105
  summary: >-
    Reduce the sub-trees annotated with [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) found within the specified span.

    The annotated node and all child nodes will be reduced.
  syntax:
    content:
      CSharp: public static Task<Document> ReduceAsync(Document document, TextSpan span, OptionSet optionSet = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: span
      type:
        id: Microsoft.CodeAnalysis.Text.TextSpan
        name: TextSpan
        href: Microsoft.CodeAnalysis.Text.TextSpan
    - id: optionSet
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.Simplification.Simplifier.yml
  name: ReduceAsync(Document, IEnumerable<TextSpan>, OptionSet, CancellationToken)
  fullName: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Text.TextSpan>, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/Simplifier.cs
    startLine: 114
  summary: >-
    Reduce the sub-trees annotated with [Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation](Microsoft.CodeAnalysis.Simplification.Simplifier.yml) found within the specified spans.

    The annotated node and all child nodes will be reduced.
  syntax:
    content:
      CSharp: public static Task<Document> ReduceAsync(Document document, IEnumerable<TextSpan> spans, OptionSet optionSet = null, CancellationToken cancellationToken = null)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    - id: spans
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan}
        name: IEnumerable<TextSpan>
        isExternal: true
    - id: optionSet
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: CancellationToken
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}
        name: Task<Document>
        isExternal: true
  id: Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)
