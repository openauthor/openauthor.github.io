items:
- uid: Microsoft.CodeAnalysis.VersionStamp
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: VersionStamp
  fullName: Microsoft.CodeAnalysis.VersionStamp
  type: Struct
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: ef085ea0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 11
  summary: VersionStamp should be only used to compare versions returned by same API.
  syntax:
    content:
      CSharp: public struct VersionStamp
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.ValueType
    name: System.ValueType
    isExternal: true
  id: Microsoft.CodeAnalysis.VersionStamp
  children:
  - Microsoft.CodeAnalysis.VersionStamp.Create
  - Microsoft.CodeAnalysis.VersionStamp.Create(System.DateTime)
  - Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion(Microsoft.CodeAnalysis.VersionStamp)
  - Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion
  - Microsoft.CodeAnalysis.VersionStamp.ToString
  - Microsoft.CodeAnalysis.VersionStamp.GetHashCode
  - Microsoft.CodeAnalysis.VersionStamp.Equals(System.Object)
  - Microsoft.CodeAnalysis.VersionStamp.Equals(Microsoft.CodeAnalysis.VersionStamp)
  - Microsoft.CodeAnalysis.VersionStamp.op_Equality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
  - Microsoft.CodeAnalysis.VersionStamp.op_Inequality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
  - Microsoft.CodeAnalysis.VersionStamp.Default
- uid: Microsoft.CodeAnalysis.VersionStamp.Create
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: Create()
  fullName: Microsoft.CodeAnalysis.VersionStamp.Create()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 61
  summary: Creates a new instance of a VersionStamp.
  syntax:
    content:
      CSharp: public static VersionStamp Create()
    parameters: []
    return:
      id: VersionStamp
  id: Microsoft.CodeAnalysis.VersionStamp.Create
- uid: Microsoft.CodeAnalysis.VersionStamp.Create(System.DateTime)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: Create(DateTime)
  fullName: Microsoft.CodeAnalysis.VersionStamp.Create(System.DateTime)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 69
  summary: Creates a new instance of a version stamp based on the specified DateTime.
  syntax:
    content:
      CSharp: public static VersionStamp Create(DateTime utcIimeLastModified)
    parameters:
    - id: utcIimeLastModified
      type:
        id: System.DateTime
        name: System.DateTime
        isExternal: true
    return:
      id: VersionStamp
  id: Microsoft.CodeAnalysis.VersionStamp.Create(System.DateTime)
- uid: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion(Microsoft.CodeAnalysis.VersionStamp)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: GetNewerVersion(VersionStamp)
  fullName: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion(Microsoft.CodeAnalysis.VersionStamp)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 78
  summary: >-
    compare two different versions and return either one of the versions if there is no collision, otherwise, create a new version

    that can be used later to compare versions between different items
  syntax:
    content:
      CSharp: public VersionStamp GetNewerVersion(VersionStamp version)
    parameters:
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    return:
      id: VersionStamp
  id: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion(Microsoft.CodeAnalysis.VersionStamp)
- uid: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: GetNewerVersion()
  fullName: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 119
  summary: >-
    Gets a new VersionStamp that is guaranteed to be newer than its base one

    this should only be used for same item to move it to newer version
  syntax:
    content:
      CSharp: public VersionStamp GetNewerVersion()
    parameters: []
    return:
      id: VersionStamp
  id: Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion
- uid: Microsoft.CodeAnalysis.VersionStamp.ToString
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: ToString()
  fullName: Microsoft.CodeAnalysis.VersionStamp.ToString()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 133
  summary: Returns the serialized text form of the VersionStamp.
  syntax:
    content:
      CSharp: public override string ToString()
    parameters: []
    return:
      id: String
  id: Microsoft.CodeAnalysis.VersionStamp.ToString
- uid: Microsoft.CodeAnalysis.VersionStamp.GetHashCode
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: GetHashCode()
  fullName: Microsoft.CodeAnalysis.VersionStamp.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 139
  syntax:
    content:
      CSharp: public override int GetHashCode()
    parameters: []
    return:
      id: Int32
  id: Microsoft.CodeAnalysis.VersionStamp.GetHashCode
- uid: Microsoft.CodeAnalysis.VersionStamp.Equals(System.Object)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: Equals(object)
  fullName: Microsoft.CodeAnalysis.VersionStamp.Equals(object)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 144
  syntax:
    content:
      CSharp: public override bool Equals(object obj)
    parameters:
    - id: obj
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: Boolean
  id: Microsoft.CodeAnalysis.VersionStamp.Equals(System.Object)
- uid: Microsoft.CodeAnalysis.VersionStamp.Equals(Microsoft.CodeAnalysis.VersionStamp)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: Equals(VersionStamp)
  fullName: Microsoft.CodeAnalysis.VersionStamp.Equals(Microsoft.CodeAnalysis.VersionStamp)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 154
  syntax:
    content:
      CSharp: public bool Equals(VersionStamp version)
    parameters:
    - id: version
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    return:
      id: Boolean
  id: Microsoft.CodeAnalysis.VersionStamp.Equals(Microsoft.CodeAnalysis.VersionStamp)
- uid: Microsoft.CodeAnalysis.VersionStamp.op_Equality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: operator ==(VersionStamp, VersionStamp)
  fullName: Microsoft.CodeAnalysis.VersionStamp.operator ==(Microsoft.CodeAnalysis.VersionStamp, Microsoft.CodeAnalysis.VersionStamp)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 164
  syntax:
    content:
      CSharp: public static bool operator ==(VersionStamp left, VersionStamp right) { return left.Equals(right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    return:
      id: Boolean
  id: Microsoft.CodeAnalysis.VersionStamp.op_Equality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
- uid: Microsoft.CodeAnalysis.VersionStamp.op_Inequality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: operator !=(VersionStamp, VersionStamp)
  fullName: Microsoft.CodeAnalysis.VersionStamp.operator !=(Microsoft.CodeAnalysis.VersionStamp, Microsoft.CodeAnalysis.VersionStamp)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 169
  syntax:
    content:
      CSharp: public static bool operator !=(VersionStamp left, VersionStamp right) { return !left.Equals(right); }
    parameters:
    - id: left
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    - id: right
      type:
        id: Microsoft.CodeAnalysis.VersionStamp
        name: VersionStamp
        href: Microsoft.CodeAnalysis.VersionStamp.yml
    return:
      id: Boolean
  id: Microsoft.CodeAnalysis.VersionStamp.op_Inequality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)
- uid: Microsoft.CodeAnalysis.VersionStamp.Default
  href: Microsoft.CodeAnalysis.VersionStamp.yml
  name: Default
  fullName: Microsoft.CodeAnalysis.VersionStamp.Default
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Solution/VersionStamp.cs
    startLine: 235
  syntax:
    content:
      CSharp: Default
  id: Microsoft.CodeAnalysis.VersionStamp.Default
