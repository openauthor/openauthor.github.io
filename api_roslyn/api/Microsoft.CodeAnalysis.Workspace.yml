items:
- uid: Microsoft.CodeAnalysis.Workspace
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Workspace
  fullName: Microsoft.CodeAnalysis.Workspace
  type: Class
  source:
    remote: &o3
      path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
    startLine: 9
  summary: >-
    A workspace provides access to a active set of source code projects and documents and their

    associated syntax trees, compilations and semantic models. A workspace has a current solution

    that is an immutable snapshot of the projects and documents. This property may change over time

    as the workspace is updated either from live interactions in the environment or via call to the

    workspace's [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) method.
  syntax:
    content:
      CSharp: 'public abstract class Workspace : IDisposable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: Microsoft.CodeAnalysis.Workspace
  children:
  - Microsoft.CodeAnalysis.Workspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)
  - Microsoft.CodeAnalysis.Workspace.Services
  - Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled
  - Microsoft.CodeAnalysis.Workspace.Kind
  - Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)
  - Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)
  - Microsoft.CodeAnalysis.Workspace.CurrentSolution
  - Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)
  - Microsoft.CodeAnalysis.Workspace.Options
  - Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action,System.String)
  - Microsoft.CodeAnalysis.Workspace.ScheduleTask``1(System.Func{``0},System.String)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.ClearSolution
  - Microsoft.CodeAnalysis.Workspace.ClearSolutionData
  - Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.Dispose
  - Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)
  - Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)
  - Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved
  - Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  - Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)
  - Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
  - Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
  - Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String,System.String)
  - Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
  - Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
  - Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)
  - Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)
  - Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)
  - Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  - Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
  - Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
  - Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
  - Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
  - Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
  - Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
  - Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty
  - Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  - Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CanOpenDocuments
  - Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments
  - Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)
  - Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  - Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,System.Boolean)
  - Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  - Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution)
  - Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Project)
  - Microsoft.CodeAnalysis.Workspace.WorkspaceChanged
  - Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)
  - Microsoft.CodeAnalysis.Workspace.WorkspaceFailed
  - Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)
  - Microsoft.CodeAnalysis.Workspace.DocumentOpened
  - Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)
  - Microsoft.CodeAnalysis.Workspace.DocumentClosed
  - Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)
  - Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)
  - Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.Workspace@)
  - Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  - Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  - Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)
- uid: Microsoft.CodeAnalysis.Workspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Workspace(HostServices, string)
  fullName: Microsoft.CodeAnalysis.Workspace.Workspace(Microsoft.CodeAnalysis.Host.HostServices, string)
  type: Constructor
  source:
    remote: &o0
      path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 53
  summary: Constructs a new workspace instance.
  syntax:
    content:
      CSharp: protected Workspace(HostServices host, string workspaceKind)
    parameters:
    - id: host
      type:
        id: Microsoft.CodeAnalysis.Host.HostServices
        name: HostServices
        href: Microsoft.CodeAnalysis.Host.HostServices.yml
      description: The [Microsoft.CodeAnalysis.Host.HostServices](Microsoft.CodeAnalysis.Host.HostServices.yml) this workspace uses
    - id: workspaceKind
      type:
        id: System.String
        name: string
        isExternal: true
      description: A string that can be used to identify the kind of workspace. Usually this matches the name of the class.
  id: Microsoft.CodeAnalysis.Workspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)
- uid: Microsoft.CodeAnalysis.Workspace.Services
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Services
  fullName: Microsoft.CodeAnalysis.Workspace.Services
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 71
  summary: Services provider by the host for implementing workspace features.
  syntax:
    content:
      CSharp: public HostWorkspaceServices Services { get; }
    parameters:
    - id: Services
      type:
        id: Microsoft.CodeAnalysis.Host.HostWorkspaceServices
        name: HostWorkspaceServices
        href: Microsoft.CodeAnalysis.Host.HostWorkspaceServices.yml
  id: Microsoft.CodeAnalysis.Workspace.Services
- uid: Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: PartialSemanticsEnabled
  fullName: Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 87
  summary: Override this property if the workspace supports partial semantics for documents.
  syntax:
    content:
      CSharp: protected internal virtual bool PartialSemanticsEnabled { get; }
    parameters:
    - id: PartialSemanticsEnabled
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled
- uid: Microsoft.CodeAnalysis.Workspace.Kind
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Kind
  fullName: Microsoft.CodeAnalysis.Workspace.Kind
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 97
  summary: >-
    The kind of the workspace.

    This is generally [Microsoft.CodeAnalysis.WorkspaceKind.Host](Microsoft.CodeAnalysis.WorkspaceKind.yml) if originating from the host environment, but may be

    any other name used for a specific kind of workspace.
  syntax:
    content:
      CSharp: public string Kind { get; }
    parameters:
    - id: Kind
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.Kind
- uid: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CreateSolution(SolutionInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 105
  summary: Create a new empty solution instance associated with this workspace.
  syntax:
    content:
      CSharp: protected internal Solution CreateSolution(SolutionInfo solutionInfo)
    parameters:
    - id: solutionInfo
      type:
        id: Microsoft.CodeAnalysis.SolutionInfo
        name: SolutionInfo
        href: Microsoft.CodeAnalysis.SolutionInfo.yml
    return:
      id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)
- uid: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CreateSolution(SolutionId)
  fullName: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 113
  summary: Create a new empty solution instance associated with this workspace.
  syntax:
    content:
      CSharp: protected internal Solution CreateSolution(SolutionId id)
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.SolutionId
        name: SolutionId
        href: Microsoft.CodeAnalysis.SolutionId.yml
    return:
      id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)
- uid: Microsoft.CodeAnalysis.Workspace.CurrentSolution
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CurrentSolution
  fullName: Microsoft.CodeAnalysis.Workspace.CurrentSolution
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 127
  summary: >-
    The current solution.



    The solution is an immutable model of the current set of projects and source documents.

    It provides access to source text, syntax trees and semantics.



    This property may change as the workspace reacts to changes in the environment or

    after [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) is called.
  syntax:
    content:
      CSharp: public Solution CurrentSolution { get; }
    parameters:
    - id: CurrentSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Workspace.CurrentSolution
- uid: Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: SetCurrentSolution(Solution)
  fullName: Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 138
  summary: Sets the [Microsoft.CodeAnalysis.Workspace.CurrentSolution](Microsoft.CodeAnalysis.Workspace.yml) of this workspace. This method does not raise a [Microsoft.CodeAnalysis.Workspace.WorkspaceChanged](Microsoft.CodeAnalysis.Workspace.yml) event.
  syntax:
    content:
      CSharp: protected Solution SetCurrentSolution(Solution solution)
    parameters:
    - id: solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    return:
      id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)
- uid: Microsoft.CodeAnalysis.Workspace.Options
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Options
  fullName: Microsoft.CodeAnalysis.Workspace.Options
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 163
  summary: Gets or sets the set of all global options.
  syntax:
    content:
      CSharp: public OptionSet Options { get; set; }
    parameters:
    - id: Options
      type:
        id: Microsoft.CodeAnalysis.Options.OptionSet
        name: OptionSet
        href: Microsoft.CodeAnalysis.Options.OptionSet.yml
  id: Microsoft.CodeAnalysis.Workspace.Options
- uid: Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action,System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ScheduleTask(Action, string)
  fullName: Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 179
  summary: Executes an action as a background task, as part of a sequential queue of tasks.
  syntax:
    content:
      CSharp: protected internal Task ScheduleTask(Action action, string taskName = "Workspace.Task")
    parameters:
    - id: action
      type:
        id: System.Action
        name: Action
        isExternal: true
    - id: taskName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action,System.String)
- uid: Microsoft.CodeAnalysis.Workspace.ScheduleTask``1(System.Func{``0},System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ScheduleTask<T>(Func<T>, string)
  fullName: Microsoft.CodeAnalysis.Workspace.ScheduleTask<T>(System.Func<T>, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 187
  summary: Execute a function as a background task, as part of a sequential queue of tasks.
  syntax:
    content:
      CSharp: protected internal Task<T> ScheduleTask<T>(Func<T> func, string taskName = "Workspace.Task")
    parameters:
    - id: func
      type:
        id: System.Func{``0}
        name: Func<T>
        isExternal: true
    - id: taskName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task{``0}
        name: Task<T>
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.ScheduleTask``1(System.Func{``0},System.String)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentTextChanged(Document)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 196
  summary: >-
    Override this method to act immediately when the text of a document has changed, as opposed

    to waiting for the corresponding workspace changed event to fire asynchronously.
  syntax:
    content:
      CSharp: protected virtual void OnDocumentTextChanged(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentClosing(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 204
  summary: >-
    Override this method to act immediately when a document is closing, as opposed

    to waiting for the corresponding workspace changed event to fire asynchronously.
  syntax:
    content:
      CSharp: protected virtual void OnDocumentClosing(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.ClearSolution
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ClearSolution()
  fullName: Microsoft.CodeAnalysis.Workspace.ClearSolution()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 211
  summary: Clears all solution data and empties the current solution.
  syntax:
    content:
      CSharp: protected void ClearSolution()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.ClearSolution
- uid: Microsoft.CodeAnalysis.Workspace.ClearSolutionData
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ClearSolutionData()
  fullName: Microsoft.CodeAnalysis.Workspace.ClearSolutionData()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 225
  summary: >-
    This method is called when a solution is cleared.



    Override this method if you want to do additional work when a solution is cleared.

    Call the base method at the end of your method.
  syntax:
    content:
      CSharp: protected virtual void ClearSolutionData()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.ClearSolutionData
- uid: Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ClearProjectData(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 239
  summary: >-
    This method is called when an individual project is removed.



    Override this method if you want to do additional work when a project is removed.

    Call the base method at the end of your method.
  syntax:
    content:
      CSharp: protected virtual void ClearProjectData(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ClearDocumentData(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 250
  summary: >-
    This method is called to clear an individual document is removed.



    Override this method if you want to do additional work when a document is removed.

    Call the base method at the end of your method.
  syntax:
    content:
      CSharp: protected virtual void ClearDocumentData(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.Dispose
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Dispose()
  fullName: Microsoft.CodeAnalysis.Workspace.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 258
  summary: Disposes this workspace. The workspace can longer be used after it is disposed.
  syntax:
    content:
      CSharp: public void Dispose()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.Dispose
- uid: Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: Dispose(bool)
  fullName: Microsoft.CodeAnalysis.Workspace.Dispose(bool)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 269
  summary: >-
    Call this method when the workspace is disposed.



    Override this method to do addition work when the workspace is disposed.

    Call this method at the end of your method.
  syntax:
    content:
      CSharp: protected virtual void Dispose(bool finalize)
    parameters:
    - id: finalize
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnSolutionAdded(SolutionInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 281
  summary: Call this method to respond to a solution being opened in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnSolutionAdded(SolutionInfo solutionInfo)
    parameters:
    - id: solutionInfo
      type:
        id: Microsoft.CodeAnalysis.SolutionInfo
        name: SolutionInfo
        href: Microsoft.CodeAnalysis.SolutionInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnSolutionReloaded(SolutionInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 301
  summary: Call this method to respond to a solution being reloaded in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnSolutionReloaded(SolutionInfo reloadedSolutionInfo)
    parameters:
    - id: reloadedSolutionInfo
      type:
        id: Microsoft.CodeAnalysis.SolutionInfo
        name: SolutionInfo
        href: Microsoft.CodeAnalysis.SolutionInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnSolutionRemoved()
  fullName: Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 324
  summary: >-
    This method is called when the solution is removed from the workspace.



    Override this method if you want to do additional work when the solution is removed.

    Call the base method at the end of your method.

    Call this method to respond to a solution being removed/cleared/closed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnSolutionRemoved()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectAdded(ProjectInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 342
  summary: Call this method to respond to a project being added/opened in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnProjectAdded(ProjectInfo projectInfo)
    parameters:
    - id: projectInfo
      type:
        id: Microsoft.CodeAnalysis.ProjectInfo
        name: ProjectInfo
        href: Microsoft.CodeAnalysis.ProjectInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectReloaded(ProjectInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 373
  summary: Call this method to respond to a project being reloaded in the host environment.
  syntax:
    content:
      CSharp: protected internal virtual void OnProjectReloaded(ProjectInfo reloadedProjectInfo)
    parameters:
    - id: reloadedProjectInfo
      type:
        id: Microsoft.CodeAnalysis.ProjectInfo
        name: ProjectInfo
        href: Microsoft.CodeAnalysis.ProjectInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectRemoved(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 394
  summary: Call this method to respond to a project being removed from the host environment.
  syntax:
    content:
      CSharp: protected internal virtual void OnProjectRemoved(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectCanBeRemoved(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 410
  syntax:
    content:
      CSharp: protected virtual void CheckProjectCanBeRemoved(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAssemblyNameChanged(ProjectId, string)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 418
  summary: Call this method when a project's assembly name is changed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAssemblyNameChanged(ProjectId projectId, string assemblyName)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: assemblyName
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
- uid: Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnOutputFilePathChanged(ProjectId, string)
  fullName: Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 434
  summary: Call this method when a project's output file path is changed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnOutputFilePathChanged(ProjectId projectId, string outputFilePath)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: outputFilePath
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String,System.String)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectNameChanged(ProjectId, string, string)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId, string, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 450
  summary: Call this method when a project's name is changed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnProjectNameChanged(ProjectId projectId, string name, string filePath)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: name
      type:
        id: System.String
        name: string
        isExternal: true
    - id: filePath
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String,System.String)
- uid: Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnCompilationOptionsChanged(ProjectId, CompilationOptions)
  fullName: Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.CompilationOptions)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 466
  summary: Call this method when a project's compilation options are changed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnCompilationOptionsChanged(ProjectId projectId, CompilationOptions options)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: options
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
  id: Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
- uid: Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnParseOptionsChanged(ProjectId, ParseOptions)
  fullName: Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ParseOptions)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 482
  summary: Call this method when a project's parse options are changed in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnParseOptionsChanged(ProjectId projectId, ParseOptions options)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: options
      type:
        id: Microsoft.CodeAnalysis.ParseOptions
        name: ParseOptions
        href: Microsoft.CodeAnalysis.ParseOptions
  id: Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectReferenceAdded(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 498
  summary: Call this method when a project reference is added to a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnProjectReferenceAdded(ProjectId projectId, ProjectReference projectReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnProjectReferenceRemoved(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 519
  summary: Call this method when a project reference is removed from a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnProjectReferenceRemoved(ProjectId projectId, ProjectReference projectReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnMetadataReferenceAdded(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 537
  summary: Call this method when a metadata reference is added to a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnMetadataReferenceAdded(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnMetadataReferenceRemoved(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 554
  summary: Call this method when a metadata reference is removed from a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnMetadataReferenceRemoved(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAnalyzerReferenceAdded(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 571
  summary: Call this method when an analyzer reference is added to a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAnalyzerReferenceAdded(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAnalyzerReferenceRemoved(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 588
  summary: Call this method when an analyzer reference is removed from a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAnalyzerReferenceRemoved(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentAdded(DocumentInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 605
  summary: Call this method when a document is added to a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnDocumentAdded(DocumentInfo documentInfo)
    parameters:
    - id: documentInfo
      type:
        id: Microsoft.CodeAnalysis.DocumentInfo
        name: DocumentInfo
        href: Microsoft.CodeAnalysis.DocumentInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentReloaded(DocumentInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 624
  summary: Call this method when a document is reloaded in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnDocumentReloaded(DocumentInfo newDocumentInfo)
    parameters:
    - id: newDocumentInfo
      type:
        id: Microsoft.CodeAnalysis.DocumentInfo
        name: DocumentInfo
        href: Microsoft.CodeAnalysis.DocumentInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentRemoved(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 643
  summary: Call this method when a document is removed from a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnDocumentRemoved(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckDocumentCanBeRemoved(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 661
  syntax:
    content:
      CSharp: protected virtual void CheckDocumentCanBeRemoved(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentTextLoaderChanged(DocumentId, TextLoader)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 669
  summary: Call this method when the text of a document is changed on disk.
  syntax:
    content:
      CSharp: protected internal void OnDocumentTextLoaderChanged(DocumentId documentId, TextLoader loader)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: loader
      type:
        id: Microsoft.CodeAnalysis.TextLoader
        name: TextLoader
        href: Microsoft.CodeAnalysis.TextLoader.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentTextLoaderChanged(DocumentId, TextLoader)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 690
  summary: Call this method when the text of a document is changed on disk.
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentTextLoaderChanged(DocumentId documentId, TextLoader loader)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: loader
      type:
        id: Microsoft.CodeAnalysis.TextLoader
        name: TextLoader
        href: Microsoft.CodeAnalysis.TextLoader.yml
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentTextChanged(DocumentId, SourceText, PreservationMode)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText, Microsoft.CodeAnalysis.PreservationMode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 708
  summary: Call this method when the text of a document is updated in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnDocumentTextChanged(DocumentId documentId, SourceText newText, PreservationMode mode)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: newText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: mode
      type:
        id: Microsoft.CodeAnalysis.PreservationMode
        name: PreservationMode
        href: Microsoft.CodeAnalysis.PreservationMode.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentTextChanged(DocumentId, SourceText, PreservationMode)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText, Microsoft.CodeAnalysis.PreservationMode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 727
  summary: Call this method when the text of a document is updated in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentTextChanged(DocumentId documentId, SourceText newText, PreservationMode mode)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: newText
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
    - id: mode
      type:
        id: Microsoft.CodeAnalysis.PreservationMode
        name: PreservationMode
        href: Microsoft.CodeAnalysis.PreservationMode.yml
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentSourceCodeKindChanged(DocumentId, SourceCodeKind)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.SourceCodeKind)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 745
  summary: Call this method when the SourceCodeKind of a document changes in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnDocumentSourceCodeKindChanged(DocumentId documentId, SourceCodeKind sourceCodeKind)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: sourceCodeKind
      type:
        id: Microsoft.CodeAnalysis.SourceCodeKind
        name: SourceCodeKind
        href: Microsoft.CodeAnalysis.SourceCodeKind
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentAdded(DocumentInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 764
  summary: Call this method when an additional document is added to a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentAdded(DocumentInfo documentInfo)
    parameters:
    - id: documentInfo
      type:
        id: Microsoft.CodeAnalysis.DocumentInfo
        name: DocumentInfo
        href: Microsoft.CodeAnalysis.DocumentInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentRemoved(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 783
  summary: Call this method when an additional document is removed from a project in the host environment.
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentRemoved(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CanApplyChange(ApplyChangesKind)
  fullName: Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 808
  summary: Determines if the specific kind of change is supported by the [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) method.
  syntax:
    content:
      CSharp: public virtual bool CanApplyChange(ApplyChangesKind feature)
    parameters:
    - id: feature
      type:
        id: Microsoft.CodeAnalysis.ApplyChangesKind
        name: ApplyChangesKind
        href: Microsoft.CodeAnalysis.ApplyChangesKind.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)
- uid: Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: TryApplyChanges(Solution)
  fullName: Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 823
  summary: >-
    Apply changes made to a solution back to the workspace.



    The specified solution must be one that originated from this workspace. If it is not, or the workspace

    has been updated since the solution was obtained from the workspace, then this method returns false. This method

    will still throw if the solution contains changes that are not supported according to the [Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)](Microsoft.CodeAnalysis.Workspace.yml)

    method.
  syntax:
    content:
      CSharp: public virtual bool TryApplyChanges(Solution newSolution)
    parameters:
    - id: newSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyProjectChanges(ProjectChanges)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 977
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) for each project that has been added, removed or changed.



    Override this method if you want to modify how project changes are applied.
  syntax:
    content:
      CSharp: protected virtual void ApplyProjectChanges(ProjectChanges projectChanges)
    parameters:
    - id: projectChanges
      type:
        id: Microsoft.CodeAnalysis.ProjectChanges
        name: ProjectChanges
        href: Microsoft.CodeAnalysis.ProjectChanges.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyProjectAdded(ProjectInfo)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1153
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add a project to the current solution.



    Override this method to implement the capability of adding projects.
  syntax:
    content:
      CSharp: protected virtual void ApplyProjectAdded(ProjectInfo project)
    parameters:
    - id: project
      type:
        id: Microsoft.CodeAnalysis.ProjectInfo
        name: ProjectInfo
        href: Microsoft.CodeAnalysis.ProjectInfo.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyProjectRemoved(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1164
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove a project from the current solution.



    Override this method to implement the capability of removing projects.
  syntax:
    content:
      CSharp: protected virtual void ApplyProjectRemoved(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyCompilationOptionsChanged(ProjectId, CompilationOptions)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.CompilationOptions)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1175
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to change the compilation options.



    Override this method to implement the capability of changing compilation options.
  syntax:
    content:
      CSharp: protected virtual void ApplyCompilationOptionsChanged(ProjectId projectId, CompilationOptions options)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: options
      type:
        id: Microsoft.CodeAnalysis.CompilationOptions
        name: CompilationOptions
        href: Microsoft.CodeAnalysis.CompilationOptions
  id: Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyParseOptionsChanged(ProjectId, ParseOptions)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ParseOptions)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1186
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to change the parse options.



    Override this method to implement the capability of changing parse options.
  syntax:
    content:
      CSharp: protected virtual void ApplyParseOptionsChanged(ProjectId projectId, ParseOptions options)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: options
      type:
        id: Microsoft.CodeAnalysis.ParseOptions
        name: ParseOptions
        href: Microsoft.CodeAnalysis.ParseOptions
  id: Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyProjectReferenceAdded(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1197
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add a project reference to a project.



    Override this method to implement the capability of adding project references.
  syntax:
    content:
      CSharp: protected virtual void ApplyProjectReferenceAdded(ProjectId projectId, ProjectReference projectReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyProjectReferenceRemoved(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1208
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove a project reference from a project.



    Override this method to implement the capability of removing project references.
  syntax:
    content:
      CSharp: protected virtual void ApplyProjectReferenceRemoved(ProjectId projectId, ProjectReference projectReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyMetadataReferenceAdded(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1219
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add a metadata reference to a project.



    Override this method to implement the capability of adding metadata references.
  syntax:
    content:
      CSharp: protected virtual void ApplyMetadataReferenceAdded(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyMetadataReferenceRemoved(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1230
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove a metadata reference from a project.



    Override this method to implement the capability of removing metadata references.
  syntax:
    content:
      CSharp: protected virtual void ApplyMetadataReferenceRemoved(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyAnalyzerReferenceAdded(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1241
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add an analyzer reference to a project.



    Override this method to implement the capability of adding analyzer references.
  syntax:
    content:
      CSharp: protected virtual void ApplyAnalyzerReferenceAdded(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyAnalyzerReferenceRemoved(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1252
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove an analyzer reference from a project.



    Override this method to implement the capability of removing analyzer references.
  syntax:
    content:
      CSharp: protected virtual void ApplyAnalyzerReferenceRemoved(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyDocumentAdded(DocumentInfo, SourceText)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo, Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1263
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add a new document to a project.



    Override this method to implement the capability of adding documents.
  syntax:
    content:
      CSharp: protected virtual void ApplyDocumentAdded(DocumentInfo info, SourceText text)
    parameters:
    - id: info
      type:
        id: Microsoft.CodeAnalysis.DocumentInfo
        name: DocumentInfo
        href: Microsoft.CodeAnalysis.DocumentInfo.yml
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
  id: Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyDocumentRemoved(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1274
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove a document from a project.



    Override this method to implement the capability of removing documents.
  syntax:
    content:
      CSharp: protected virtual void ApplyDocumentRemoved(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyDocumentTextChanged(DocumentId, SourceText)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1285
  summary: >-
    This method is called to change the text of a document.



    Override this method to implement the capability of changing document text.
  syntax:
    content:
      CSharp: protected virtual void ApplyDocumentTextChanged(DocumentId id, SourceText text)
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
  id: Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyAdditionalDocumentAdded(DocumentInfo, SourceText)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo, Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1296
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to add a new additional document to a project.



    Override this method to implement the capability of adding additional documents.
  syntax:
    content:
      CSharp: protected virtual void ApplyAdditionalDocumentAdded(DocumentInfo info, SourceText text)
    parameters:
    - id: info
      type:
        id: Microsoft.CodeAnalysis.DocumentInfo
        name: DocumentInfo
        href: Microsoft.CodeAnalysis.DocumentInfo.yml
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
  id: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyAdditionalDocumentRemoved(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1307
  summary: >-
    This method is called during [Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)](Microsoft.CodeAnalysis.Workspace.yml) to remove an additional document from a project.



    Override this method to implement the capability of removing additional documents.
  syntax:
    content:
      CSharp: protected virtual void ApplyAdditionalDocumentRemoved(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ApplyAdditionalDocumentTextChanged(DocumentId, SourceText)
  fullName: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceText)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1318
  summary: >-
    This method is called to change the text of an additional document.



    Override this method to implement the capability of changing additional document text.
  syntax:
    content:
      CSharp: protected virtual void ApplyAdditionalDocumentTextChanged(DocumentId id, SourceText text)
    parameters:
    - id: id
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: text
      type:
        id: Microsoft.CodeAnalysis.Text.SourceText
        name: SourceText
        href: Microsoft.CodeAnalysis.Text.SourceText
  id: Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)
- uid: Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckSolutionIsEmpty()
  fullName: Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty()
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1330
  summary: Throws an exception is the solution is not empty.
  syntax:
    content:
      CSharp: protected void CheckSolutionIsEmpty()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectIsInCurrentSolution(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1341
  summary: Throws an exception if the project is not part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckProjectIsInCurrentSolution(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectIsNotInCurrentSolution(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1354
  summary: Throws an exception is the project is part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckProjectIsNotInCurrentSolution(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectHasProjectReference(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1367
  summary: Throws an exception if a project does not have a specific project reference.
  syntax:
    content:
      CSharp: protected void CheckProjectHasProjectReference(ProjectId fromProjectId, ProjectReference projectReference)
    parameters:
    - id: fromProjectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectDoesNotHaveProjectReference(ProjectId, ProjectReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1380
  summary: Throws an exception if a project already has a specific project reference.
  syntax:
    content:
      CSharp: protected void CheckProjectDoesNotHaveProjectReference(ProjectId fromProjectId, ProjectReference projectReference)
    parameters:
    - id: fromProjectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: projectReference
      type:
        id: Microsoft.CodeAnalysis.ProjectReference
        name: ProjectReference
        href: Microsoft.CodeAnalysis.ProjectReference.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectDoesNotHaveTransitiveProjectReference(ProjectId, ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1393
  summary: Throws an exception if project has a transitive reference to another project.
  syntax:
    content:
      CSharp: protected void CheckProjectDoesNotHaveTransitiveProjectReference(ProjectId fromProjectId, ProjectId toProjectId)
    parameters:
    - id: fromProjectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: toProjectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectHasMetadataReference(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1418
  summary: Throws an exception if a project does not have a specific metadata reference.
  syntax:
    content:
      CSharp: protected void CheckProjectHasMetadataReference(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectDoesNotHaveMetadataReference(ProjectId, MetadataReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.MetadataReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1429
  summary: Throws an exception if a project already has a specific metadata reference.
  syntax:
    content:
      CSharp: protected void CheckProjectDoesNotHaveMetadataReference(ProjectId projectId, MetadataReference metadataReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: metadataReference
      type:
        id: Microsoft.CodeAnalysis.MetadataReference
        name: MetadataReference
        href: Microsoft.CodeAnalysis.MetadataReference
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectHasAnalyzerReference(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1440
  summary: Throws an exception if a project does not have a specific analyzer reference.
  syntax:
    content:
      CSharp: protected void CheckProjectHasAnalyzerReference(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectDoesNotHaveAnalyzerReference(ProjectId, AnalyzerReference)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1451
  summary: Throws an exception if a project already has a specific analyzer reference.
  syntax:
    content:
      CSharp: protected void CheckProjectDoesNotHaveAnalyzerReference(ProjectId projectId, AnalyzerReference analyzerReference)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: analyzerReference
      type:
        id: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
        name: AnalyzerReference
        href: Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)
- uid: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckDocumentIsInCurrentSolution(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1462
  summary: Throws an exception if a document is not part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckDocumentIsInCurrentSolution(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckAdditionalDocumentIsInCurrentSolution(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1475
  summary: Throws an exception if an additional document is not part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckAdditionalDocumentIsInCurrentSolution(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckDocumentIsNotInCurrentSolution(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1488
  summary: Throws an exception if a document is already part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckDocumentIsNotInCurrentSolution(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckAdditionalDocumentIsNotInCurrentSolution(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1501
  summary: Throws an exception if an additional document is already part of the current solution.
  syntax:
    content:
      CSharp: protected void CheckAdditionalDocumentIsNotInCurrentSolution(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetProjectName(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1514
  summary: Gets the name to use for a project in an error message.
  syntax:
    content:
      CSharp: protected virtual string GetProjectName(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetDocumentName(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1524
  summary: Gets the name to use for a document in an error message.
  syntax:
    content:
      CSharp: protected virtual string GetDocumentName(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetAdditionalDocumentName(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Workspace/Workspace.cs
    startLine: 1534
  summary: Gets the name to use for an additional document in an error message.
  syntax:
    content:
      CSharp: protected virtual string GetAdditionalDocumentName(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CanOpenDocuments
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CanOpenDocuments
  fullName: Microsoft.CodeAnalysis.Workspace.CanOpenDocuments
  type: Property
  source:
    remote: &o1
      path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 28
  summary: True if this workspace supports manually opening and closing documents.
  syntax:
    content:
      CSharp: public virtual bool CanOpenDocuments { get; }
    parameters:
    - id: CanOpenDocuments
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.CanOpenDocuments
- uid: Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: ClearOpenDocument(DocumentId, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 84
  syntax:
    content:
      CSharp: protected void ClearOpenDocument(DocumentId documentId, bool isSolutionClosing = false)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: isSolutionClosing
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OpenDocument(DocumentId, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 140
  summary: Open the specified document in the host environment.
  syntax:
    content:
      CSharp: public virtual void OpenDocument(DocumentId documentId, bool activate = true)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: activate
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CloseDocument(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 148
  summary: Close the specified document in the host environment.
  syntax:
    content:
      CSharp: public virtual void CloseDocument(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OpenAdditionalDocument(DocumentId, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 156
  summary: Open the specified additional document in the host environment.
  syntax:
    content:
      CSharp: public virtual void OpenAdditionalDocument(DocumentId documentId, bool activate = true)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: activate
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CloseAdditionalDocument(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 164
  summary: Close the specified additional document in the host environment.
  syntax:
    content:
      CSharp: public virtual void CloseAdditionalDocument(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckCanOpenDocuments()
  fullName: Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments()
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 169
  syntax:
    content:
      CSharp: protected void CheckCanOpenDocuments()
    parameters: []
  id: Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments
- uid: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckProjectDoesNotContainOpenDocuments(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 177
  syntax:
    content:
      CSharp: protected void CheckProjectDoesNotContainOpenDocuments(ProjectId projectId)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: IsDocumentOpen(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 196
  summary: Determines if the document is currently open in the host environment.
  syntax:
    content:
      CSharp: public virtual bool IsDocumentOpen(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetOpenDocumentIds(ProjectId)
  fullName: Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 208
  summary: Gets a list of the currently opened documents.
  syntax:
    content:
      CSharp: public virtual IEnumerable<DocumentId> GetOpenDocumentIds(ProjectId projectId = null)
    parameters:
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentId}
        name: IEnumerable<DocumentId>
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)
- uid: Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetRelatedDocumentIds(SourceTextContainer)
  fullName: Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 236
  summary: >-
    Gets the ids for documents associated with a text container.

    Documents are normally associated with a text container when the documents are opened.
  syntax:
    content:
      CSharp: public virtual IEnumerable<DocumentId> GetRelatedDocumentIds(SourceTextContainer container)
    parameters:
    - id: container
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentId}
        name: IEnumerable<DocumentId>
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)
- uid: Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetDocumentIdInCurrentContext(SourceTextContainer)
  fullName: Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 266
  summary: >-
    Gets the id for the document associated with the given text container in its current context.

    Documents are normally associated with a text container when the documents are opened.
  syntax:
    content:
      CSharp: public virtual DocumentId GetDocumentIdInCurrentContext(SourceTextContainer container)
    parameters:
    - id: container
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    return:
      id: DocumentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentContextUpdated(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 330
  syntax:
    content:
      CSharp: protected void OnDocumentContextUpdated(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckDocumentIsClosed(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 363
  syntax:
    content:
      CSharp: protected void CheckDocumentIsClosed(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: CheckDocumentIsOpen(DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 373
  syntax:
    content:
      CSharp: protected void CheckDocumentIsOpen(DocumentId documentId)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
  id: Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentOpened(DocumentId, SourceTextContainer, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceTextContainer, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 393
  syntax:
    content:
      CSharp: protected internal void OnDocumentOpened(DocumentId documentId, SourceTextContainer textContainer, bool isCurrentContext = true)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    - id: isCurrentContext
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentOpened(DocumentId, SourceTextContainer, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.Text.SourceTextContainer, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 460
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentOpened(DocumentId documentId, SourceTextContainer textContainer, bool isCurrentContext = true)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    - id: isCurrentContext
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,System.Boolean)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnDocumentClosed(DocumentId, TextLoader, bool)
  fullName: Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader, bool)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 498
  syntax:
    content:
      CSharp: protected internal void OnDocumentClosed(DocumentId documentId, TextLoader reloader, bool updateActiveContext = false)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: reloader
      type:
        id: Microsoft.CodeAnalysis.TextLoader
        name: TextLoader
        href: Microsoft.CodeAnalysis.TextLoader.yml
    - id: updateActiveContext
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,System.Boolean)
- uid: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnAdditionalDocumentClosed(DocumentId, TextLoader)
  fullName: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId, Microsoft.CodeAnalysis.TextLoader)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 547
  syntax:
    content:
      CSharp: protected internal void OnAdditionalDocumentClosed(DocumentId documentId, TextLoader reloader)
    parameters:
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    - id: reloader
      type:
        id: Microsoft.CodeAnalysis.TextLoader
        name: TextLoader
        href: Microsoft.CodeAnalysis.TextLoader.yml
  id: Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)
- uid: Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: AdjustReloadedSolution(Solution, Solution)
  fullName: Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.Solution)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 634
  summary: >-
    This method is called during OnSolutionReload.  Override this method if you want to manipulate

    the reloaded solution.
  syntax:
    content:
      CSharp: protected virtual Solution AdjustReloadedSolution(Solution oldSolution, Solution reloadedSolution)
    parameters:
    - id: oldSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    - id: reloadedSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    return:
      id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution)
- uid: Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Project)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: AdjustReloadedProject(Project, Project)
  fullName: Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project, Microsoft.CodeAnalysis.Project)
  type: Method
  source:
    remote: *o1
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Editor.cs
    startLine: 650
  syntax:
    content:
      CSharp: protected virtual Project AdjustReloadedProject(Project oldProject, Project reloadedProject)
    parameters:
    - id: oldProject
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
    - id: reloadedProject
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
    return:
      id: Project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
  id: Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Project)
- uid: Microsoft.CodeAnalysis.Workspace.WorkspaceChanged
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: WorkspaceChanged
  fullName: Microsoft.CodeAnalysis.Workspace.WorkspaceChanged
  type: Event
  source:
    remote: &o2
      path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      key: e7db1294
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 20
  summary: An event raised whenever the current solution is changed.
  syntax:
    content:
      CSharp: public event EventHandler<WorkspaceChangeEventArgs> WorkspaceChanged
  id: Microsoft.CodeAnalysis.Workspace.WorkspaceChanged
- uid: Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind, Solution, Solution, ProjectId, DocumentId)
  fullName: Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind, Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.Solution, Microsoft.CodeAnalysis.ProjectId, Microsoft.CodeAnalysis.DocumentId)
  type: Method
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 33
  syntax:
    content:
      CSharp: protected Task RaiseWorkspaceChangedEventAsync(WorkspaceChangeKind kind, Solution oldSolution, Solution newSolution, ProjectId projectId = null, DocumentId documentId = null)
    parameters:
    - id: kind
      type:
        id: Microsoft.CodeAnalysis.WorkspaceChangeKind
        name: WorkspaceChangeKind
        href: Microsoft.CodeAnalysis.WorkspaceChangeKind.yml
    - id: oldSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    - id: newSolution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
    - id: projectId
      type:
        id: Microsoft.CodeAnalysis.ProjectId
        name: ProjectId
        href: Microsoft.CodeAnalysis.ProjectId.yml
    - id: documentId
      type:
        id: Microsoft.CodeAnalysis.DocumentId
        name: DocumentId
        href: Microsoft.CodeAnalysis.DocumentId.yml
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)
- uid: Microsoft.CodeAnalysis.Workspace.WorkspaceFailed
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: WorkspaceFailed
  fullName: Microsoft.CodeAnalysis.Workspace.WorkspaceFailed
  type: Event
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 69
  summary: >-
    An event raised whenever the workspace or part of its solution model

    fails to access a file or other external resource.
  syntax:
    content:
      CSharp: public event EventHandler<WorkspaceDiagnosticEventArgs> WorkspaceFailed
  id: Microsoft.CodeAnalysis.Workspace.WorkspaceFailed
- uid: Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: OnWorkspaceFailed(WorkspaceDiagnostic)
  fullName: Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)
  type: Method
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 82
  syntax:
    content:
      CSharp: protected internal virtual void OnWorkspaceFailed(WorkspaceDiagnostic diagnostic)
    parameters:
    - id: diagnostic
      type:
        id: Microsoft.CodeAnalysis.WorkspaceDiagnostic
        name: WorkspaceDiagnostic
        href: Microsoft.CodeAnalysis.WorkspaceDiagnostic.yml
  id: Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)
- uid: Microsoft.CodeAnalysis.Workspace.DocumentOpened
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: DocumentOpened
  fullName: Microsoft.CodeAnalysis.Workspace.DocumentOpened
  type: Event
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 95
  summary: An event that is fired when a documents is opened in the editor.
  syntax:
    content:
      CSharp: public event EventHandler<DocumentEventArgs> DocumentOpened
  id: Microsoft.CodeAnalysis.Workspace.DocumentOpened
- uid: Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: RaiseDocumentOpenedEventAsync(Document)
  fullName: Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 108
  syntax:
    content:
      CSharp: protected Task RaiseDocumentOpenedEventAsync(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)
- uid: Microsoft.CodeAnalysis.Workspace.DocumentClosed
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: DocumentClosed
  fullName: Microsoft.CodeAnalysis.Workspace.DocumentClosed
  type: Event
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 128
  summary: An event that is fired when a document is closed in the editor.
  syntax:
    content:
      CSharp: public event EventHandler<DocumentEventArgs> DocumentClosed
  id: Microsoft.CodeAnalysis.Workspace.DocumentClosed
- uid: Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: RaiseDocumentClosedEventAsync(Document)
  fullName: Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 141
  syntax:
    content:
      CSharp: protected Task RaiseDocumentClosedEventAsync(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)
- uid: Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: RaiseDocumentActiveContextChangedEventAsync(Document)
  fullName: Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote: *o2
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Events.cs
    startLine: 175
  syntax:
    content:
      CSharp: protected Task RaiseDocumentActiveContextChangedEventAsync(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    return:
      id: Task
      type:
        id: System.Threading.Tasks.Task
        name: Task
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)
- uid: Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.Workspace@)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: TryGetWorkspace(SourceTextContainer, out Workspace)
  fullName: Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer, out Microsoft.CodeAnalysis.Workspace)
  type: Method
  source:
    remote: *o3
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
    startLine: 17
  summary: Gets the workspace associated with the specific text container.
  syntax:
    content:
      CSharp: public static bool TryGetWorkspace(SourceTextContainer textContainer, out Workspace workspace)
    parameters:
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    - id: workspace
      type:
        id: Microsoft.CodeAnalysis.Workspace
        name: Workspace
        href: Microsoft.CodeAnalysis.Workspace.yml
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.Workspace@)
- uid: Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: RegisterText(SourceTextContainer)
  fullName: Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  type: Method
  source:
    remote: *o3
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
    startLine: 33
  summary: Register a correspondence between a text container and a workspace.
  syntax:
    content:
      CSharp: protected void RegisterText(SourceTextContainer textContainer)
    parameters:
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
  id: Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
- uid: Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: UnregisterText(SourceTextContainer)
  fullName: Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  type: Method
  source:
    remote: *o3
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
    startLine: 46
  summary: Unregister a correspondence between a text container and a workspace.
  syntax:
    content:
      CSharp: protected void UnregisterText(SourceTextContainer textContainer)
    parameters:
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
  id: Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)
- uid: Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  href: Microsoft.CodeAnalysis.Workspace.yml
  name: GetWorkspaceRegistration(SourceTextContainer)
  fullName: Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)
  type: Method
  source:
    remote: *o3
    path: src/Workspaces/Core/Portable/Workspace/Workspace_Registration.cs
    startLine: 66
  summary: Returns a [Microsoft.CodeAnalysis.WorkspaceRegistration](Microsoft.CodeAnalysis.WorkspaceRegistration.yml) for a given text container.
  syntax:
    content:
      CSharp: public static WorkspaceRegistration GetWorkspaceRegistration(SourceTextContainer textContainer)
    parameters:
    - id: textContainer
      type:
        id: Microsoft.CodeAnalysis.Text.SourceTextContainer
        name: SourceTextContainer
        href: Microsoft.CodeAnalysis.Text.SourceTextContainer
    return:
      id: WorkspaceRegistration
      type:
        id: Microsoft.CodeAnalysis.WorkspaceRegistration
        name: WorkspaceRegistration
        href: Microsoft.CodeAnalysis.WorkspaceRegistration.yml
  id: Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)
