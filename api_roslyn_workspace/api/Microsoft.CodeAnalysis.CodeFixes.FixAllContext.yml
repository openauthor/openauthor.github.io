items:
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: FixAllContext
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: v1.0-12-gef085ea
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 16
  summary: Context for "Fix all occurrences" code fixes provided by an [Microsoft.CodeAnalysis.CodeFixes.FixAllProvider](Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.yml).
  syntax:
    content:
      CSharp: public class FixAllContext
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext
  children:
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  - Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: Solution
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 24
  summary: Solution to fix all occurrences.
  syntax:
    content:
      CSharp: public Solution Solution { get; }
    parameters:
    - id: Solution
      type:
        id: Microsoft.CodeAnalysis.Solution
        name: Solution
        href: Microsoft.CodeAnalysis.Solution.yml
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: Project
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 29
  summary: Project within which fix all occurrences was triggered.
  syntax:
    content:
      CSharp: public Project Project { get; private set; }
    parameters:
    - id: Project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: Document
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 34
  summary: Document within which fix all occurrences was triggered.
  syntax:
    content:
      CSharp: public Document Document { get; private set; }
    parameters:
    - id: Document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: CodeFixProvider
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 39
  summary: Underlying [Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider](Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.yml) which triggered this fix all.
  syntax:
    content:
      CSharp: public CodeFixProvider CodeFixProvider { get; private set; }
    parameters:
    - id: CodeFixProvider
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider
        name: CodeFixProvider
        href: Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.yml
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: Scope
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 44
  summary: FixAllScope to fix all occurrences.
  syntax:
    content:
      CSharp: public FixAllScope Scope { get; private set; }
    parameters:
    - id: Scope
      type:
        id: Microsoft.CodeAnalysis.CodeFixes.FixAllScope
        name: FixAllScope
        href: Microsoft.CodeAnalysis.CodeFixes.FixAllScope.yml
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: DiagnosticIds
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 51
  summary: >-
    Diagnostic Ids to fix.

    Note that [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml), [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml) and [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml) methods

    return only diagnostics whose IDs are contained in this set of Ids.
  syntax:
    content:
      CSharp: public ImmutableHashSet<string> DiagnosticIds { get; private set; }
    parameters:
    - id: DiagnosticIds
      type:
        id: System.Collections.Immutable.ImmutableHashSet{System.String}
        name: System.Collections.Immutable.ImmutableHashSet{System.String}
        isExternal: true
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: CodeActionEquivalenceKey
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 56
  summary: The [Microsoft.CodeAnalysis.CodeActions.CodeAction.EquivalenceKey](Microsoft.CodeAnalysis.CodeActions.CodeAction.yml) value expected of a [Microsoft.CodeAnalysis.CodeActions.CodeAction](Microsoft.CodeAnalysis.CodeActions.CodeAction.yml) participating in this fix all.
  syntax:
    content:
      CSharp: public string CodeActionEquivalenceKey { get; private set; }
    parameters:
    - id: CodeActionEquivalenceKey
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: CancellationToken
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken
  type: Property
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 61
  summary: CancellationToken for fix all session.
  syntax:
    content:
      CSharp: public CancellationToken CancellationToken { get; private set; }
    parameters:
    - id: CancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: GetDocumentDiagnosticsAsync(Document)
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 114
  summary: Gets all the diagnostics in the given document filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml).
  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetDocumentDiagnosticsAsync(Document document)
    parameters:
    - id: document
      type:
        id: Microsoft.CodeAnalysis.Document
        name: Document
        href: Microsoft.CodeAnalysis.Document.yml
    return:
      id: Task
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: GetProjectDiagnosticsAsync(Project)
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 131
  summary: Gets all the project-level diagnostics, i.e. diagnostics with no source location, in the given project filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml).
  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetProjectDiagnosticsAsync(Project project)
    parameters:
    - id: project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
    return:
      id: Task
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: GetAllDiagnosticsAsync(Project)
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 140
  summary: >-
    Gets all the diagnostics in the given project filtered by [Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml).

    This includes both document-level diagnostics for all documents in the given project and project-level diagnostics, i.e. diagnostics with no source location, in the given project.
  syntax:
    content:
      CSharp: public async Task<ImmutableArray<Diagnostic>> GetAllDiagnosticsAsync(Project project)
    parameters:
    - id: project
      type:
        id: Microsoft.CodeAnalysis.Project
        name: Project
        href: Microsoft.CodeAnalysis.Project.yml
    return:
      id: Task
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)
- uid: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)
  href: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml
  name: WithCancellationToken(CancellationToken)
  fullName: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/CodeFixes/FixAllOccurrences/FixAllContext.cs
    startLine: 167
  summary: Gets a new [Microsoft.CodeAnalysis.CodeFixes.FixAllContext](Microsoft.CodeAnalysis.CodeFixes.FixAllContext.yml) with the given cancellationToken.
  syntax:
    content:
      CSharp: public FixAllContext WithCancellationToken(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type:
        id: System.Threading.CancellationToken
        name: System.Threading.CancellationToken
        isExternal: true
    return:
      id: FixAllContext
  id: Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)
