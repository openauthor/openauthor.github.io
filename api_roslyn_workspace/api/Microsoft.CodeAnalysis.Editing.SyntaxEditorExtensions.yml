items:
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SyntaxEditorExtensions
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://github.com/chenkennt/roslyn.git
      description: v1.0-12-gef085ea
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 12
  syntax:
    content:
      CSharp: public static class SyntaxEditorExtensions
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions
  children:
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  - Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetAccessibility(SyntaxEditor, SyntaxNode, Accessibility)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.Accessibility)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 14
  syntax:
    content:
      CSharp: public static void SetAccessibility(this SyntaxEditor editor, SyntaxNode declaration, Accessibility accessibility)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: accessibility
      type:
        id: Microsoft.CodeAnalysis.Accessibility
        name: Accessibility
        href: Microsoft.CodeAnalysis.Accessibility
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetModifiers(SyntaxEditor, SyntaxNode, DeclarationModifiers)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.Editing.DeclarationModifiers)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 19
  syntax:
    content:
      CSharp: public static void SetModifiers(this SyntaxEditor editor, SyntaxNode declaration, DeclarationModifiers modifiers)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: modifiers
      type:
        id: Microsoft.CodeAnalysis.Editing.DeclarationModifiers
        name: DeclarationModifiers
        href: Microsoft.CodeAnalysis.Editing.DeclarationModifiers.yml
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetName(SyntaxEditor, SyntaxNode, string)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, string)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 24
  syntax:
    content:
      CSharp: public static void SetName(this SyntaxEditor editor, SyntaxNode declaration, string name)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: name
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetType(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 29
  syntax:
    content:
      CSharp: public static void SetType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode type)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: type
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetTypeParameters(SyntaxEditor, SyntaxNode, IEnumerable<string>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 34
  syntax:
    content:
      CSharp: public static void SetTypeParameters(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<string> typeParameters)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: typeParameters
      type:
        id: System.Collections.Generic.IEnumerable{System.String}
        name: System.Collections.Generic.IEnumerable{System.String}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetTypeConstraint(SyntaxEditor, SyntaxNode, string, SpecialTypeConstraintKind, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, string, Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 39
  syntax:
    content:
      CSharp: public static void SetTypeConstraint(this SyntaxEditor editor, SyntaxNode declaration, string typeParameterName, SpecialTypeConstraintKind kind, IEnumerable<SyntaxNode> types)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: typeParameterName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: kind
      type:
        id: Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind
        name: SpecialTypeConstraintKind
        href: Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind.yml
    - id: types
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetExpression(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 44
  syntax:
    content:
      CSharp: public static void SetExpression(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode expression)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: expression
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetStatements(SyntaxEditor, SyntaxNode, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 49
  syntax:
    content:
      CSharp: public static void SetStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetGetAccessorStatements(SyntaxEditor, SyntaxNode, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 54
  syntax:
    content:
      CSharp: public static void SetGetAccessorStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: SetSetAccessorStatements(SyntaxEditor, SyntaxNode, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 59
  syntax:
    content:
      CSharp: public static void SetSetAccessorStatements(this SyntaxEditor editor, SyntaxNode declaration, IEnumerable<SyntaxNode> statements)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: statements
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddParameter(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 64
  syntax:
    content:
      CSharp: public static void AddParameter(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode parameter)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: parameter
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddAttribute(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 69
  syntax:
    content:
      CSharp: public static void AddAttribute(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode attribute)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: attribute
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddReturnAttribute(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 74
  syntax:
    content:
      CSharp: public static void AddReturnAttribute(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode attribute)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: attribute
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddAttributeArgument(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 79
  syntax:
    content:
      CSharp: public static void AddAttributeArgument(this SyntaxEditor editor, SyntaxNode attributeDeclaration, SyntaxNode attributeArgument)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: attributeDeclaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: attributeArgument
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddMember(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 84
  syntax:
    content:
      CSharp: public static void AddMember(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode member)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: member
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: InsertMembers(SyntaxEditor, SyntaxNode, int, IEnumerable<SyntaxNode>)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, int, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxNode>)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 89
  syntax:
    content:
      CSharp: public static void InsertMembers(this SyntaxEditor editor, SyntaxNode declaration, int index, IEnumerable<SyntaxNode> members)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: index
      type:
        id: System.Int32
        name: System.Int32
        isExternal: true
    - id: members
      type:
        id: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        name: System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode}
        isExternal: true
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddInterfaceType(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 94
  syntax:
    content:
      CSharp: public static void AddInterfaceType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode interfaceType)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: interfaceType
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
- uid: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
  href: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.yml
  name: AddBaseType(SyntaxEditor, SyntaxNode, SyntaxNode)
  fullName: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor, Microsoft.CodeAnalysis.SyntaxNode, Microsoft.CodeAnalysis.SyntaxNode)
  type: Method
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Editing/SyntaxEditorExtensions.cs
    startLine: 99
  syntax:
    content:
      CSharp: public static void AddBaseType(this SyntaxEditor editor, SyntaxNode declaration, SyntaxNode baseType)
    parameters:
    - id: editor
      type:
        id: Microsoft.CodeAnalysis.Editing.SyntaxEditor
        name: SyntaxEditor
        href: Microsoft.CodeAnalysis.Editing.SyntaxEditor.yml
    - id: declaration
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
    - id: baseType
      type:
        id: Microsoft.CodeAnalysis.SyntaxNode
        name: SyntaxNode
        href: Microsoft.CodeAnalysis.SyntaxNode
  id: Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)
