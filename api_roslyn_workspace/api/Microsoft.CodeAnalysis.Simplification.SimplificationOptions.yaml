id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions
href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
name:
  CSharp: SimplificationOptions
qualifiedName:
  CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions
type: Class
source:
  remote: &o0
    branch: master
    repo: https://github.com/vicancy/roslyn
  path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
  startLine: 9
summary: This Object contains the options that needs to be drilled down to the Simplification Engine
syntax:
  content:
    CSharp: public class SimplificationOptions
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferAliasToQualification
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 18
  summary: >-
    This option tells the simplification engine if the Qualified Name should be replaced by Alias

    if the user had initially not used the Alias
  syntax:
    content:
      CSharp: PreferAliasToQualification
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferOmittingModuleNamesInQualification
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 24
  summary: >-
    This option influences the name reduction of members of a module in VB. If set to true, the

    name reducer will e.g. reduce Namespace.Module.Member to Namespace.Member.
  syntax:
    content:
      CSharp: PreferOmittingModuleNamesInQualification
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferImplicitTypeInference
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 29
  summary: This option says that if we should simplify the Generic Name which has the type argument inferred
  syntax:
    content:
      CSharp: PreferImplicitTypeInference
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferImplicitTypeInLocalDeclaration
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 34
  summary: This option says if we should simplify the Explicit Type in Local Declarations
  syntax:
    content:
      CSharp: PreferImplicitTypeInLocalDeclaration
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: AllowSimplificationToGenericType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 39
  summary: This option says if we should simplify to NonGeneric Name rather than GenericName
  syntax:
    content:
      CSharp: AllowSimplificationToGenericType
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: AllowSimplificationToBaseType
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 44
  summary: This option says if we should simplify from Derived types to Base types in Static Member Accesses
  syntax:
    content:
      CSharp: AllowSimplificationToBaseType
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: QualifyMemberAccessWithThisOrMe
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 49
  summary: This option says if we should simplify away the this. or Me. in member access expression
  syntax:
    content:
      CSharp: QualifyMemberAccessWithThisOrMe
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInDeclaration
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 54
  summary: This option says if we should prefer keyword for Intrinsic Predefined Types in Declarations
  syntax:
    content:
      CSharp: PreferIntrinsicPredefinedTypeKeywordInDeclaration
- id: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  href: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.yaml
  name:
    CSharp: PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  qualifiedName:
    CSharp: Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess
  type: Field
  source:
    remote: *o0
    path: src/Workspaces/Core/Portable/Simplification/SimplificationOption.cs
    startLine: 59
  summary: This option says if we should prefer keyword for Intrinsic Predefined Types in Member Access Expression
  syntax:
    content:
      CSharp: PreferIntrinsicPredefinedTypeKeywordInMemberAccess
