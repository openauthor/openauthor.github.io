id: System.Web.Mvc.ActionExecutingContext
href: System.Web.Mvc.ActionExecutingContext.yaml
name:
  CSharp: ActionExecutingContext
qualifiedName:
  CSharp: System.Web.Mvc.ActionExecutingContext
type: Class
source:
  remote: &o0
    branch: master
    repo: https://git01.codeplex.com/aspnetwebstack
    description: fbv1.1-beta-39-g5fa60ca
  path: src/System.Web.Mvc/ActionExecutingContext.cs
  startLine: 7
syntax:
  content:
    CSharp: public class ActionExecutingContext
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.Web.Mvc.ControllerContext
  name: ControllerContext
  href: System.Web.Mvc.ControllerContext.yaml
items:
- id: System.Web.Mvc.ActionExecutingContext.#ctor
  href: System.Web.Mvc.ActionExecutingContext.yaml
  name:
    CSharp: ActionExecutingContext
  qualifiedName:
    CSharp: System.Web.Mvc.ActionExecutingContext.ActionExecutingContext
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/ActionExecutingContext.cs
    startLine: 10
  syntax:
    content:
      CSharp: public ActionExecutingContext()
    parameters: []
    return:
      id: Void
- id: System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})
  href: System.Web.Mvc.ActionExecutingContext.yaml
  name:
    CSharp: ActionExecutingContext(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})
  qualifiedName:
    CSharp: System.Web.Mvc.ActionExecutingContext.ActionExecutingContext(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/ActionExecutingContext.cs
    startLine: 14
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors", Justification = "The virtual property setters are only to support mocking frameworks, in which case this constructor shouldn''t be called anyway.")] public ActionExecutingContext(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary<string, object> actionParameters): base (controllerContext)'
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yaml
    - id: actionDescriptor
      type:
        id: System.Web.Mvc.ActionDescriptor
        name: ActionDescriptor
        href: System.Web.Mvc.ActionDescriptor.yaml
    - id: actionParameters
      type:
        id: System.Collections.Generic.IDictionary{System.String,System.Object}
        name: System.Collections.Generic.IDictionary{System.String,System.Object}
        isExternal: true
    return:
      id: Void
- id: System.Web.Mvc.ActionExecutingContext.ActionDescriptor
  href: System.Web.Mvc.ActionExecutingContext.yaml
  name:
    CSharp: ActionDescriptor
  qualifiedName:
    CSharp: System.Web.Mvc.ActionExecutingContext.ActionDescriptor
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ActionExecutingContext.cs
    startLine: 31
  syntax:
    content:
      CSharp: public virtual ActionDescriptor ActionDescriptor { get; set; }
    parameters:
    - id: ActionDescriptor
      type:
        id: System.Web.Mvc.ActionDescriptor
        name: ActionDescriptor
        href: System.Web.Mvc.ActionDescriptor.yaml
- id: System.Web.Mvc.ActionExecutingContext.ActionParameters
  href: System.Web.Mvc.ActionExecutingContext.yaml
  name:
    CSharp: ActionParameters
  qualifiedName:
    CSharp: System.Web.Mvc.ActionExecutingContext.ActionParameters
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ActionExecutingContext.cs
    startLine: 33
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly", Justification = "The property setter is only here to support mocking this type and should not be called at runtime.")] public virtual IDictionary<string, object> ActionParameters { get; set; }'
    parameters:
    - id: ActionParameters
      type:
        id: System.Collections.Generic.IDictionary{System.String,System.Object}
        name: System.Collections.Generic.IDictionary{System.String,System.Object}
        isExternal: true
- id: System.Web.Mvc.ActionExecutingContext.Result
  href: System.Web.Mvc.ActionExecutingContext.yaml
  name:
    CSharp: Result
  qualifiedName:
    CSharp: System.Web.Mvc.ActionExecutingContext.Result
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ActionExecutingContext.cs
    startLine: 36
  syntax:
    content:
      CSharp: public ActionResult Result { get; set; }
    parameters:
    - id: Result
      type:
        id: System.Web.Mvc.ActionResult
        name: ActionResult
        href: System.Web.Mvc.ActionResult.yaml
