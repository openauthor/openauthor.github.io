items:
- uid: System.Web.Mvc.AssociatedMetadataProvider
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: AssociatedMetadataProvider
  fullName: System.Web.Mvc.AssociatedMetadataProvider
  type: Class
  source:
    remote: &o0
      path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      key: 5fa60ca3
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 14
  syntax:
    content:
      CSharp: 'public abstract class AssociatedMetadataProvider : ModelMetadataProvider'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  - id: System.Web.Mvc.ModelMetadataProvider
    name: ModelMetadataProvider
    href: System.Web.Mvc.ModelMetadataProvider.yml
  id: System.Web.Mvc.AssociatedMetadataProvider
  children:
  - System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  - System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  - System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  - System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  - System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  - System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
- uid: System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: CreateMetadata(IEnumerable<Attribute>, Type, Func<object>, Type, string)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable<System.Attribute>, System.Type, System.Func<object>, System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 24
  syntax:
    content:
      CSharp: protected abstract ModelMetadata CreateMetadata(IEnumerable<Attribute> attributes, Type containerType, Func<object> modelAccessor, Type modelType, string propertyName)
    parameters:
    - id: attributes
      type:
        id: System.Collections.Generic.IEnumerable{System.Attribute}
        name: IEnumerable<Attribute>
        isExternal: true
    - id: containerType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: modelAccessor
      type:
        id: System.Func{System.Object}
        name: Func<object>
        isExternal: true
    - id: modelType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: propertyName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: ModelMetadata
      type:
        id: System.Web.Mvc.ModelMetadata
        name: ModelMetadata
        href: System.Web.Mvc.ModelMetadata.yml
  id: System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)
- uid: System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: FilterAttributes(Type, PropertyDescriptor, IEnumerable<Attribute>)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type, System.ComponentModel.PropertyDescriptor, System.Collections.Generic.IEnumerable<System.Attribute>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 26
  syntax:
    content:
      CSharp: protected virtual IEnumerable<Attribute> FilterAttributes(Type containerType, PropertyDescriptor propertyDescriptor, IEnumerable<Attribute> attributes)
    parameters:
    - id: containerType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: propertyDescriptor
      type:
        id: System.ComponentModel.PropertyDescriptor
        name: PropertyDescriptor
        isExternal: true
    - id: attributes
      type:
        id: System.Collections.Generic.IEnumerable{System.Attribute}
        name: IEnumerable<Attribute>
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Attribute}
        name: IEnumerable<Attribute>
        isExternal: true
  id: System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})
- uid: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: GetMetadataForProperties(object, Type)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(object, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 36
  syntax:
    content:
      CSharp: public override IEnumerable<ModelMetadata> GetMetadataForProperties(object container, Type containerType)
    parameters:
    - id: container
      type:
        id: System.Object
        name: object
        isExternal: true
    - id: containerType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: IEnumerable
      type:
        id: System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelMetadata}
        name: IEnumerable<ModelMetadata>
        isExternal: true
  id: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)
- uid: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: GetMetadataForProperty(Func<object>, Type, string)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func<object>, System.Type, string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 61
  syntax:
    content:
      CSharp: public override ModelMetadata GetMetadataForProperty(Func<object> modelAccessor, Type containerType, string propertyName)
    parameters:
    - id: modelAccessor
      type:
        id: System.Func{System.Object}
        name: Func<object>
        isExternal: true
    - id: containerType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: propertyName
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: ModelMetadata
      type:
        id: System.Web.Mvc.ModelMetadata
        name: ModelMetadata
        href: System.Web.Mvc.ModelMetadata.yml
  id: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)
- uid: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: GetMetadataForProperty(Func<object>, Type, PropertyDescriptor)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func<object>, System.Type, System.ComponentModel.PropertyDescriptor)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 86
  syntax:
    content:
      CSharp: protected virtual ModelMetadata GetMetadataForProperty(Func<object> modelAccessor, Type containerType, PropertyDescriptor propertyDescriptor)
    parameters:
    - id: modelAccessor
      type:
        id: System.Func{System.Object}
        name: Func<object>
        isExternal: true
    - id: containerType
      type:
        id: System.Type
        name: Type
        isExternal: true
    - id: propertyDescriptor
      type:
        id: System.ComponentModel.PropertyDescriptor
        name: PropertyDescriptor
        isExternal: true
    return:
      id: ModelMetadata
      type:
        id: System.Web.Mvc.ModelMetadata
        name: ModelMetadata
        href: System.Web.Mvc.ModelMetadata.yml
  id: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)
- uid: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: GetMetadataForType(Func<object>, Type)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func<object>, System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 94
  syntax:
    content:
      CSharp: public override ModelMetadata GetMetadataForType(Func<object> modelAccessor, Type modelType)
    parameters:
    - id: modelAccessor
      type:
        id: System.Func{System.Object}
        name: Func<object>
        isExternal: true
    - id: modelType
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: ModelMetadata
      type:
        id: System.Web.Mvc.ModelMetadata
        name: ModelMetadata
        href: System.Web.Mvc.ModelMetadata.yml
  id: System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)
- uid: System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  href: System.Web.Mvc.AssociatedMetadataProvider.yml
  name: GetTypeDescriptor(Type)
  fullName: System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AssociatedMetadataProvider.cs
    startLine: 112
  syntax:
    content:
      CSharp: protected virtual ICustomTypeDescriptor GetTypeDescriptor(Type type)
    parameters:
    - id: type
      type:
        id: System.Type
        name: Type
        isExternal: true
    return:
      id: ICustomTypeDescriptor
      type:
        id: System.ComponentModel.ICustomTypeDescriptor
        name: ICustomTypeDescriptor
        isExternal: true
  id: System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)
