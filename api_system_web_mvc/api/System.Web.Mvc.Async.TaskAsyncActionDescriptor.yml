items:
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: TaskAsyncActionDescriptor
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      description: fbv1.1-beta-39-g5fa60ca
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 19
  summary: When an action method returns either Task or Task{T} the TaskAsyncActionDescriptor provides information about the action.
  syntax:
    content:
      CSharp: public class TaskAsyncActionDescriptor
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.Web.Mvc.ActionDescriptor
    name: ActionDescriptor
    href: System.Web.Mvc.ActionDescriptor.yml
  - id: System.Web.Mvc.Async.AsyncActionDescriptor
    name: AsyncActionDescriptor
    href: System.Web.Mvc.Async.AsyncActionDescriptor.yml
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor
  children:
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)
  - System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: TaskAsyncActionDescriptor(MethodInfo, string, ControllerDescriptor)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskAsyncActionDescriptor(System.Reflection.MethodInfo, string, System.Web.Mvc.ControllerDescriptor)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 30
  syntax:
    content:
      CSharp: 'public TaskAsyncActionDescriptor(MethodInfo taskMethodInfo, string actionName, ControllerDescriptor controllerDescriptor): this (taskMethodInfo, actionName, controllerDescriptor, validateMethod: true)'
    parameters:
    - id: taskMethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: System.Reflection.MethodInfo
        isExternal: true
    - id: actionName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: ActionName
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 65
  syntax:
    content:
      CSharp: public override string ActionName { get; }
    parameters:
    - id: ActionName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: TaskMethodInfo
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 70
  syntax:
    content:
      CSharp: public MethodInfo TaskMethodInfo { get; private set; }
    parameters:
    - id: TaskMethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: System.Reflection.MethodInfo
        isExternal: true
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: ControllerDescriptor
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 72
  syntax:
    content:
      CSharp: public override ControllerDescriptor ControllerDescriptor { get; }
    parameters:
    - id: ControllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: MethodInfo
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 77
  syntax:
    content:
      CSharp: public MethodInfo MethodInfo { get; }
    parameters:
    - id: MethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: System.Reflection.MethodInfo
        isExternal: true
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: UniqueId
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 82
  syntax:
    content:
      CSharp: public override string UniqueId { get; }
    parameters:
    - id: UniqueId
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: BeginExecute(ControllerContext, IDictionary<string, object>, AsyncCallback, object)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext, System.Collections.Generic.IDictionary<string, object>, System.AsyncCallback, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 94
  syntax:
    content:
      CSharp: '[SuppressMessage("Microsoft.Web.FxCop", "MW1201:DoNotCallProblematicMethodsOnTask", Justification = "This is commented in great detail.")] public override IAsyncResult BeginExecute(ControllerContext controllerContext, IDictionary<string, object> parameters, AsyncCallback callback, object state)'
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yml
    - id: parameters
      type:
        id: System.Collections.Generic.IDictionary{System.String,System.Object}
        name: System.Collections.Generic.IDictionary{System.String,System.Object}
        isExternal: true
    - id: callback
      type:
        id: System.AsyncCallback
        name: System.AsyncCallback
        isExternal: true
    - id: state
      type:
        id: System.Object
        name: System.Object
        isExternal: true
    return:
      id: IAsyncResult
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: Execute(ControllerContext, IDictionary<string, object>)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 211
  syntax:
    content:
      CSharp: public override object Execute(ControllerContext controllerContext, IDictionary<string, object> parameters)
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yml
    - id: parameters
      type:
        id: System.Collections.Generic.IDictionary{System.String,System.Object}
        name: System.Collections.Generic.IDictionary{System.String,System.Object}
        isExternal: true
    return:
      id: Object
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: EndExecute(IAsyncResult)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 219
  syntax:
    content:
      CSharp: public override object EndExecute(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type:
        id: System.IAsyncResult
        name: System.IAsyncResult
        isExternal: true
    return:
      id: Object
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: GetCustomAttributes(bool)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 261
  syntax:
    content:
      CSharp: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return: {}
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: GetCustomAttributes(Type, bool)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 266
  syntax:
    content:
      CSharp: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return: {}
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: GetParameters()
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 271
  syntax:
    content:
      CSharp: public override ParameterDescriptor[] GetParameters()
    parameters: []
    return: {}
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: GetSelectors()
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 276
  syntax:
    content:
      CSharp: public override ICollection<ActionSelector> GetSelectors()
    parameters: []
    return:
      id: ICollection
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: IsDefined(Type, bool)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 286
  syntax:
    content:
      CSharp: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: Boolean
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)
- uid: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)
  href: System.Web.Mvc.Async.TaskAsyncActionDescriptor.yml
  name: GetFilterAttributes(bool)
  fullName: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Async/TaskAsyncActionDescriptor.cs
    startLine: 291
  syntax:
    content:
      CSharp: public override IEnumerable<FilterAttribute> GetFilterAttributes(bool useCache)
    parameters:
    - id: useCache
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: IEnumerable
  id: System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)
