id: System.Web.Mvc.AuthorizeAttribute
href: System.Web.Mvc.AuthorizeAttribute.yaml
name:
  CSharp: AuthorizeAttribute
qualifiedName:
  CSharp: System.Web.Mvc.AuthorizeAttribute
type: Class
source:
  remote: &o0
    branch: master
    repo: https://git01.codeplex.com/aspnetwebstack
    description: fbv1.1-beta-39-g5fa60ca
  path: src/System.Web.Mvc/AuthorizeAttribute.cs
  startLine: 9
syntax:
  content:
    CSharp: public class AuthorizeAttribute
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
- id: System.Attribute
  name: System.Attribute
  isExternal: true
- id: System.Web.Mvc.FilterAttribute
  name: FilterAttribute
  href: System.Web.Mvc.FilterAttribute.yaml
items:
- id: System.Web.Mvc.AuthorizeAttribute.Roles
  href: System.Web.Mvc.AuthorizeAttribute.yaml
  name:
    CSharp: Roles
  qualifiedName:
    CSharp: System.Web.Mvc.AuthorizeAttribute.Roles
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/AuthorizeAttribute.cs
    startLine: 21
  syntax:
    content:
      CSharp: public string Roles { get; set; }
    parameters:
    - id: Roles
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.Web.Mvc.AuthorizeAttribute.TypeId
  href: System.Web.Mvc.AuthorizeAttribute.yaml
  name:
    CSharp: TypeId
  qualifiedName:
    CSharp: System.Web.Mvc.AuthorizeAttribute.TypeId
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/AuthorizeAttribute.cs
    startLine: 31
  syntax:
    content:
      CSharp: public override object TypeId { get; }
    parameters:
    - id: TypeId
      type:
        id: System.Object
        name: System.Object
        isExternal: true
- id: System.Web.Mvc.AuthorizeAttribute.Users
  href: System.Web.Mvc.AuthorizeAttribute.yaml
  name:
    CSharp: Users
  qualifiedName:
    CSharp: System.Web.Mvc.AuthorizeAttribute.Users
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/AuthorizeAttribute.cs
    startLine: 36
  syntax:
    content:
      CSharp: public string Users { get; set; }
    parameters:
    - id: Users
      type:
        id: System.String
        name: System.String
        isExternal: true
- id: System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)
  href: System.Web.Mvc.AuthorizeAttribute.yaml
  name:
    CSharp: OnAuthorization
  qualifiedName:
    CSharp: System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/AuthorizeAttribute.cs
    startLine: 78
  syntax:
    content:
      CSharp: public virtual void OnAuthorization(AuthorizationContext filterContext)
    parameters:
    - id: filterContext
      type:
        id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        href: System.Web.Mvc.AuthorizationContext.yaml
    return:
      id: Void
