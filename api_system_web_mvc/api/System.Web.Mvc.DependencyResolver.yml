items:
- uid: System.Web.Mvc.DependencyResolver
  href: System.Web.Mvc.DependencyResolver.yml
  name: DependencyResolver
  fullName: System.Web.Mvc.DependencyResolver
  type: Class
  source:
    remote: &o0
      path: src/System.Web.Mvc/DependencyResolver.cs
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      key: 5fa60ca3
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 12
  syntax:
    content:
      CSharp: public class DependencyResolver
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Web.Mvc.DependencyResolver
  children:
  - System.Web.Mvc.DependencyResolver.#ctor
  - System.Web.Mvc.DependencyResolver.Current
  - System.Web.Mvc.DependencyResolver.InnerCurrent
  - System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)
  - System.Web.Mvc.DependencyResolver.SetResolver(System.Object)
  - System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
  - System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)
  - System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)
  - System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
- uid: System.Web.Mvc.DependencyResolver.#ctor
  href: System.Web.Mvc.DependencyResolver.yml
  name: DependencyResolver()
  fullName: System.Web.Mvc.DependencyResolver.DependencyResolver()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 23
  syntax:
    content:
      CSharp: public DependencyResolver()
    parameters: []
  id: System.Web.Mvc.DependencyResolver.#ctor
- uid: System.Web.Mvc.DependencyResolver.Current
  href: System.Web.Mvc.DependencyResolver.yml
  name: Current
  fullName: System.Web.Mvc.DependencyResolver.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 28
  syntax:
    content:
      CSharp: public static IDependencyResolver Current { get; }
    parameters:
    - id: Current
      type:
        id: System.Web.Mvc.IDependencyResolver
        name: IDependencyResolver
        href: System.Web.Mvc.IDependencyResolver.yml
  id: System.Web.Mvc.DependencyResolver.Current
- uid: System.Web.Mvc.DependencyResolver.InnerCurrent
  href: System.Web.Mvc.DependencyResolver.yml
  name: InnerCurrent
  fullName: System.Web.Mvc.DependencyResolver.InnerCurrent
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 38
  syntax:
    content:
      CSharp: public IDependencyResolver InnerCurrent { get; }
    parameters:
    - id: InnerCurrent
      type:
        id: System.Web.Mvc.IDependencyResolver
        name: IDependencyResolver
        href: System.Web.Mvc.IDependencyResolver.yml
  id: System.Web.Mvc.DependencyResolver.InnerCurrent
- uid: System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)
  href: System.Web.Mvc.DependencyResolver.yml
  name: SetResolver(IDependencyResolver)
  fullName: System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 51
  syntax:
    content:
      CSharp: public static void SetResolver(IDependencyResolver resolver)
    parameters:
    - id: resolver
      type:
        id: System.Web.Mvc.IDependencyResolver
        name: IDependencyResolver
        href: System.Web.Mvc.IDependencyResolver.yml
  id: System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)
- uid: System.Web.Mvc.DependencyResolver.SetResolver(System.Object)
  href: System.Web.Mvc.DependencyResolver.yml
  name: SetResolver(object)
  fullName: System.Web.Mvc.DependencyResolver.SetResolver(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 56
  syntax:
    content:
      CSharp: public static void SetResolver(object commonServiceLocator)
    parameters:
    - id: commonServiceLocator
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Web.Mvc.DependencyResolver.SetResolver(System.Object)
- uid: System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
  href: System.Web.Mvc.DependencyResolver.yml
  name: SetResolver(Func<Type, object>, Func<Type, IEnumerable<object>>)
  fullName: System.Web.Mvc.DependencyResolver.SetResolver(System.Func<System.Type, object>, System.Func<System.Type, System.Collections.Generic.IEnumerable<object>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 61
  syntax:
    content:
      CSharp: public static void SetResolver(Func<Type, object> getService, Func<Type, IEnumerable<object>> getServices)
    parameters:
    - id: getService
      type:
        id: System.Func{System.Type,System.Object}
        name: Func<Type, object>
        isExternal: true
    - id: getServices
      type:
        id: System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}}
        name: Func<Type, IEnumerable<object>>
        isExternal: true
  id: System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
- uid: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)
  href: System.Web.Mvc.DependencyResolver.yml
  name: InnerSetResolver(IDependencyResolver)
  fullName: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 67
  syntax:
    content:
      CSharp: public void InnerSetResolver(IDependencyResolver resolver)
    parameters:
    - id: resolver
      type:
        id: System.Web.Mvc.IDependencyResolver
        name: IDependencyResolver
        href: System.Web.Mvc.IDependencyResolver.yml
  id: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)
- uid: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)
  href: System.Web.Mvc.DependencyResolver.yml
  name: InnerSetResolver(object)
  fullName: System.Web.Mvc.DependencyResolver.InnerSetResolver(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 78
  syntax:
    content:
      CSharp: public void InnerSetResolver(object commonServiceLocator)
    parameters:
    - id: commonServiceLocator
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)
- uid: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
  href: System.Web.Mvc.DependencyResolver.yml
  name: InnerSetResolver(Func<Type, object>, Func<Type, IEnumerable<object>>)
  fullName: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func<System.Type, object>, System.Func<System.Type, System.Collections.Generic.IEnumerable<object>>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/DependencyResolver.cs
    startLine: 108
  syntax:
    content:
      CSharp: public void InnerSetResolver(Func<Type, object> getService, Func<Type, IEnumerable<object>> getServices)
    parameters:
    - id: getService
      type:
        id: System.Func{System.Type,System.Object}
        name: Func<Type, object>
        isExternal: true
    - id: getServices
      type:
        id: System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}}
        name: Func<Type, IEnumerable<object>>
        isExternal: true
  id: System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})
