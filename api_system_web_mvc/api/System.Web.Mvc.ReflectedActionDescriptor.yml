items:
- uid: System.Web.Mvc.ReflectedActionDescriptor
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: ReflectedActionDescriptor
  fullName: System.Web.Mvc.ReflectedActionDescriptor
  type: Class
  source:
    remote: &o0
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      description: 5fa60ca3
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 9
  syntax:
    content:
      CSharp: public class ReflectedActionDescriptor
  inheritance:
  - id: System.Object
    name: System.Object
    isExternal: true
  - id: System.Web.Mvc.ActionDescriptor
    name: ActionDescriptor
    href: System.Web.Mvc.ActionDescriptor.yml
  id: System.Web.Mvc.ReflectedActionDescriptor
  children:
  - System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
  - System.Web.Mvc.ReflectedActionDescriptor.ActionName
  - System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor
  - System.Web.Mvc.ReflectedActionDescriptor.MethodInfo
  - System.Web.Mvc.ReflectedActionDescriptor.UniqueId
  - System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)
  - System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
  - System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)
  - System.Web.Mvc.ReflectedActionDescriptor.GetParameters
  - System.Web.Mvc.ReflectedActionDescriptor.GetSelectors
  - System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)
- uid: System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: ReflectedActionDescriptor(MethodInfo, string, ControllerDescriptor)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.ReflectedActionDescriptor(System.Reflection.MethodInfo, string, System.Web.Mvc.ControllerDescriptor)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 16
  syntax:
    content:
      CSharp: 'public ReflectedActionDescriptor(MethodInfo methodInfo, string actionName, ControllerDescriptor controllerDescriptor): this (methodInfo, actionName, controllerDescriptor, true /* validateMethod */)'
    parameters:
    - id: methodInfo
      type:
        id: System.Reflection.MethodInfo
        name: System.Reflection.MethodInfo
        isExternal: true
    - id: actionName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
  id: System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)
- uid: System.Web.Mvc.ReflectedActionDescriptor.ActionName
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: ActionName
  fullName: System.Web.Mvc.ReflectedActionDescriptor.ActionName
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 50
  syntax:
    content:
      CSharp: public override string ActionName { get; }
    parameters:
    - id: ActionName
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.Web.Mvc.ReflectedActionDescriptor.ActionName
- uid: System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: ControllerDescriptor
  fullName: System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 55
  syntax:
    content:
      CSharp: public override ControllerDescriptor ControllerDescriptor { get; }
    parameters:
    - id: ControllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
  id: System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor
- uid: System.Web.Mvc.ReflectedActionDescriptor.MethodInfo
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: MethodInfo
  fullName: System.Web.Mvc.ReflectedActionDescriptor.MethodInfo
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 60
  syntax:
    content:
      CSharp: public MethodInfo MethodInfo { get; private set; }
    parameters:
    - id: MethodInfo
      type:
        id: System.Reflection.MethodInfo
        name: System.Reflection.MethodInfo
        isExternal: true
  id: System.Web.Mvc.ReflectedActionDescriptor.MethodInfo
- uid: System.Web.Mvc.ReflectedActionDescriptor.UniqueId
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: UniqueId
  fullName: System.Web.Mvc.ReflectedActionDescriptor.UniqueId
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 62
  syntax:
    content:
      CSharp: public override string UniqueId { get; }
    parameters:
    - id: UniqueId
      type:
        id: System.String
        name: System.String
        isExternal: true
  id: System.Web.Mvc.ReflectedActionDescriptor.UniqueId
- uid: System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: Execute(ControllerContext, IDictionary<string, object>)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 81
  syntax:
    content:
      CSharp: public override object Execute(ControllerContext controllerContext, IDictionary<string, object> parameters)
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yml
    - id: parameters
      type:
        id: System.Collections.Generic.IDictionary{System.String,System.Object}
        name: System.Collections.Generic.IDictionary{System.String,System.Object}
        isExternal: true
    return:
      id: Object
  id: System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})
- uid: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: GetCustomAttributes(bool)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 107
  syntax:
    content:
      CSharp: public override object[] GetCustomAttributes(bool inherit)
    parameters:
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return: {}
  id: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)
- uid: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: GetCustomAttributes(Type, bool)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 112
  syntax:
    content:
      CSharp: public override object[] GetCustomAttributes(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return: {}
  id: System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)
- uid: System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: GetFilterAttributes(bool)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 117
  syntax:
    content:
      CSharp: public override IEnumerable<FilterAttribute> GetFilterAttributes(bool useCache)
    parameters:
    - id: useCache
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: IEnumerable
  id: System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)
- uid: System.Web.Mvc.ReflectedActionDescriptor.GetParameters
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: GetParameters()
  fullName: System.Web.Mvc.ReflectedActionDescriptor.GetParameters()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 127
  syntax:
    content:
      CSharp: public override ParameterDescriptor[] GetParameters()
    parameters: []
    return: {}
  id: System.Web.Mvc.ReflectedActionDescriptor.GetParameters
- uid: System.Web.Mvc.ReflectedActionDescriptor.GetSelectors
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: GetSelectors()
  fullName: System.Web.Mvc.ReflectedActionDescriptor.GetSelectors()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 132
  syntax:
    content:
      CSharp: public override ICollection<ActionSelector> GetSelectors()
    parameters: []
    return:
      id: ICollection
  id: System.Web.Mvc.ReflectedActionDescriptor.GetSelectors
- uid: System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)
  href: System.Web.Mvc.ReflectedActionDescriptor.yml
  name: IsDefined(Type, bool)
  fullName: System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type, bool)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/ReflectedActionDescriptor.cs
    startLine: 142
  syntax:
    content:
      CSharp: public override bool IsDefined(Type attributeType, bool inherit)
    parameters:
    - id: attributeType
      type:
        id: System.Type
        name: System.Type
        isExternal: true
    - id: inherit
      type:
        id: System.Boolean
        name: System.Boolean
        isExternal: true
    return:
      id: Boolean
  id: System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)
