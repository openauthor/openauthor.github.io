id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint
href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yaml
name:
  CSharp: OptionalRouteConstraint
qualifiedName:
  CSharp: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint
type: Class
source:
  remote: &o0
    branch: master
    repo: https://git01.codeplex.com/aspnetwebstack
    description: fbv1.1-beta-39-g5fa60ca
  path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
  startLine: 21
summary: Constrains a route by an inner constraint that doesn't fail when an optional parameter is set to its default value.
syntax:
  content:
    CSharp: 'public class OptionalRouteConstraint #endif'
inheritance:
- id: System.Object
  name: System.Object
  isExternal: true
items:
- id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yaml
  name:
    CSharp: OptionalRouteConstraint(System.Web.Routing.IRouteConstraint)
  qualifiedName:
    CSharp: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.OptionalRouteConstraint(System.Web.Routing.IRouteConstraint)
  type: Constructor
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 31
  summary: Initializes a new instance of the [System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint](System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yaml) class.
  syntax:
    content:
      CSharp: public OptionalRouteConstraint(IRouteConstraint innerConstraint)
    parameters:
    - id: innerConstraint
      type:
        id: System.Web.Routing.IRouteConstraint
        name: System.Web.Routing.IRouteConstraint
        isExternal: true
      description: The inner constraint to match if the parameter is not an optional parameter without a value
    return:
      id: Void
- id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yaml
  name:
    CSharp: InnerConstraint
  qualifiedName:
    CSharp: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
  type: Property
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 48
  summary: Gets the inner constraint to match if the parameter is not an optional parameter without a value.
  syntax:
    content:
      CSharp: public IRouteConstraint InnerConstraint { get; private set; }
    parameters:
    - id: InnerConstraint
      type:
        id: System.Web.Routing.IRouteConstraint
        name: System.Web.Routing.IRouteConstraint
        isExternal: true
- id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yaml
  name:
    CSharp: Match
  qualifiedName:
    CSharp: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  type: Method
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 55
  syntax:
    content:
      CSharp: public bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection)
    parameters:
    - id: httpContext
      type:
        id: System.Web.HttpContextBase
        name: System.Web.HttpContextBase
        isExternal: true
    - id: route
      type:
        id: System.Web.Routing.Route
        name: System.Web.Routing.Route
        isExternal: true
    - id: parameterName
      type:
        id: System.String
        name: System.String
        isExternal: true
    - id: values
      type:
        id: System.Web.Routing.RouteValueDictionary
        name: System.Web.Routing.RouteValueDictionary
        isExternal: true
    - id: routeDirection
      type:
        id: System.Web.Routing.RouteDirection
        name: System.Web.Routing.RouteDirection
        isExternal: true
    return:
      id: Boolean
