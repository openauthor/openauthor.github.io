items:
- uid: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yml
  name: OptionalRouteConstraint
  fullName: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint
  type: Class
  source:
    remote: &o0
      path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      key: 5fa60ca3
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 21
  summary: Constrains a route by an inner constraint that doesn't fail when an optional parameter is set to its default value.
  syntax:
    content:
      CSharp: 'public class OptionalRouteConstraint : IRouteConstraint'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint
  children:
  - System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)
  - System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
  - System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
- uid: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yml
  name: OptionalRouteConstraint(IRouteConstraint)
  fullName: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.OptionalRouteConstraint(System.Web.Routing.IRouteConstraint)
  type: Constructor
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 31
  summary: Initializes a new instance of the [System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint](System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yml) class.
  syntax:
    content:
      CSharp: public OptionalRouteConstraint(IRouteConstraint innerConstraint)
    parameters:
    - id: innerConstraint
      type:
        id: System.Web.Routing.IRouteConstraint
        name: IRouteConstraint
        isExternal: true
      description: The inner constraint to match if the parameter is not an optional parameter without a value
  id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)
- uid: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yml
  name: InnerConstraint
  fullName: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
  type: Property
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 48
  summary: Gets the inner constraint to match if the parameter is not an optional parameter without a value.
  syntax:
    content:
      CSharp: public IRouteConstraint InnerConstraint { get; }
    parameters:
    - id: InnerConstraint
      type:
        id: System.Web.Routing.IRouteConstraint
        name: IRouteConstraint
        isExternal: true
  id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint
- uid: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
  href: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.yml
  name: Match(HttpContextBase, Route, string, RouteValueDictionary, RouteDirection)
  fullName: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase, System.Web.Routing.Route, string, System.Web.Routing.RouteValueDictionary, System.Web.Routing.RouteDirection)
  type: Method
  source:
    remote: *o0
    path: src/Common/Routing/Constraints/OptionalRouteConstraint.cs
    startLine: 55
  syntax:
    content:
      CSharp: public bool Match(HttpContextBase httpContext, Route route, string parameterName, RouteValueDictionary values, RouteDirection routeDirection)
    parameters:
    - id: httpContext
      type:
        id: System.Web.HttpContextBase
        name: HttpContextBase
        isExternal: true
    - id: route
      type:
        id: System.Web.Routing.Route
        name: Route
        isExternal: true
    - id: parameterName
      type:
        id: System.String
        name: string
        isExternal: true
    - id: values
      type:
        id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        isExternal: true
    - id: routeDirection
      type:
        id: System.Web.Routing.RouteDirection
        name: RouteDirection
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)
