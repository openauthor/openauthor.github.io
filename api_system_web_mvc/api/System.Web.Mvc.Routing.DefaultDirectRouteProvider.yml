items:
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: DefaultDirectRouteProvider
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider
  type: Class
  source:
    remote: &o0
      path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      key: 5fa60ca3
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 11
  syntax:
    content:
      CSharp: 'public class DefaultDirectRouteProvider : IDirectRouteProvider'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider
  children:
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)
  - System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetDirectRoutes(ControllerDescriptor, IReadOnlyList<ActionDescriptor>, IInlineConstraintResolver)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor, System.Collections.Generic.IReadOnlyList<System.Web.Mvc.ActionDescriptor>, System.Web.Mvc.Routing.IInlineConstraintResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 31
  summary: >-
    Gets direct routes for the given controller descriptor and action descriptors based on

    [System.Web.Mvc.Routing.IDirectRouteFactory](System.Web.Mvc.Routing.IDirectRouteFactory.yml) attributes.
  syntax:
    content:
      CSharp: public virtual IReadOnlyList<RouteEntry> GetDirectRoutes(ControllerDescriptor controllerDescriptor, IReadOnlyList<ActionDescriptor> actionDescriptors, IInlineConstraintResolver constraintResolver)
    parameters:
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
      description: The controller descriptor.
    - id: actionDescriptors
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor}
        name: IReadOnlyList<ActionDescriptor>
        isExternal: true
      description: The action descriptors for all actions.
    - id: constraintResolver
      type:
        id: System.Web.Mvc.Routing.IInlineConstraintResolver
        name: IInlineConstraintResolver
        href: System.Web.Mvc.Routing.IInlineConstraintResolver.yml
      description: The constraint resolver.
    return:
      id: IReadOnlyList
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.RouteEntry}
        name: IReadOnlyList<RouteEntry>
        isExternal: true
      description: A set of route entries.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetControllerRouteFactories(ControllerDescriptor)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 88
  summary: Gets route factories for the given controller descriptor.
  syntax:
    content:
      CSharp: protected virtual IReadOnlyList<IDirectRouteFactory> GetControllerRouteFactories(ControllerDescriptor controllerDescriptor)
    parameters:
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
      description: The controller descriptor.
    return:
      id: IReadOnlyList
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory}
        name: IReadOnlyList<IDirectRouteFactory>
        isExternal: true
      description: A set of route factories.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetActionRouteFactories(ActionDescriptor)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 119
  summary: Gets a set of route factories for the given action descriptor.
  syntax:
    content:
      CSharp: protected virtual IReadOnlyList<IDirectRouteFactory> GetActionRouteFactories(ActionDescriptor actionDescriptor)
    parameters:
    - id: actionDescriptor
      type:
        id: System.Web.Mvc.ActionDescriptor
        name: ActionDescriptor
        href: System.Web.Mvc.ActionDescriptor.yml
      description: The action descriptor.
    return:
      id: IReadOnlyList
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory}
        name: IReadOnlyList<IDirectRouteFactory>
        isExternal: true
      description: A set of route factories.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetControllerDirectRoutes(ControllerDescriptor, IReadOnlyList<ActionDescriptor>, IReadOnlyList<IDirectRouteFactory>, IInlineConstraintResolver)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor, System.Collections.Generic.IReadOnlyList<System.Web.Mvc.ActionDescriptor>, System.Collections.Generic.IReadOnlyList<System.Web.Mvc.Routing.IDirectRouteFactory>, System.Web.Mvc.Routing.IInlineConstraintResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 160
  summary: >-
    Creates [System.Web.Mvc.Routing.RouteEntry](System.Web.Mvc.Routing.RouteEntry.yml) instances based on the provided factories, controller and actions. The route

    entries provided direct routing to the provided controller and can reach the set of provided actions.
  syntax:
    content:
      CSharp: protected virtual IReadOnlyList<RouteEntry> GetControllerDirectRoutes(ControllerDescriptor controllerDescriptor, IReadOnlyList<ActionDescriptor> actionDescriptors, IReadOnlyList<IDirectRouteFactory> factories, IInlineConstraintResolver constraintResolver)
    parameters:
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
      description: The controller descriptor.
    - id: actionDescriptors
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor}
        name: IReadOnlyList<ActionDescriptor>
        isExternal: true
      description: The action descriptors.
    - id: factories
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory}
        name: IReadOnlyList<IDirectRouteFactory>
        isExternal: true
      description: The direct route factories.
    - id: constraintResolver
      type:
        id: System.Web.Mvc.Routing.IInlineConstraintResolver
        name: IInlineConstraintResolver
        href: System.Web.Mvc.Routing.IInlineConstraintResolver.yml
      description: The constraint resolver.
    return:
      id: IReadOnlyList
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.RouteEntry}
        name: IReadOnlyList<RouteEntry>
        isExternal: true
      description: A set of route entries.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetActionDirectRoutes(ActionDescriptor, IReadOnlyList<IDirectRouteFactory>, IInlineConstraintResolver)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor, System.Collections.Generic.IReadOnlyList<System.Web.Mvc.Routing.IDirectRouteFactory>, System.Web.Mvc.Routing.IInlineConstraintResolver)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 183
  summary: >-
    Creates [System.Web.Mvc.Routing.RouteEntry](System.Web.Mvc.Routing.RouteEntry.yml) instances based on the provided factories and action. The route entries

    provide direct routing to the provided action.
  syntax:
    content:
      CSharp: protected virtual IReadOnlyList<RouteEntry> GetActionDirectRoutes(ActionDescriptor actionDescriptor, IReadOnlyList<IDirectRouteFactory> factories, IInlineConstraintResolver constraintResolver)
    parameters:
    - id: actionDescriptor
      type:
        id: System.Web.Mvc.ActionDescriptor
        name: ActionDescriptor
        href: System.Web.Mvc.ActionDescriptor.yml
      description: The action descriptor.
    - id: factories
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory}
        name: IReadOnlyList<IDirectRouteFactory>
        isExternal: true
      description: The direct route factories.
    - id: constraintResolver
      type:
        id: System.Web.Mvc.Routing.IInlineConstraintResolver
        name: IInlineConstraintResolver
        href: System.Web.Mvc.Routing.IInlineConstraintResolver.yml
      description: The constraint resolver.
    return:
      id: IReadOnlyList
      type:
        id: System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.RouteEntry}
        name: IReadOnlyList<RouteEntry>
        isExternal: true
      description: A set of route entries.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetRoutePrefix(ControllerDescriptor)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 202
  summary: Gets the route prefix from the provided controller.
  syntax:
    content:
      CSharp: protected virtual string GetRoutePrefix(ControllerDescriptor controllerDescriptor)
    parameters:
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
      description: The controller descriptor.
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: The route prefix or null.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)
- uid: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)
  href: System.Web.Mvc.Routing.DefaultDirectRouteProvider.yml
  name: GetAreaPrefix(ControllerDescriptor)
  fullName: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/Routing/DefaultDirectRouteProvider.cs
    startLine: 255
  summary: Gets the area prefix from the provided controller.
  syntax:
    content:
      CSharp: protected virtual string GetAreaPrefix(ControllerDescriptor controllerDescriptor)
    parameters:
    - id: controllerDescriptor
      type:
        id: System.Web.Mvc.ControllerDescriptor
        name: ControllerDescriptor
        href: System.Web.Mvc.ControllerDescriptor.yml
      description: The controller descriptor.
    return:
      id: String
      type:
        id: System.String
        name: string
        isExternal: true
      description: The area prefix or null.
  id: System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)
