items:
- uid: System.Web.Mvc.TempDataDictionary
  href: System.Web.Mvc.TempDataDictionary.yml
  name: TempDataDictionary
  fullName: System.Web.Mvc.TempDataDictionary
  type: Class
  source:
    remote: &o0
      path: src/System.Web.Mvc/TempDataDictionary.cs
      branch: master
      repo: https://git01.codeplex.com/aspnetwebstack
      key: 5fa60ca3
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 8
  syntax:
    content:
      CSharp: 'public class TempDataDictionary : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable'
  inheritance:
  - id: System.Object
    name: object
    isExternal: true
  id: System.Web.Mvc.TempDataDictionary
  children:
  - System.Web.Mvc.TempDataDictionary.#ctor
  - System.Web.Mvc.TempDataDictionary.Count
  - System.Web.Mvc.TempDataDictionary.Keys
  - System.Web.Mvc.TempDataDictionary.Values
  - System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  - System.Web.Mvc.TempDataDictionary.Item(System.String)
  - System.Web.Mvc.TempDataDictionary.Keep
  - System.Web.Mvc.TempDataDictionary.Keep(System.String)
  - System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
  - System.Web.Mvc.TempDataDictionary.Peek(System.String)
  - System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
  - System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)
  - System.Web.Mvc.TempDataDictionary.Clear
  - System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)
  - System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)
  - System.Web.Mvc.TempDataDictionary.GetEnumerator
  - System.Web.Mvc.TempDataDictionary.Remove(System.String)
  - System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)
  - System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator
- uid: System.Web.Mvc.TempDataDictionary.#ctor
  href: System.Web.Mvc.TempDataDictionary.yml
  name: TempDataDictionary()
  fullName: System.Web.Mvc.TempDataDictionary.TempDataDictionary()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 16
  syntax:
    content:
      CSharp: public TempDataDictionary()
    parameters: []
  id: System.Web.Mvc.TempDataDictionary.#ctor
- uid: System.Web.Mvc.TempDataDictionary.Count
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Count
  fullName: System.Web.Mvc.TempDataDictionary.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 21
  syntax:
    content:
      CSharp: public int Count { get; }
    parameters:
    - id: Count
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Count
- uid: System.Web.Mvc.TempDataDictionary.Keys
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Keys
  fullName: System.Web.Mvc.TempDataDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 26
  syntax:
    content:
      CSharp: public ICollection<string> Keys { get; }
    parameters:
    - id: Keys
      type:
        id: System.Collections.Generic.ICollection{System.String}
        name: ICollection<string>
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Keys
- uid: System.Web.Mvc.TempDataDictionary.Values
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Values
  fullName: System.Web.Mvc.TempDataDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 31
  syntax:
    content:
      CSharp: public ICollection<object> Values { get; }
    parameters:
    - id: Values
      type:
        id: System.Collections.Generic.ICollection{System.Object}
        name: ICollection<object>
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Values
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ICollection<KeyValuePair<string, object>>.IsReadOnly
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 36
  syntax:
    content:
      CSharp: bool ICollection<KeyValuePair<string, object>>.IsReadOnly { get; }
    parameters:
    - id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
- uid: System.Web.Mvc.TempDataDictionary.Item(System.String)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: this[string]
  fullName: System.Web.Mvc.TempDataDictionary.this[string]
  type: Property
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 41
  syntax:
    content:
      CSharp: public object this[string key] { get; set; }
    parameters:
    - id: this[]
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Item(System.String)
- uid: System.Web.Mvc.TempDataDictionary.Keep
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Keep()
  fullName: System.Web.Mvc.TempDataDictionary.Keep()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 60
  syntax:
    content:
      CSharp: public void Keep()
    parameters: []
  id: System.Web.Mvc.TempDataDictionary.Keep
- uid: System.Web.Mvc.TempDataDictionary.Keep(System.String)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Keep(string)
  fullName: System.Web.Mvc.TempDataDictionary.Keep(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 66
  syntax:
    content:
      CSharp: public void Keep(string key)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Keep(System.String)
- uid: System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Load(ControllerContext, ITempDataProvider)
  fullName: System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext, System.Web.Mvc.ITempDataProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 71
  syntax:
    content:
      CSharp: public void Load(ControllerContext controllerContext, ITempDataProvider tempDataProvider)
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yml
    - id: tempDataProvider
      type:
        id: System.Web.Mvc.ITempDataProvider
        name: ITempDataProvider
        href: System.Web.Mvc.ITempDataProvider.yml
  id: System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
- uid: System.Web.Mvc.TempDataDictionary.Peek(System.String)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Peek(string)
  fullName: System.Web.Mvc.TempDataDictionary.Peek(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 81
  syntax:
    content:
      CSharp: public object Peek(string key)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Object
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Peek(System.String)
- uid: System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Save(ControllerContext, ITempDataProvider)
  fullName: System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext, System.Web.Mvc.ITempDataProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 88
  syntax:
    content:
      CSharp: public void Save(ControllerContext controllerContext, ITempDataProvider tempDataProvider)
    parameters:
    - id: controllerContext
      type:
        id: System.Web.Mvc.ControllerContext
        name: ControllerContext
        href: System.Web.Mvc.ControllerContext.yml
    - id: tempDataProvider
      type:
        id: System.Web.Mvc.ITempDataProvider
        name: ITempDataProvider
        href: System.Web.Mvc.ITempDataProvider.yml
  id: System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)
- uid: System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Add(string, object)
  fullName: System.Web.Mvc.TempDataDictionary.Add(string, object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 101
  syntax:
    content:
      CSharp: public void Add(string key, object value)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)
- uid: System.Web.Mvc.TempDataDictionary.Clear
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Clear()
  fullName: System.Web.Mvc.TempDataDictionary.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 107
  syntax:
    content:
      CSharp: public void Clear()
    parameters: []
  id: System.Web.Mvc.TempDataDictionary.Clear
- uid: System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ContainsKey(string)
  fullName: System.Web.Mvc.TempDataDictionary.ContainsKey(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 114
  syntax:
    content:
      CSharp: public bool ContainsKey(string key)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)
- uid: System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ContainsValue(object)
  fullName: System.Web.Mvc.TempDataDictionary.ContainsValue(object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 119
  syntax:
    content:
      CSharp: public bool ContainsValue(object value)
    parameters:
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)
- uid: System.Web.Mvc.TempDataDictionary.GetEnumerator
  href: System.Web.Mvc.TempDataDictionary.yml
  name: GetEnumerator()
  fullName: System.Web.Mvc.TempDataDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 124
  syntax:
    content:
      CSharp: public IEnumerator<KeyValuePair<string, object>> GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
        name: IEnumerator<KeyValuePair<string, object>>
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.GetEnumerator
- uid: System.Web.Mvc.TempDataDictionary.Remove(System.String)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: Remove(string)
  fullName: System.Web.Mvc.TempDataDictionary.Remove(string)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 129
  syntax:
    content:
      CSharp: public bool Remove(string key)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.Remove(System.String)
- uid: System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: TryGetValue(string, out object)
  fullName: System.Web.Mvc.TempDataDictionary.TryGetValue(string, out object)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 136
  syntax:
    content:
      CSharp: public bool TryGetValue(string key, out object value)
    parameters:
    - id: key
      type:
        id: System.String
        name: string
        isExternal: true
    - id: value
      type:
        id: System.Object
        name: object
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ICollection<KeyValuePair<string, object>>.CopyTo(KeyValuePair<string, object>[], int)
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>.CopyTo(System.Collections.Generic.KeyValuePair<string, object>[], int)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 142
  syntax:
    content:
      CSharp: void ICollection<KeyValuePair<string, object>>.CopyTo(KeyValuePair<string, object>[] array, int index)
    parameters:
    - id: array
      type:
        id: System.Array
        name: KeyValuePair<string, object>[]
        isExternal: true
    - id: index
      type:
        id: System.Int32
        name: int
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ICollection<KeyValuePair<string, object>>.Add(KeyValuePair<string, object>)
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>.Add(System.Collections.Generic.KeyValuePair<string, object>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 147
  syntax:
    content:
      CSharp: void ICollection<KeyValuePair<string, object>>.Add(KeyValuePair<string, object> keyValuePair)
    parameters:
    - id: keyValuePair
      type:
        id: System.Collections.Generic.KeyValuePair{System.String,System.Object}
        name: KeyValuePair<string, object>
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ICollection<KeyValuePair<string, object>>.Contains(KeyValuePair<string, object>)
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>.Contains(System.Collections.Generic.KeyValuePair<string, object>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 153
  syntax:
    content:
      CSharp: bool ICollection<KeyValuePair<string, object>>.Contains(KeyValuePair<string, object> keyValuePair)
    parameters:
    - id: keyValuePair
      type:
        id: System.Collections.Generic.KeyValuePair{System.String,System.Object}
        name: KeyValuePair<string, object>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  href: System.Web.Mvc.TempDataDictionary.yml
  name: ICollection<KeyValuePair<string, object>>.Remove(KeyValuePair<string, object>)
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, object>>.Remove(System.Collections.Generic.KeyValuePair<string, object>)
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 158
  syntax:
    content:
      CSharp: bool ICollection<KeyValuePair<string, object>>.Remove(KeyValuePair<string, object> keyValuePair)
    parameters:
    - id: keyValuePair
      type:
        id: System.Collections.Generic.KeyValuePair{System.String,System.Object}
        name: KeyValuePair<string, object>
        isExternal: true
    return:
      id: Boolean
      type:
        id: System.Boolean
        name: bool
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
- uid: System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator
  href: System.Web.Mvc.TempDataDictionary.yml
  name: IEnumerable.GetEnumerator()
  fullName: System.Web.Mvc.TempDataDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Web.Mvc/TempDataDictionary.cs
    startLine: 164
  syntax:
    content:
      CSharp: IEnumerator IEnumerable.GetEnumerator()
    parameters: []
    return:
      id: IEnumerator
      type:
        id: System.Collections.IEnumerator
        name: IEnumerator
        isExternal: true
  id: System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator
